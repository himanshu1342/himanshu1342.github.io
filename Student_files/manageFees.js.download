/**
 * @Name: manageFees.js
 * @since 7th April 2012
 * @function_list : 1. populateCourseList(cmbId) 2. getAcademicYear() 3.
 *                showAcademicBatch() 4. addEditNewFeeStructure() 5.
 *                initFeeItemDetailGrid(revision) 6.
 *                initFeesDiscountConfigurationGrid() 7. getFeeStructureItem()
 *                8. mainGridResponseAfterSubmit(response,postData) 9.
 *                subGridResponseAfterSubmit(response,postData) 10.
 *                populateCategoryList() 11.
 *                checkAndInsertFeeItemReservationDiscount() 12.
 *                discountGridResponse(response,postData) 13.
 *                getFeeItemReservationDiscountList(jArray) 14.
 *                validateDiscountGrid(value,colName) 15.
 *                validateFeeStructureGrid(value,colName) 16.
 *                getTotalSubItemSum(grid) 17.
 *                setTotalSubItemAmount(totalAmount) 18.
 *                updateTotalPayableAmount() 19. setTotalAmount(amount) 20.
 *                openAddFeeItemHeadForm() 21. closeFeeItemHeadForm() 22.
 *                addOrgFeeItemHeadForHeadAdmin() 23.
 *                getOrganizationFeeItemHeadList() 24. getSponsoringBodyList()
 *                25. getStudentListByBatch() 26. showStudentInvoiceForm() 27.
 *                getStudentBillingDetails() 28.
 *                showStudentBillingDetails(jArray) 29. showAddBillForm() 30.
 *                hideBillingInformationForm() 31. renderPaymentDetails() 32.
 *                allocateResourseToBillingForm() 33.
 *                validateStudentBillingForm() 34. renderChequeDetailEntryForm()
 *                35. renderDDDetailEntryForm() 36.
 *                saveStudentBillingInformation() 37. showInvoicePrintDialog()
 *                38. closeInvoicePrintDialog() 39. generateStudentInvoice() 40.
 *                getStudentInvoiceByBarcode() 41. printInvoiceAsPdf() 42.
 *                getStudentPayableAmount() 43. setStudentPayableAmount(amount)
 *                44. getStudentInvoiceHeader() 45.
 *                retrieveStudentInvoiceHeader() 46.
 *                getInvoiceDetailsByCategory() 47. getInvoiceDetailsByBarcode()
 *                48. getStudentInvoiceId() 49. setStudentInvoiceId(invoiceId)
 *                50. calculateTotalFeeRecievable() 51.
 *                getFeeStructureFreezeStatus() 52.
 *                setFeeStructureFreezeStatus(freezeStatus) 53.
 *                setFeeStructureRevision(revisionNo) 54.
 *                getFeeStructureRevision() 55. disableRevisionButton() 56.
 *                enableRevisionButton() 57. updateFeeStructureRevision() 58.
 *                generateInvoiceCheckPoint() 59. freezeFeeStructure(v,m,f) 60.
 *                setFeeItemGridTitle(text) 61. getFeeItemGridTitle() 62.
 *                checkForStudentFeeInvoiceGeneration() 63.
 *                enableStudentFeeInvoiceGenerateButton() 64.
 *                disableStudentFeeInvoiceGenerateButton() 65.
 *                generateStudentInvoiceBillNo(billId) 66.
 *                setStudentPaidAmount(paidAmount) 67. getStudentPaidAmount()
 *                68. setDefaultStructureName()
 */

$(document).ready(function() {

	
	$('#otherReceiptModal').modal({
		backdrop : 'static',
		keyboard : false,
		show : false
	}).css({
		width : '500px',
		'margin-left' : function() {
			return -($(this).width() / 2);
		}
	});
});

var gPaymentOption = {
	PAYMENT_OPTION_FULL : "FULL",
	PAYMENT_OPTION_INSTALLMENT : "INSTALLMENT"
};

var gStudentFetchFlag = true;
var gBankArray = new Array;
$(function() {
	$('#txtFeeApplicableDate').datepicker({
		changeMonth : true,
		changeYear : true,
		showButtonPanel : true,
		dateFormat : 'dd MM yy',
		yearRange : "-10:+10",
		altField : "#txtFeeApplicableDatehidden",
		altFormat : "yy-mm-dd"
	});
	
	$("#txtapplicationDate").datepicker({
		dateFormat: "M dd,yy",
		changeMonth: true,
		changeYear: true,
	});
	
	/*$('#txtapplicationDate').datepicker({
       dateFormat : "M d, yy",
       inline : true,
       changeMonth : true,
       changeYear : true,
   //    maxDate:new Date(),
       yearRange : "-80:+0",
       firstDay : 1,
   });*/

	$('#cmbFeeSructure').change(function() {
		var feeStructureId = $(this).val();
		if (feeStructureId != '0' && feeStructureId != '') {
			setFeeStructureData(feeStructureDataArray[feeStructureId]);
		}
	});

});

/**
 * @globals
 */
var cnt = 1;
var particularsList = new Array();
var gSponsoringBodyList = new Array();
var gStudentTotalPayableAmount = 0.0;
var gStudentRemainingPayableAmount = 0.0;
var gStudentPaidAmount = 0.0;
var gInvoiceRevisionNo = '0';
var gFeeStructureStatus = 'unfreezed';
var gSubgridId = '';
var gRowId = '';
var gTotalFlatPayableAmount = 0.0;

var feeInstallmentType = {
	Manual : '1',
	Percentage : '2',
	Percentage_with_fee_item : '3'
};

var feeStructureDataArray = new Array();
/*
 * $.ajax({ url: 'getMasterFeeItemList.json', //url is called mapped at
 * controller dataType:'json', async:false, success:function(jArray){ var len =
 * jArray.length; //////////////alert("Head List: "+len); particularsList +=
 * -1+':Select;'; if(len == 0) { particularsList += '0:New Item'; } for(var i =
 * 0; i < len; i++) { ////////////////alert("Hi:
 * "+jArray[i]["feeItemHeadUniverseObj"]["name"]); particularsList +=
 * jArray[i]["feeItemHeadUniverseId"]+':'+jArray[i]["name"]+''; if(i == (len -
 * 1)) { particularsList += ';0:New Item'; } else { particularsList += ';'; } } },
 * error:function(){
 *  } });
 */

/**
 * @name: populateCourseList()
 * @Author: Vimal Kr.
 * @date: 7th-apr-2012
 */
function FeeStructureDetails(StudentId){
	$.ajax({
		url:'getfeestructureDetailsbyStudentIdforsettelent.json',
		dataType:'json',
		data:{StudentId:StudentId},
		type:'POST',
		async:false,
		beforeSend : function() {
			startCommonAjaxSpinner();
			$('#btn_SaveAcceptBCTransanction').hide();
		},
		complete : function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			
			var typepfmapped='<option value="0">Select</option>';
			for(var i=0;i<jArray.length;i++){
				typepfmapped += '<option value = "'+jArray[i]["studentFeeInvoiceId"]+'">'+jArray[i]["feestructurename"]+'</option>';
			}
			$('#feestructure').html(typepfmapped);
			//convertComboToSearchable('#feestructure');
			
		}
		
	});
	
}
function checkForExistingFinancePolicy(callback) {
	var instiCourseId = $('#cbInstiCourseId option:selected').val().split("-")[0];
	$.ajax({
		url : 'checkForExistingFinancePolicy.json?instiCourseId='
				+ instiCourseId,
		dataType : 'json',
		beforeSend : function() {
			startCommonAjaxSpinner();
		},
		complete : function() {
			stopCommonAjaxSpinner();
		},
		success : function(jObj) {
			callback(jObj);
		},
		error : function() {
			// //////////////jAlert("Something went wrong, Please try after some
			// time","Error");
		}
	});
}
function populateCourseList(cmbId) {
	$.ajax({
		url : 'getCourseNameByUserLogedin.json',
		dataType : 'json',
		beforeSend : function() {
			startCommonAjaxSpinner();
		},
		complete : function() {
			stopCommonAjaxSpinner();
		},
		success : function(jsonInstiCourseArray) {
			var len = jsonInstiCourseArray.length;
			var courseComboBoiler = '<option value="0">Select</option>';
			for ( var i = 0; i < len; i++) {
				courseComboBoiler += '<option value="'
						+ jsonInstiCourseArray[i]["id"] + '">'
						+ jsonInstiCourseArray[i]["value"] + '</option>';
			}
			$('#' + cmbId).html(courseComboBoiler);
			$('#txtFeeYear').val('');
			$('#txtFeeStructureDescription').val('');
		},
		error : function() {
			// //////////////jAlert("Something went wrong, Please try after some
			// time","Error");
		}
	});
}

/**
 * @name getAcademicYear()
 * @Author: Vimal Kr.
 * @since 7th Apr 2012
 * @purpose it shows the acdemic year on the basis of the course duration. e.g:
 *          If course duration is 3 year then, it will show three year count.
 */

function getAcademicYear() {
	var courseDuration = getCourseDuration();
	// alert("Course Duration: "+courseDuration);
	var noOfYear = '<option value = "0">Select</option>';
	for ( var i = 0; i < courseDuration; i++) {
		noOfYear += '<option value = "' + (i + 1) + '">' + (i + 1);
		switch (i + 1) {
		case 1:
			noOfYear += 'st';
			break;
		case 2:
			noOfYear += 'nd';
			break;
		case 3:
			noOfYear += 'rd';
			break;
		default:
			noOfYear += 'th';
			break;
		jQuery("#grid_id").setColumns(options);
		;
	}
	noOfYear += ' year</option>';
}
$('#cmbAcademicYear').html(noOfYear);
}

/**
 * @name showAcademicBatch()
 * @Author: Vimal Kr.
 * @since 7th Apr 2012
 * @purpose for showing academic batch in the fourth section of the header. It
 *          changes on the academic year change
 */
function showAcademicBatch() {

/**
 * Change: Now here both create and edit fee structure is decided. If
 * feeStructure Exist edit form will come and if not create form will come
 */
	var customerIdentificationObj = $('#customerHelper').val();
	var linkSrc = document.URL.toString().split('?')[1].toString().split('=')[1];
	var strAcademicYearVal = 0;
	if(customerIdentificationObj != '' && ( customerIdentificationObj == 'IMT_DUBAI' || customerIdentificationObj == 'IMT_NAGPUR' || customerIdentificationObj =='ABS' || customerIdentificationObj =='XISS')  && linkSrc != undefined && linkSrc == 'all')
		strAcademicYearVal = $('#cmbAcademicBatch option:selected').attr('fromacademicyear');
	else
		strAcademicYearVal = $('#cmbYear').val();

if (strAcademicYearVal != undefined && strAcademicYearVal != '0') {
	var strAcademicYearValArray = strAcademicYearVal.split('-');
	/** ** Create fee structure condition *** */
	if (strAcademicYearValArray.length == 1) {
		getFeeStructureCreateForm(function(boiler) {
			var startYear = strAcademicYearValArray[0];
			// alert(startYear);
			// var instituteCourseId = getSelectedInstituteCourseId();
			// var yearNo = parseInt($('#cmbAcademicYear').val());
			// var year = parseInt($('#cmbYear').val());
			// endYear = startYear + courseDuration;
			endYear = parseInt(startYear) + 1;
			if(customerIdentificationObj != '' && ( customerIdentificationObj =='IMT_DUBAI'||  customerIdentificationObj == 'IMT_NAGPUR' || customerIdentificationObj =='ABS' ) && linkSrc != undefined && linkSrc == 'all')
				endYear = $('#cmbAcademicBatch option:selected').attr('toacademicyear');
			var academicBatch = startYear + "-" + endYear;
			$('#txtFeesYear').val(academicBatch);
			$('#lblFeesYear').html(startYear + '&nbsp;-&nbsp;' + endYear);
			$('#lblFeesYear').data('FeesYear', startYear + '-' + endYear);
			$('.batch').show();
			// ////////////alert(jArray.length);
			var instituteStrenghId = $('#cmbAcademicBatch').val().split('-')[0];
			var instituteCourseId = $('#cbInstiCourseId option:selected').val();
			// ////////////alert("instituteStrenghId: "+instituteStrenghId);
			if (instituteStrenghId != undefined) {
				var fromYear = parseInt($('#cmbYear').val());
				if(customerIdentificationObj != '' && (customerIdentificationObj =='IMT_DUBAI'|| customerIdentificationObj == 'IMT_NAGPUR'|| customerIdentificationObj =='ABS') && linkSrc != undefined && linkSrc == 'all')
					fromYear = startYear;
				$
						.ajax({
							url : 'getFeeStructureDescription.json?fromYear='
									+ fromYear + '&instituteStrenghId='
									+ instituteStrenghId,
							dataType : 'json',
							beforeSend : function() {
								startCommonAjaxSpinner();
							},
							complete : function() {
								stopCommonAjaxSpinner();
							},
							async : false,
							success : function(jArray) {
								var flag = jArray[0]["responseFlag"];
								// //////////alert(flag);
								// jQuery("#sg2").jqGrid('clearGridData');
								// jQuery("#sg2").GridUnload('sg2');
								// //////////////alert("Fee Item Id:
								// "+jArray[0]["feeItemId"]);
								if (flag == 1) {
									/*
									 * $('#txtFeeStructureDescription').val(jArray[1]["description"]);
									 * if(jArray[1]["extraDescription"] !=
									 * undefined){
									 * CKEDITOR.instances.editing_field1.setData(jArray[1]["extraDescription"]); }
									 * CKEDITOR.instances.editing_field1.setReadOnly(false);
									 * var date =
									 * jArray[1]["feeCommencementDate"]; if(date !=
									 * undefined){
									 * $('#txtFeeApplicableDate').val($.datepicker.formatDate('dd
									 * MM yy',new Date(Date.parse(date)))); }
									 * $('#txtFeeStructureDescription').attr('disabled','disabled');
									 * $('#txtFeeStructureDescription').data('FeeItemId',jArray[1]["feeItemId"]);
									 * $('#txtFeeStructureDescription').data('InstituteCourseStrengthId',jArray[1]["instituteCourseStrengthObj"]["instituteCourseStrengthId"]);
									 * $('#btnFeeItemStructureEdit').show();
									 */
									// jAlert('Fee structure already exists');
									$('#divCreateFeeSructureFormGrid').remove();
								} else {
									if ($('#divCreateFeeSructureFormGrid')
											.html() != null) {
										$('#divCreateFeeSructureFormGrid')
												.remove();
									}

									$('#divFeeSructureCreate').append(boiler);
									createEditor('editing_field1');
									$('#txtFeeApplicableDate')
											.datepicker(
													{
														changeMonth : true,
														changeYear : true,
														showButtonPanel : true,
														dateFormat : 'dd M yy',
														yearRange : "-10:+10",
														altField : "#txtFeeApplicableDatehidden",
														altFormat : "yy-mm-dd",
														onSelect: function(selected) {
															$('#txtFeeApplicableDateTo').datepicker("option", "minDate", selected);
														}
													});
										try {										
								
									$('#txtFeeApplicableDateTo')
									.datepicker(
											{
												changeMonth : true,
												changeYear : true,
												showButtonPanel : true,
												dateFormat : 'dd M yy',
												yearRange : "-10:+10",
												altField : "#txtFeeApplicableDateTohidden",
												altFormat : "yy-mm-dd"
											});
										} catch (e) {
											// TODO: handle exception
										}
										
										$("#chkAdvanceAllowed").attr("disabled", false);
									setDefaultStructureName();

									$('#btnFeeItemStructureEdit').hide();
									setDefaultStructureName();
									CKEDITOR.instances.editing_field1
											.setData("");
									CKEDITOR.instances.editing_field1
											.setReadOnly(false);
									$('#txtFeeStructureDescription')
											.removeAttr('disabled');
									$('#txtFeeStructureDescription').data(
											'FeeItemId', 0);
									$('#txtFeeStructureDescription').data(
											'InstituteCourseStrengthId',
											instituteStrenghId);
									$('#txtFeeStructureDescription').data(
											'instituteCourseId',
											instituteCourseId);
									$('#trGenerateFeeStructure').show();// Showing
																		// the
																		// create
																		// fees
																		// structure
																		// button
																		// row
									$('.editFeeElement').hide();
								}

								/**
								 * checking for user role
								 */

								var userRole = $('#hdnUserRole').val();
								if (userRole == 'empadmin'
										|| userRole == 'nonteaching') {
									CKEDITOR.instances.editing_field1
											.setReadOnly(true);
									$('#txtFeeStructureDescription').attr(
											'disabled', 'disabled');
									$('#btnFeeItemStructureEdit').hide();
									$('#txtFeeApplicableDate').attr('disabled',
											'disabled');
								}
								showInformation(
										jArray[0]["responseText"],
										15000);
							},
							error : function() {

							}
						});
			} else {
				$('#txtFeeStructureDescription').val('');
				$('#txtFeeStructureDescription').attr('disabled', 'disabled');
				jAlert("Selected batch(" + startYear + "-" + endYear
						+ ") does not exist. Please create first");
			}
		});

	} else if (strAcademicYearValArray.length == 2) { // Edit
		var feeStructureObj = $('#cmbYear option:selected').data(
				'FeeStructureObject');
		// selectedRowClass = 'row-'+feeStructureObj.feeItemId;
		// showFeeStructureEditDialog(feeStructureObj);
		showFeeStructureEditForm(feeStructureObj);
		// alert('Eidt');
	}

}

}

/**
 * @name addEditNewFeeStructure()
 * @date 5th Apr 2012
 * @Author: Vimal Kr.
 * @purpose to add edit new fee structure
 */
function addEditNewFeeStructure(jObject, callback) {
var feeItemId = 0;
var instituteCourseId = 0;
var instituteCourseStrengthId = 0;
var fromYear = 0;
var description = '';
var details = "";
var applicableDate = '';
var applicableDateTo = '';
var isSeparateReciept = 'true';
var accounthead=0;
var proratadata='';
accounthead=$('#cmbFinancePolicya').val();
var advanceamount=$('#advanceamount').val();
var advanceEndDate=$('#advanceEndDate').val();
proratadata=$('#ProRetaDate').val();
if (jObject == undefined) {
	$('#manageFeesTabs').show();
	// ////////////alert("In add Edit1");
	feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	// alert('feeItemId: '+feeItemId);
	instituteCourseId = getSelectedInstituteCourseId();
	// ////////////alert("In add Edit2: "+feeItemId);
	instituteCourseStrengthId = $('#txtFeeStructureDescription').data(
			'InstituteCourseStrengthId');
	// //////////////alert("In add Edit3: "+instituteCourseStrengthId);
	fromYear = parseInt($('#cmbYear').val());
	description = $('#txtFeeStructureDescription').val();
	details = CKEDITOR.instances.editing_field1.getData();
	applicableDate = $('#txtFeeApplicableDatehidden').val().trim();
	applicableDateTo = $('#txtFeeApplicableDateTohidden').val().trim();
	isSeparateReciept = $('#chkIsSeparateReciept').is(":checked");
	
} else {
	if (jObject.feeItemId == undefined) {
		feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
		if (feeItemId == undefined)
			return;
	} else
		feeItemId = jObject.feeItemId;

	if (jObject.instituteCourseId == undefined) {
		instituteCourseId = getSelectedInstituteCourseId();
		if (instituteCourseId == undefined)
			return;
	} else {
		instituteCourseId = jObject.instituteCourseId;
	}

	if (jObject.instituteCourseStrengthId == undefined) {
		instituteCourseStrengthId = $('#txtFeeStructureDescription').data(
				'InstituteCourseStrengthId');
		if (instituteCourseStrengthId == undefined)
			return;
	} else {
		instituteCourseStrengthId = jObject.instituteCourseStrengthId;
	}

	if (jObject.fromYear == undefined) {
		fromYear = parseInt($('#cmbYear').val());
		if (fromYear == undefined)
			return;
	} else {
		fromYear = jObject.fromYear;
	}

	if (jObject.description == undefined) {
		description = $('#txtFeeStructureDescription').val();
		if (description == undefined)
			return;
	} else {
		description = jObject.description;
	}

	if (jObject.details == undefined) {
		details = CKEDITOR.instances.editing_field1.getData();
		if (details == undefined)
			return;
	} else {
		details = jObject.description;
	}
	if (jObject.applicableDate == undefined) {
		applicableDate = $('#txtFeeApplicableDatehidden').val().trim();
		if (applicableDate == undefined)
			return;
	} else {
		applicableDate = jObject.applicableDate;
	}

	if (jObject.applicableDateTo == undefined) {
		applicableDateTo = $('#txtFeeApplicableDateTohidden').val().trim();
		if (applicableDateTo == undefined)
			return;
	} else {
		applicableDateTo = jObject.applicableDateTo;
	}
	
	if (jObject.isSeparateReciept == undefined) {
		isSeparateReciept = $('#chkIsSeparateReciept').is(":checked");
	} else {
		isSeparateReciept = jObject.isSeparateReciept;
	}
}
/*
 * 
 * $('#manageFeesTabs').show(); //////////////alert("In add Edit1"); var
 * feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
 * //alert('feeItemId: '+feeItemId); var instituteCourseId =
 * getSelectedInstituteCourseId(); //////////////alert("In add Edit2:
 * "+feeItemId); var instituteCourseStrengthId =
 * $('#txtFeeStructureDescription').data('InstituteCourseStrengthId');
 * ////////////////alert("In add Edit3: "+instituteCourseStrengthId); var
 * fromYear = parseInt($('#cmbYear').val()); var description =
 * $('#txtFeeStructureDescription').val(); var details =
 * CKEDITOR.instances.editing_field1.getData();
 */

// var applicableDate = $('#txtFeeApplicableDate').val().trim();
if (applicableDate != '') {
	applicableDate = new Date(Date.parse(applicableDate));
	applicableDate = $.datepicker.formatDate('yy-mm-dd', applicableDate);
} else {
	applicableDate = '';
}
//alert(applicableDateTo)
if (applicableDateTo != '') {
	applicableDateTo = new Date(Date.parse(applicableDateTo));
	applicableDateTo = $.datepicker.formatDate('yy-mm-dd', applicableDateTo);
} else {
	applicableDateTo = '';
}

	var	advanceAllowed = "0"
		if($('#chkAdvanceAllowed').is(':checked')){
			advanceAllowed = "1";
			if(accounthead==0){
				jAlert("please select account head");
				return false;
			}
		}
	//alert("advanceAllowed"+advanceAllowed);
if (description != '' && description != undefined && applicableDate != '') {
	$.ajax({
		url : 'addEditItemFeeStructureDescription.json',
		dataType : 'json',
		data : {
			feeItemId : feeItemId,
			instituteStrengthId : instituteCourseStrengthId,
			fromYear : fromYear,
			description : description,
			instituteCourseId : instituteCourseId,
			details : details,
			applicableDate : applicableDate,
			isSeparateReciept : isSeparateReciept,
			applicableDateTo : applicableDateTo,
			advanceAllowed : advanceAllowed,
			advanceamount:advanceamount,
			accounthead:accounthead,proratadata:proratadata,
			advanceEndDate:advanceEndDate
		},
		type : 'POST',
		async : false,
		beforeSend : function() {
			startLoading();
			$('tr#trGenerateFeeStructure')
					.find('input#btnGenerateFeeStructure').attr('disabled',
							'disabled');
		},
		complete : function() {
			stopLoading();
			$('tr#trGenerateFeeStructure')
					.find('input#btnGenerateFeeStructure').removeAttr(
							'disabled');
		},
		success : function(jArray) {
			// //////////////alert("In add Edit5");
			/*
			 * $('#txtFeeStructureDescription').attr('disabled','disabled');
			 * $('#txtFeeStructureDescription').data('FeeItemId',jArray[0]["feeItemId"]);
			 * $('#txtFeeStructureDescription').data('FreezeStatus',jArray[0]["freezeStatus"]);
			 * $('#txtFeeStructureDescription').data('Revision',jArray[0]["revisionNo"]);
			 * //$('#lblFeeStructureRevision').html();
			 * setFeeStructureFreezeStatus(jArray[0]["freezeStatus"]);
			 * setFeeStructureRevision(jArray[0]["revisionNo"]);
			 * if(jArray[0]["freezeStatus"].toString() == 'false'){
			 * disableRevisionButton(); } else { enableRevisionButton(); }
			 * $('#txtFeeStructureDescription').data('InstituteCourseStrengthId',jArray[0]["instituteCourseStrengthObj"]["instituteCourseStrengthId"]);
			 * $('#txtFeeStructureDescription').data('DocumentCategoryId',jArray[1]);
			 * initFeesDiscountConfigurationGrid(jArray[0]["revisionNo"]);
			 * //initFeeItemDetailGrid(jArray[0]["revisionNo"]);
			 * initStudentFeesGrid();
			 * 
			 * getFeeStructureItem();
			 */
			// //////////alert('Freeze Status: '+jArray[0]["freezeStatus"]);
			// //////////alert('Revision No: '+jArray[0]["revisionNo"]);
			try {
				callback(jArray);
			} catch (e) {
				alert(e);
			}
		},
		error : function() {

		}
	});
} else {
	if (description == '') {
		jAlert('Enter the Description name !');
	} else {
		jAlert('Enter fees applicable date');
	}
}

}

function addEditFeeItem(action, feeItemId) {
	
	if (validateFeeStructureGrid()) {
		var parentId = $('#txtFeeStructureDescription').data('FeeItemId');
		var instituteCourseStrengthId = $('#txtFeeStructureDescription').data('InstituteCourseStrengthId');
		var courseVal = $('#cbInstiCourseId option:selected').val();
		var instiCourseId = parseInt(courseVal.split('-')[0]);
		var particulars = $('#cmbFeeParticulars').val();
		var installmentNo = $('#cmbInstallment').val();
		var installmetAppliDate = $('#installApplicableDt').val();
		var multiplicationfactFlag=false;
		var applicationdateJS="";
		var txtMultifactor="0";
		if($('#feeMultiplicationFactor').prop('checked')){
		  applicationdateJS= $('#txtapplicationDate').val();
		   txtMultifactor= $('#txtMultifactor').val();
		  multiplicationfactFlag=true;
		 }else{
			applicationdateJS='';
		 }
		 
		 if(installmentNo!=0 && installmetAppliDate==""){
			jAlert("Please select Installment Applicable Date ")
			return false;
		}
		  
		   if(multiplicationfactFlag && applicationdateJS==''){
        			jAlert("Please select Application Date");
       				 return false;
    	  }
    	  
    	  if(multiplicationfactFlag && (txtMultifactor=='' || txtMultifactor=='0')){
        			jAlert("Please enter multiplication factor");
       				 return false;
    	  }
		  
	//	var  applicationdate=$.datepicker.formatDate('yy-mm-dd', new Date(applicationdateJS));
		
		if (action == 'add') {
			feeItemId = 0;
		} else {
			var rowObj = $("#psg2").find('.feeItemSelect:checked').parents('tr:first');
			feeItemId = $(rowObj).find('.feeItemId').text();
		}
		var taxAmount = "0",taxAmount1="0";
		if($('#taxCheck').is(':checked')){
			taxAmount = $('#cmbTaxAmount').val();
			taxAmount1 = $('#cmbTaxAmount1').val();
		}
		var isHostelFee ="0";
		if($('#feeForHostelCheck').is(':checked')){
			isHostelFee = $('#feeForHostelCheck').val();
		}
		var cancelAccHead = 0;
		if($('#cancelationCheck').is(':checked')){
			cancelAccHead = $('#cmbCancelationHead').val();
			if(cancelAccHead==0){
				jAlert("Plase select Cancelation Head.");
				return  false;
			}
		}
		
		let amount = $('#txtFeeParticularAmount').val();
		let timeUnit = $('#cmbTimeUnit').val();
		let isRefundable = $('#cmbIsRefundable').val();
		let separateReciept = $('#cmbIsSeparateReciept').val();
		let isEnquiryItem = $('#cmbIsEnquiryItem').val();
		let Description = $('#txtDescription').val();
		
		var feeStructItemDetail = new Array();
		feeStructItemDetail.push(`<details>
		<parentId>${parentId}</parentId>
		<feeItemId>${feeItemId}</feeItemId>
		<instiStrengthId>${instituteCourseStrengthId}</instiStrengthId>
		<instiCourseId>${instiCourseId}</instiCourseId>
		<ParticularsEdit>${particulars}</ParticularsEdit>
		<installmentNo>${installmentNo}</installmentNo>
		<installmetAppliDate>${installmetAppliDate ==""?"null":$.datepicker.formatDate('yy-mm-dd',new Date(Date.parse(installmetAppliDate)))}</installmetAppliDate>
		<accountHeadId>${taxAmount}</accountHeadId>
		<accountHeadId1>${taxAmount1}</accountHeadId1>
		<isHostelFee>${isHostelFee}</isHostelFee>
		<applicationdate>${applicationdateJS ==""?"null":$.datepicker.formatDate('yy-mm-dd',new Date(Date.parse(applicationdateJS)))}</applicationdate>
		<multiplicationfactFlag>${multiplicationfactFlag}</multiplicationfactFlag>
		<txtMultifactor>${txtMultifactor}</txtMultifactor>
		<cancelAccHead>${cancelAccHead}</cancelAccHead>
		<amount>${amount}</amount>
		<timeUnit>${timeUnit}</timeUnit>
		<isRefundable>${isRefundable}</isRefundable>
		<separateReciept>${separateReciept}</separateReciept>
		<isEnquiryItem>${isEnquiryItem}</isEnquiryItem>
		<Description>${Description}</Description>
		</details>`);
		var selectionXml = `<feeStructItemDetail>${feeStructItemDetail.join('')}</feeStructItemDetail>`;

		/*var data = 'parentId=' + parentId + '&feeItemId=' + feeItemId
		+ '&instiStrengthId=' + instituteCourseStrengthId
		+ '&instiCourseId=' + instiCourseId + '&ParticularsEdit='
		+ particulars + '&installmentNo=' + installmentNo+'&accountHeadId='+taxAmount
		+'&accountHeadId1='+taxAmount1+'&isHostelFee='+isHostelFee
		+'&applicationdate='+applicationdateJS+'&multiplicationfactFlag='+multiplicationfactFlag
		+'&txtMultifactor='+txtMultifactor+'&cancelAccHead='+cancelAccHead;*/
		
		var daata= $('#frmFeeItemAddEdit').serialize();
		
		$.ajax({
			url : 'addEditFeeStructureItem.json?' + daata,//+ '&xml_selectionXml='+ selectionXml,
			type : 'POST',
			dataType : 'json',
			data :{
			parentId:parentId,
			feeItemId:feeItemId,
		    instiStrengthId:instituteCourseStrengthId,
			instiCourseId:instiCourseId,
			ParticularsEdit:particulars,
			installmentNo:installmentNo,
			accountHeadId:taxAmount,
		    accountHeadId1:taxAmount1,
		    isHostelFee:isHostelFee,
		    applicationdate:applicationdateJS,
		    multiplicationfactFlag:multiplicationfactFlag,
		    txtMultifactor:txtMultifactor,
		    cancelAccHead:cancelAccHead,
			xml_selectionXml:selectionXml,
			installmetAppliDate:installmetAppliDate
			},
			beforeSend : function() {
				$('#frmFeeItemAddEdit').find('.preview').addClass('loading');
				$('#frmFeeItemAddEdit').find('input.btnFeeItemAddEdit').attr(
						'disabled', 'disabled');
			},
			complete : function() {
				$('#frmFeeItemAddEdit').find('input.btnFeeItemAddEdit').removeAttr(
				'disabled');
				$('#frmFeeItemAddEdit').find('.preview').removeClass('loading');
			},
			success : function(jArray) {
				if (jArray[0].message == 0)
					jAlert("Fee Head already exists", "message");
				else{
					$('#dialogAddEditFeeItem').modal('hide');
					mainGridResponseAfterSubmit(jArray, action);
				}
			},
			error : function() {

			}
		});
	}
}

/**
 * @name initFeeItemDetailGrid()
 * @date 5th Apr 2012
 * @Author: Vimal Kr.
 * @purpose to initialize the FeeItemGrid and subgrid
 */
function initFeeItemDetailGrid(revision) {
//	//////////alert("Revision No::::::::::::::::::::;"+revision);
	particularsList = new Array();
	var lastsel3 = "";
	var lastsel4 = "";
//	var sub_3cnt=1;
	getOrganizationFeeItemHeadList();
	var timeUnit = new Array();
	timeUnit.push('Yearly:Yearly');
	timeUnit.push('Onetime:One time');
	timeUnit.push('Monthly:Monthly');
	timeUnit.push('Halfyearly:Half yearly');

	timeUnit = timeUnit.join(";");

	var isRefundable = new Array();
	isRefundable.push('0:No');
	isRefundable.push('1:Yes');
	isRefundable = isRefundable.join(";");

	var isSeparateReciept = new Array();
	isSeparateReciept.push('0:No');
	isSeparateReciept.push('1:Yes');
	isSeparateReciept = isSeparateReciept.join(";");

//	var parentId = $('#txtFeeStructureDescription').data('FeeItemId');
	var feeItemId = 0;
	var instituteCourseStrengthId = $('#txtFeeStructureDescription').data(
	'InstituteCourseStrengthId');
	var courseVal = $('#cbInstiCourseId option:selected').val();
	var instiCourseId = parseInt(courseVal.split('-')[0]);

	var boiler =

		'<table class="table table-bordered table-condensed tbl-BasicFeeStructure" id="">'
		+ '<thead>'
		+ '<tr>'
		+ '<th style="text-align:left" class="feeStructureHeading"></th>'
		+ '<tr>'
		+ '<tr>'
		+ '<th style="text-align:center;"></th>'
		+ '<th style="text-align:center;">Sr No.</th>'
		+ '<th style="text-align:center;display:none;">FeeItemId</th>'
		+ '<th style="text-align:center;">Particulars (*)</th>'
		+ '<th style="text-align:center;" class="gems_currency_label">Amount</th>'
		+ '<th style="text-align:center;">Time Unit </th>'
		+ '<th style="text-align:center;">Refundable</th>'
		+ '<th style="text-align:center;">Separate Receipt</th>'
		+ '<th style="text-align:center;">Deposit</th>'
		+ '<th style="text-align:center;">Desc</th>';
		if($('#customerHelper').val()=="SRHU"){
			boiler+='<th style="text-align:center;">Multiplication Factor</th>';
		}
		boiler+='<th style="text-align:center;">Priority</th>';
		if($('#customerHelper').val()=="KURUKSHETRA_UNIVERSITY"){
		boiler+='<th style="text-align:center;">Semester</th>';
		}else{
			boiler+='<th style="text-align:center;">Installment No</th>';
		}
		boiler+= '<th style="text-align:center;">Edit</th>'
		+ '<th style="text-align:center;"></th>'
		+ '<tr>'
		+ '</thead>'
		+ '<tbody class="tbody-BasicFeeStructure">'
		+ '</tbody>'
		+ '<tfoot>'
		+ '<tr>'
		+ '<th colspan="13">'
		+ '<input type="button" class="btn btn-inverse btn-mini btn-addFeeItem" value="Add" >&nbsp;'
		+ '<input type="button" class="btn btn-inverse btn-mini btn-addFeeItemPriority" value="Save Priority" onclick="addFeeItemPriority()">&nbsp;'
		+ '</th>' + '</tr>' + '</tfoot>' + '</table>';
	
	$('#psg2').find('.btn-addFeeItem').off();
	$('#psg2').delegate('.btn-addFeeItem','click',function() {
		
		var userRole = $('#hdnUserRole').val();
		$('#cmbFeeParticulars').removeAttr('disabled');
		$('.controlButton').show();
		$('#cancelationCheck').attr('checked',false);
		$('#cancelationDiv').hide();
		
		if (userRole != 'empadmin' && userRole != 'nonteaching') {
			var freezeStatus = getFeeStructureFreezeStatus();
			if (freezeStatus == 'false'
				|| freezeStatus == undefined) {
				// alert('HI in resetting');
				$('#frmFeeItemAddEdit').reset();
				$('#cmbFeeParticulars').val('-1');
				$('#applLabelId').hide();
		        $('#txtapplicationDate').hide();
				$('#dialogAddEditFeeItem').modal('show');
				$('.btnFeeItemAddEdit').unbind();
				$('.btnFeeItemAddEdit').bind('click', function() {
					addEditFeeItem('add', '0');
				});
			} else {
				jAlert('Sorry, This fee structure has been freezed! If you want to edit it, edit in next revision.');
			}
		} else {
			jAlert('Sorry!! you role doesnt allow to do this action!');
		}
	});
	$('#psg2').html(boiler);
	$('#gridfootertab1').show();
}

function addFeeItemPriority() {
	var feeItemAndPriority = new Array();
	$('.textPriority').each(function() {

		var id = $(this).attr("id");
		var value = $('#' + id).val();
		if ($('#' + id).val() == undefined || $('#' + id).val() == "")
			value = 0;
		feeItemAndPriority.push(id + "_" + value);
	});

	$.ajax({
		url : 'addFeeItemPriority.json?feeItemAndPriority=' + feeItemAndPriority,
		dataType : 'json',
		success : function(jArray) {
			jAlert("Successfully Saved Priority", "Message");
		}
	});

}

/**
 * @name initFeesDiscountConfigurationGrid()
 * @date 17Apr 2012
 * @author vimal kr.
 * @purpose to initialize the discount Grid
 */
function initFeesDiscountConfigurationGrid(revision) {
}

/**
 * @name getFeeStructureItem()
 * @date 17Apr 2012
 * @author vimal kr.
 * @purpose it does ajax call for fetching the configured fee structure item
 *          from the FEE_ITEM table
 */
function getFeeStructureItem(parentFeeItemId) {
	if (parentFeeItemId == undefined)
		parentFeeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	cnt = 1;
	$.ajax({
		url : 'getFeeStructureItem.json?feeItemId=' + parentFeeItemId,
		dataType : 'json',
		beforeSend : function() {
			startCommonAjaxSpinner();
		},
		complete : function() {
			stopCommonAjaxSpinner();
		},
		success : function(jArray) {
			initFeeItemDetailGrid(getFeeStructureRevision());
			var totalPayableAmount = 0.0;
			if (jArray.length > 0) {
				for ( var i = 0; i < jArray.length; i++) {
					var amount = parseFloat(jArray[i]["unitPrice"]).toFixed(2);
					if (jArray[i]["timeUnit"].toString().toLowerCase() == 'monthly') {
						amount *= 12.0;
					}
					totalPayableAmount = parseFloat(totalPayableAmount)	+ parseFloat(amount);
					var isRefundable = 'No';
					var isSeparateReciept = 'No';
					var isEnquiry = 'No';
					var taxAssociationAccountHeadId ="";
					if (jArray[i]["isRefundable"] != undefined) {
						if (jArray[i]["isRefundable"]) {
							isRefundable = 'Yes';
						}
					}
					if (jArray[i]["isSeparateReciept"] != undefined) {
						if (jArray[i]["isSeparateReciept"]) {
							isSeparateReciept = 'Yes';
						}
					}

					if (jArray[i]["isEnquiry"] != undefined) {
						if (jArray[i]["isEnquiry"]=="true") {
							isEnquiry = 'Yes';
						}
					}

					if (jArray[i]["installmentNo"] != undefined
							&& jArray[i]["installmentNo"] != "0") {
						installmentNo = jArray[i]["installmentNo"];
						if (installmentNo == "1")
							installmentNo = 'I';
						else if (installmentNo == "2")
							installmentNo = 'II';
						else if (installmentNo == "3")
							installmentNo = 'III';
						else if (installmentNo == "4")
							installmentNo = 'IV';
						else if (installmentNo == "5")
							installmentNo = 'V';
						else if (installmentNo == "6")
							installmentNo = 'VI';
						else if (installmentNo == "7")
							installmentNo = 'VII';
						else if (installmentNo == "8")
							installmentNo = 'VIII';
						else if (installmentNo == "9")
							installmentNo = 'IX';
						else if (installmentNo == "10")
							installmentNo = 'X';
					} else
						installmentNo = 'No Installment';

					$('#taxCheck').attr('checked',false);
					$('#taxAmtTd').hide();

					var lockUnlock = "";
					if(jArray[i]["feeItemLock"]!="")
						lockUnlock = "alert alert-danger";

					var boiler = '<tr id="basicFeeItem-'+ jArray[i]["feeItemId"]+ '" instamentAppliDate = "'+jArray[i]["instamentAppliDate"]+'" feeitemheaduniverseid="'+ jArray[i]["feeItemHeadUniverseId"]+ '" class="feeItemsRow  '+lockUnlock+'  ">'
					+ '<td style="text-align:center" class=""><input type="radio" name="basicFeeItem" class="feeItemSelect" feeItemId="'
					+ jArray[i]["feeItemId"]
					+ '"></td>'
					+ '<td style="text-align:center" class="">'
					+ (i + 1)
					+ '</td>'
					+ '<td style="text-align:left;display:none;" class="feeItemId">'
					+ jArray[i]["feeItemId"]
					+ '</td>'
					+ '<td style="text-align:left;"  class="particular"><strong>'
					+ jArray[i]["orgFeeItemHeadName"]
					+ '</strong></td>'
					+ '<td class="amount gems_currency">'
					+ amount
					+ '</td>'
					+ '<td style="text-align:center" class="timeunit">'
					+ jArray[i]["timeUnit"]
					+ '</td>'
					+ '<td style="text-align:center" class="isRefundable">'
					+ isRefundable
					+ '</td>'
					+ '<td style="text-align:center" class="isSeparateReceipt">'
					+ isSeparateReciept
					+ '</td>'
					+ '<td style="text-align:center" class="isEnquiry">'
					+ isEnquiry
					+ '</td>'
					+ '<td style="text-align:left" class="desc">'
					+ jArray[i]["description"]
					+ '</td>';
					if($('#customerHelper').val()=="SRHU"){
					 boiler += '<td style="text-align:left" class="mulitiFactor">'
						+ jArray[i]["applicationdate"]
						+ '</td>';
					}
					 boiler += '<td style="text-align:left" class="clsPriority"><input type="text" style="width:20px" id="'
					+ jArray[i]["feeItemId"]
					+ '" value="'
					+ jArray[i]["priority"]
					+ '" class="textPriority"></td>'
					+ '<td style="text-align:center" class="installment">'
					+ installmentNo
					+ '</td>';

					if(jArray[i]["feeItemLock"]=="" || jArray[i]["lock"]=="unlock"){
						boiler+= '<td style="text-align:left" class="edit"><a href="javascript:void(0)" class="btn btn-mini btn-editfeeItem"><i class="icon-edit"></i></a>&nbsp;<a href="javascript:void(0)" label="'+ jArray[i]["feeItemId"]+ '" class="btn btn-mini btn-deletefeeItem"><i class="icon-trash"></i></a></td>';
					}else 
						boiler+= '<td></td>';


					if(jArray[i]["lock"]=="lock" && jArray[i]["feeItemLock"]=="")
						boiler+= '<td style="text-align:center"><a href="javascript:void(0)" class="lockFeeItemCls" label="'+ jArray[i]["feeItemId"]+ '">Lock</a></td>';
					else if(jArray[i]["feeItemLock"]!="")
						boiler+= '<td>LOCKED</td>';
					else 
						boiler+= '<td></td>';

					boiler+= '<td style="text-align:center;display:none" class="taxassociationaccountheadid">'+ jArray[i]["taxAssociationAccountHead"]+ '</td><td style="text-align:center;display:none" class="taxassociationaccountheadid1">'+ jArray[i]["taxAssociationAccountHead1"] 
					+'</td><td style="text-align:center;display:none" class="ishostelfee">'+ jArray[i]["isHostelFee"]+'</td><td style="text-align:center;display:none" class="multiplicationfactFlag">'+ jArray[i]["multiplicationfactFlag"]
					+'</td><td style="text-align:center;display:none" class="applicationdate">'+ jArray[i]["applicationdate"]+'</td><td style="text-align:center;display:none" class="txtMultifactor">'+ jArray[i]["Multifactor"]+'</td>'
					+'</td><td style="text-align:center;display:none" class="cancelationAccHeadId">'+ jArray[i]["cancelationAccHeadId"]+'</td>'
					+ '</tr>';
					
					$(".tbody-BasicFeeStructure").append(boiler);
					cnt++;
				}
			} else {
				var boiler = '<tr class="NofeeItemsRow">'
					+ '<td style="text-align:center" class="" colspan="13"><span style="color:red">Please Complete the structure using Add button given below!!!</span></td>'
					+ '</tr>';
				$(".tbody-BasicFeeStructure").append(boiler);
			}
			$('.textPriority').numeric();
			$('#psg2').find('.btn-editfeeItem').on('click',	function() {
				var userRole = $('#hdnUserRole').val();
				if (userRole != 'empadmin'&& userRole != 'nonteaching') {
					var freezeStatus = getFeeStructureFreezeStatus();
					var FeeStructureRevisionNo = getFeeStructureRevision();
					if (freezeStatus == 'false'	|| freezeStatus == undefined) {
						var rowObj = $(this).parents('tr:first');
						if (freezeStatus == 'true') {
						} else {
							$('#frmFeeItemAddEdit').reset();
							$('#cmbFeeParticulars').attr('selected', false);
							$('#cmbFeeParticulars').attr('disabled', false);
							$('#cancelationCheck').attr('checked',false);
							$('#cancelationDiv').hide();

							var taxAssociationAccountHeadId = $(rowObj).find('.taxassociationaccountheadid').text();
							var taxAssociationAccountHeadId1 =$(rowObj).find('.taxassociationaccountheadid1').text();
							var isHostelFee = $(rowObj).find('.ishostelfee').text();
							var multiplicationfactFlag = $(rowObj).find('.multiplicationfactFlag').text();
							var applicationdate = $(rowObj).find('.applicationdate').text();
							var multifactor = $(rowObj).find('.txtMultifactor').text();
							var feeItemId = $(rowObj).find('.feeItemId').text();
							var feeItemHeadUniverseId = $(rowObj).attr("feeitemheaduniverseid");
							var particulars = $(rowObj).find('.particular').text();
							var amount = $(rowObj).find('.amount').text();
							var timeUnit = $(rowObj).find('.timeunit').text();
							var isRefundable = $(rowObj).find('.isRefundable').text();
							var description = $(rowObj).find('.desc').text();
							var separateReciept = $(rowObj).find('.isSeparateReceipt').text();
							var forEnquiry = $(rowObj).find('.isEnquiry').text();
							var installmentNo = $(rowObj).find('.installment').text();
							var cancelationAccHeadId = $(rowObj).find('.cancelationAccHeadId').text();
							var instamentAppliDate = $(rowObj).attr("instamentAppliDate");
							

							if (installmentNo != 'No Installment') {
								if (installmentNo == "I")
									installmentNo = 1;
								else if (installmentNo == "II")
									installmentNo = '2';
								else if (installmentNo == "III")
									installmentNo = 3;
								else if (installmentNo == 'IV')
									installmentNo = 4;
								else if (installmentNo == "V")
									installmentNo = 5;
								else if (installmentNo == "VI")
									installmentNo = 6;
								else if (installmentNo == "VII")
									installmentNo = 7;
								else if (installmentNo == "VIII")
									installmentNo = 8;
								else if (installmentNo == "IX")
									installmentNo = 9;
								else if (installmentNo == "X")
									installmentNo = 10;
							} else
								installmentNo = 0;

							$('#cmbInstallment').val(installmentNo).trigger('onchange');
							
							if(instamentAppliDate!=''){
								$('#installApplicableDt').val(instamentAppliDate);
							}

							var index = $('#cmbFeeParticulars option:contains('+ particulars+ ')').index();
							
							if(cancelationAccHeadId!=0){
								$('#cancelationCheck').attr('checked',true);
								$('#cancelationDiv').show();
								getCancelationAccHeads();
								$('#cmbCancelationHead').val(cancelationAccHeadId);
							}else{
								$('#cancelationDiv').hide();
							}
							if(taxAssociationAccountHeadId!=""){
								$('#taxCheck').attr('checked',true);
								getTaxAccToUniverseId(feeItemHeadUniverseId);
							}else{
								$('#taxCheck').attr('checked',false);
								$('#taxAmtTd').hide();
							}
							if(isHostelFee=="Yes"){
								$('#feeForHostelCheck').attr('checked',true);
							}else{
								$('#feeForHostelCheck').attr('checked',false);
							}
							
							var dateDiff=0;
							var dt1 = new Date(applicationdate);
							var dt2 = new Date();
							var Difference_In_Time = dt2.getTime() - dt1.getTime();
		     			    var Difference_In_Days = Math.ceil(Difference_In_Time / (1000 * 3600 * 24));
			       		 	dateDiff=Difference_In_Days-1;
							
							if(multiplicationfactFlag=="true"){
								$('#feeMultiplicationFactor').attr('checked',true);
									$('#applLabelId').show();
	   								$('#txtapplicationDate').show();
	   								$('#txtMultifactor').show();
	   								
	   								if(dateDiff>=0){
									  $('#feeMultiplicationFactor').attr('disabled',true);
	   								  $('#txtapplicationDate').attr('disabled',true);
	   								  $('#txtMultifactor').attr('readonly',true);
									}else{
										$('#feeMultiplicationFactor').attr('disabled',false);
	   									$('#txtapplicationDate').attr('disabled',false);
	   									$('#txtMultifactor').attr('readonly',false);
									}
	   								
							}else{
								 $('#feeMultiplicationFactor').attr('disabled',false);
	   							 $('#txtapplicationDate').attr('disabled',false);
	   							 $('#txtMultifactor').attr('readonly',false);
								
								$('#feeMultiplicationFactor').attr('checked',false);
								$('#txtapplicationDate').hide();
	   							$('#txtMultifactor').hide();
							}	
							
							
							$('#txtapplicationDate').val(applicationdate);
							$('#txtMultifactor').val(multifactor);
							$('#cmbTaxAmount').val(taxAssociationAccountHeadId);
							$('#cmbTaxAmount1').val(taxAssociationAccountHeadId1);
							$('#txtFeeParticularAmount').val(amount);
							$('#cmbTimeUnit').val(timeUnit);
							$('#cmbFeeParticulars_chzn').remove();
							$('#cmbFeeParticulars').show();
							$('#cmbFeeParticulars').val(feeItemHeadUniverseId);
							convertComboToSearchable('#cmbFeeParticulars');

							$('#cmbIsSeparateReciept').find("option").filter(function() {
								return (($(this).val() == separateReciept) || ($(this).text() == separateReciept));
							}).prop('selected',true);
							
							$('#cmbIsRefundable').find("option").filter(function() {
								return (($(this).val() == isRefundable) || ($(this).text() == isRefundable));
							}).prop('selected',true);
							
							$('#cmbIsEnquiryItem').find("option").filter(function() {
								return (($(this).val() == forEnquiry) || ($(this).text() == forEnquiry));
							}).prop('selected',true);

							$('#cmbFeeParticulars').attr('disabled', 'disabled');
							$('.controlButton').hide();

							$('#txtDescription').val(description);
							$('#dialogAddEditFeeItem').modal('show');
							$('.btnFeeItemAddEdit').unbind();
							$('.btnFeeItemAddEdit').bind('click',function() {
								addEditFeeItem('edit',feeItemId);
							});
						}

					} else {
						jAlert('Sorry, This fee structure has been freezed! If you want to edit it, edit in next revision.');
					}
				} else {
							jAlert('Sorry!! you role doesnt allow to do this action!');
						}
					});
			$('.btn-deletefeeItem').click(function() {
				var feeItemId = $(this).attr('label');
				jConfirm('Are you sure you want to delete the Fee Item ','', function(r) {
					if (r) {
						deleteFeeItem(this,feeItemId);
					}
				});
			});

			$('.lockFeeItemCls').click(function() {
				var feeItemId = $(this).attr('label');
				jConfirm('Are you sure you want to lock the Fee Item ','', function(r) {
					if (r) {
						lockFeeItem(feeItemId);
					}
				});

			});

			$('#psg2').find('tr.feeItemsRow').bind('click', function(e) {
				e.stopPropagation();
				$('#psg2').find('tr').css('background-color', '');
				$(this).find('.feeItemSelect').attr('checked', 'checked');
				$(this).css('background-color', '#DFF0D8');
			});
			totalPayableAmount = Math.floor(totalPayableAmount);
			$('#lblFeeStructureSummationTab1').html("<label class='gems_currency'>"+totalPayableAmount+"</label>");
			setTotalFlatPayableAmount(parseFloat(totalPayableAmount).toFixed(2));
			//$('#advanceEndDate').val(jArray[0].advanceEndDate).attr('Readonly',true);
		},
		error : function() {
		}
	});
}
function deleteFeeItem(element, feeItemId) {
$.ajax({
	url : 'deleteAssociatedfeeHeads.json?feeItemHead=' + feeItemId,
	dataType : 'text',
	success : function(jArray) {
		if (jArray == 'Deleted Successfully') {
			jAlert(jArray);
			$(element).closest('tr').remove();
			getFeeStructureItem();
		} else {
			jAlert(jArray);
		}
	}
});
}
/**
 * @name mainGridResponseAfterSubmit(response,postData)
 * @date 18 Apr 2012
 * @author vimal kr.
 * @purpose it get called after editing of the fee item grid main grid. It set
 *          the primary key to fee autogenerated by database
 * @param response
 *            response object returned by the server. which has the returned
 *            data in its 'responseText' atttribute which has been further
 *            evaluated as json.
 */
function mainGridResponseAfterSubmit(jArray, action) {
/*
 * var gr = jQuery("#sg2").getGridParam("selrow"); if(gr != null){ var rowdata =
 * jQuery("#sg2").getRowData(gr); rowId = rowdata.S_No; } var rowCount =
 * $('#sg2').jqGrid('getGridParam','reccount'); if(action == 'add'){ rowId =
 * (rowCount+1); }
 */
	//alert("1")
var amount = parseFloat(jArray[0]["unitPrice"]).toFixed(2);
if (jArray[0]["timeUnit"].toString().toLowerCase() == 'monthly') {
	amount *= 12.0;
}
var isRefundable = 'No';
var isSeparateReciept = 'No';
var forEnquiry = 'No';

if (jArray[0]["isRefundable"] != undefined) {
	if (jArray[0]["isRefundable"]) {
		isRefundable = 'Yes';
	}
}
if (jArray[0]["isSeparateReciept"] != undefined) {
	if (jArray[0]["isSeparateReciept"]) {
		isSeparateReciept = 'Yes';
	}
}

if (jArray[0]["isSeparateReciept"] != undefined) {
	if (jArray[0]["isSeparateReciept"]) {
		isSeparateReciept = 'Yes';
	}
}
if (jArray[0]["isEnquiry"] != undefined) {
	if (jArray[0]["isEnquiry"]) {
		forEnquiry = 'Yes';
	}
}

if (jArray[0]["installmentNo"] != undefined
		&& jArray[0]["installmentNo"] != "0") {
	installmentNo = jArray[0]["installmentNo"];
	if (installmentNo == "1")
		installmentNo = 'I';
	else if (installmentNo == "2")
		installmentNo = 'II';
	else if (installmentNo == "3")
		installmentNo = 'III';
	else if (installmentNo == "4")
		installmentNo = 'IV';
	else if (installmentNo == "5")
		installmentNo = 'V';
	else if (installmentNo == "6")
		installmentNo = 'VI';
	else if (installmentNo == "7")
		installmentNo = 'VII';
	else if (installmentNo == "8")
		installmentNo = 'VIII';
	else if (installmentNo == "9")
		installmentNo = 'IX';
	else if (installmentNo == "10")
		installmentNo = 'X';
} else
	installmentNo = 'No Installment';

var taxAssociationAccountHeadId = jArray[i]["taxAssociationAccountHead"];

if (action == 'add') {
	//alert("2")
	var boiler = '<tr id="basicFeeItem-'
			+ jArray[i]["feeItemId"]
			+ '" class="feeItemsRow">'
			+ '<td style="text-align:center" class=""><input type="radio" name="basicFeeItem" class="feeItemSelect" feeItemId="'
			+ jArray[i]["feeItemId"]
			+ '"></td>'
			+ '<td style="text-align:center" class="">'
			+ (i + 1)
			+ '</td>'
			+ '<td style="text-align:left;display:none;" class="feeItemId">'
			+ jArray[i]["feeItemId"]
			+ '</td>'
			+ '<td style="text-align:left;"  class="particular"><strong>'
			+ jArray[i]["orgFeeItemHeadName"]
			+ '</strong></td>'
			+ '<td style="text-align:right"  class="amount gems_currency">'
			+ amount
			+ '</td>'
			+ '<td style="text-align:center" class="timeunit">'
			+ jArray[i]["timeUnit"]
			+ '</td>'
			+ '<td style="text-align:center" class="isRefundable">'
			+ isRefundable
			+ '</td>'
			+ '<td style="text-align:center" class="isSeparateReceipt">'
			+ isSeparateReciept
			+ '</td>'
			+ '<td style="text-align:center" class="isEnquiry">'
			+ forEnquiry
			+ '</td>'
			+ '<td style="text-align:left" class="desc">'
			+ jArray[i]["description"]
			+ '</td>'
			+ '<td style="text-align:left" class="clsPriority"><input type="text" style="width:20px" id="'
			+ jArray[0]["feeItemId"]
			+ '" value="'
			+ jArray[0]["priority"]
			+ '" class="textPriority"></td>'
			+ '<td style="text-align:center" class="installment">'
			+ installmentNo
			+ '</td>'
			+ '<td style="text-align:left" class="edit"><a href="javascript:void(0)" class="btn btn-mini" ><i class="icon-edit btn-editfeeItem"></i></a>&nbsp;<a href="javascript:void(0)" label="'
			+ jArray[i]["feeItemId"]
			+ '" class="btn btn-mini btn-deletefeeItem"><i class="icon-trash"></i></a></td>'
			+ '<td style="text-align:center;display:none" class="taxassociationaccountheadid">'
			+ jArray[i]["taxAssociationAccountHead"]
			+ '</td><td style="text-align:center;display:none" class="ishostelfee">'+ jArray[i]["isHostelFee"]+'</td>'
			+ '</tr>';

	// jQuery("#sg2").jqGrid('addRowData',rowId,datarow);
	$(".tbody-BasicFeeStructure").find('.NofeeItemsRow').remove();
	$(".tbody-BasicFeeStructure").append(boiler);
	$('.textPriority').numeric();
	$('#psg2').find('.btn-editfeeItem').unbind();
	$('#psg2')
			.find('.btn-editfeeItem')
			.on(
					'click',
					function() {
						// alert('hi');
						var userRole = $('#hdnUserRole').val();
						if (userRole != 'empadmin' && userRole != 'nonteaching') {
							var freezeStatus = getFeeStructureFreezeStatus();
							// alert('hi'+freezeStatus);
							if (freezeStatus == 'false'
									|| freezeStatus == undefined) {
								// alert('hi');
								var rowObj = $(this).parents('tr:first');
								if (freezeStatus == 'true') {
								} else {
									// $('#frmFeeItemAddEdit').reset();
									/*
									 * var particulars =
									 * $(parentRow).find('.particulars').text();
									 * var amount = tempObj.Amount; var timeUnit =
									 * $(parentRow).find)TimeUnit; var
									 * isRefundable = tempObj.IsRefundable; var
									 * separateReciept =
									 * tempObj.SeparateReciept; var description =
									 * tempObj.Description; var forEnquiry =
									 * tempObj.forEnquiry;
									 */

									var feeItemId = $(rowObj)
											.find('.feeItemId').text();
									var particulars = $(rowObj).find(
											'.particular').text();
									var amount = $(rowObj).find('.amount')
											.text();
									var timeUnit = $(rowObj).find('.timeunit')
											.text();
									var isRefundable = $(rowObj).find(
											'.isRefundable').text();
									var description = $(rowObj).find('.desc')
											.text();
									var separateReciept = $(rowObj).find(
											'.isSeparateReceipt').text();
									var forEnquiry = $(rowObj).find(
											'.isEnquiry').text();
									var installmentNo = $(rowObj).find(
											'.installment').text();
									// alert(forEnquiry);
									var index = $(
											'#cmbFeeParticulars option:contains('
													+ particulars + ')')
											.index();
									$(
											'#cmbFeeParticulars option:eq('
													+ index + ')').attr(
											'selected', true);
									$(
											'#cmbFeeParticulars option:eq('
													+ index + ')').attr(
											'disabled', 'disabled');
									$('#txtFeeParticularAmount').val(amount);
									$('#cmbTimeUnit').val(timeUnit);

									var installmentNoIndex = $(
											'#cmbInstallment option:contains('
													+ installmentNo + ')')
											.index();
									$(
											'#cmbInstallment option:eq('
													+ installmentNoIndex + ')')
											.attr('selected', true);

									$('#cmbIsSeparateReciept')
											.find("option")
											.filter(
													function() {
														return (($(this).val() == separateReciept) || ($(
																this).text() == separateReciept));
													}).prop('selected', true);
									$('#cmbIsRefundable')
											.find("option")
											.filter(
													function() {
														return (($(this).val() == isRefundable) || ($(
																this).text() == isRefundable));
													}).prop('selected', true);
									$('#cmbIsEnquiryItem')
											.find("option")
											.filter(
													function() {
														return (($(this).val() == forEnquiry) || ($(
																this).text() == forEnquiry));
													}).prop('selected', true);

									$('#cmbFeeParticulars').attr('disabled',
											'disabled');
									$('.controlButton').hide();

									$('#txtDescription').val(description);
									
									var taxAssociationAccountHeadId = $(rowObj).find('.taxassociationaccountheadid').text();
									if(taxAssociationAccountHeadId!=""){
										$('#taxCheck').attr('checked',true);
										getTaxAccToUniverseId(feeItemHeadUniverseId);
									}else{
										$('#taxCheck').attr('checked',false);
										$('#taxAmtTd').hide();
									}
									
									var isHostelFee = $(rowObj).find('.ishostelfee').text();
									if(isHostelFee=="Yes"){
										$('#feeForHostelCheck').attr('checked',true);
									}else{
										$('#feeForHostelCheck').attr('checked',false);
									}
									
									$('#dialogAddEditFeeItem').modal('show');
									$('.btnFeeItemAddEdit').unbind();
									$('.btnFeeItemAddEdit').bind(
											'click',
											function() {
												//alert("3")
												addEditFeeItem('edit',
														feeItemId);
											});
								}

							} else {
								jAlert('Sorry, This fee structure has been freezed! If you want to edit it, edit in next revision.');
							}
						} else {
							jAlert('Sorry!! you role doesnt allow to do this action!');
						}
					});
	$('.btn-deletefeeItem').click(
			function() {
				var feeItemId = $(this).attr('label');
				jConfirm('Are you sure you want to delete the Fee Item ', '',
						function(r) {
							if (r) {
								deleteFeeItem(this, feeItemId);
							}
						});

			});

	$('#psg2').find('tr.feeItemsRow').unbind();
	$('#psg2').find('tr.feeItemsRow').bind('click', function(e) {
		e.stopPropagation();
		$('#psg2').find('tr').css('background-color', '');
		$(this).find('.feeItemSelect').attr('checked', 'checked');
		$(this).css('background-color', '#DFF0D8');

		/*
		 * $('#psg2').find('tr.feeItemsRow').each(function(){
		 * if(!$(this).find('.feeItemSelect').is(':checked')){ } });
		 */
	});
} else {
	//alert("inelse")
	var rowObj = $("#psg2").find('.feeItemSelect:checked').parents('tr:first');
	$(rowObj).find('.feeItemId').text(jArray[0]["feeItemId"]);
	$(rowObj).find('.particular').html(
			'<strong>' + jArray[0]["orgFeeItemHeadName"] + '</strong>');
	$(rowObj).find('.amount').text(amount);
	$(rowObj).find('.timeunit').text(jArray[0]["timeUnit"]);
	$(rowObj).find('.isRefundable').text(isRefundable);
	$(rowObj).find('.desc').text(jArray[0]["description"]);
	$(rowObj).find('.isSeparateReceipt').text(isSeparateReciept);
	$(rowObj).find('.isEnquiry').text(forEnquiry);
	$(rowObj).find('.installment').text(installmentNo);

	$(rowObj).find('.taxassociationaccountheadid').text(taxAssociationAccountHeadId);
}

var particulars = document.getElementsByName('Particulars')[0].value;
// alert(particulars);
if (isNaN(particulars)) { // Add new Fee Item Head in master table case
	// jArray[i]["orgFeeItemHeadName"]
	closeFeeItemHeadForm();
	var str = '<option value="' + jArray[0]["headUniverseId"] + '">'
			+ jArray[0]["orgFeeItemHeadName"] + '</option>';
	$('#cmbFeeParticulars').append(str);
	sortDropDownListByText('cmbFeeParticulars');
}
$('#frmFeeItemAddEdit').reset();

$('input[name = "hdnId"]').val(jArray[0].feeItemId);
updateTotalPayableAmount();
jAlert('Success: Record saved.', 'Success', function() {
	$('#cmbFeeParticulars').focus();
	getFeeStructureItem();
	//$('#dialogAddEditFeeItem').modal('hide');
});
}

/**
 * @since 10May 2012
 * @param response
 * @param postData
 * @returns {Array}
 */
function subGridResponseAfterSubmit(response, postData) {

// //////////alert("Hi I m called after submit: "+response.responseText);
var gr = jQuery("#" + gSubgridId).getGridParam("selrow");
if (gr != null) {
	var rowdata = jQuery("#" + gSubgridId).getRowData(gr);
	rowId = rowdata.S_No;
}
// //////////alert("gSubgridId: "+gSubgridId);
// ////////alert("rowId: "+rowId);
var jArray = eval('(' + response.responseText + ')');
$("#" + gSubgridId).jqGrid('setCell', rowId, "ids", jArray[0]["feeItemId"]);
var totalAmount = getTotalSubItemSum(gSubgridId);
setTotalSubItemAmount(totalAmount);
updateTotalPayableAmount();
// $("#sg2").jqGrid('setCell',gRowId,6,totalAmount);

return [ true, "", rowId ];
}

/**
 * @see course.js
 */
function populateCategoryList() {
var courseId = getSelectedCourseId();
// //////////alert("Punjab hulk as his brand ambassador: "+courseId);
if (courseId != undefined) {
	getCourseCategoryListAjax(courseId, 'cmbCourseCategoryList');
} else {
	// //////////alert("In category reservations else: "+courseId);
	$('#cmbCourseCategoryList').html('<option value = "0">Select</option>');
}
}

/**
 * @name checkAndInsertFeeItemReservationDiscount()
 * @since 18Apr 2012
 * @author vimal kr.
 * @purpose by ajax call,it checks the entry of all fee item(parent) of a
 *          particular fee structure against selected category in the
 *          FEE_ITEM_CATEGORY_DISCOUNT table, updates all record if already
 *          there and insert if not against a category. Ajax call returns all
 *          fee item under selected fee structure. with discount and description
 */
function checkAndInsertFeeItemReservationDiscount(sponsorshipOnId,
	admissionTypeListId, admissionTypeListUncheckedId, callback) {
var categoryReservationId = '0';
var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
if (admissionTypeListId == undefined
		&& admissionTypeListUncheckedId == undefined) {
	admissionTypeListId = new Array();
	admissionTypeListUncheckedId = new Array();
	$('#divAdmissionTypeListing').find('.chkAdmissionType').each(function() {
		// alert($(this).is(':checked'));
		if ($(this).is(':checked'))
			admissionTypeListId.push($(this).val());
		else
			admissionTypeListUncheckedId.push($(this).val());
	});
}
if (sponsorshipOnId != '0') { // if not selected
	$
			.ajax({
				url : 'checkAndGetFeeItemReservationDiscountList.json?categoryReservationId='
						+ categoryReservationId
						+ '&feeItemId='
						+ feeItemId
						+ '&sponsorshipOnId='
						+ sponsorshipOnId
						+ '&admissionTypeListId='
						+ admissionTypeListId
						+ '&admissionTypeListUncheckedId='
						+ admissionTypeListUncheckedId,
				dataType : 'json',
				async : false,
				beforeSend : function() {
					startLoading();
					$(
							'#trFeeDiscountStructureBySponsorshipOnId-'
									+ sponsorshipOnId).find('.preview-bar')
							.addClass('loading-bar');
				},
				complete : function() {
					stopLoading();
					$(
							'#trFeeDiscountStructureBySponsorshipOnId-'
									+ sponsorshipOnId).find('.preview-bar')
							.removeClass('loading-bar');
				},
				success : function(jArray) {
					// getFeeItemReservationDiscountList(jArray);
					callback(jArray);
				},
				error : function() {

				}
			});
}
}

/**
 * @name discountGridResponse()
 * @since 19Apr 2012
 * @author vimal kr.
 * @purpose it get called when we update the fee item discount grid
 * @param response
 *            response object returned by the server. which has the returned
 *            data in its 'responseText' atttribute which has been further
 *            evaluated as json.
 * @param postdata
 */
function discountGridResponse(response, postData) {
}

/**
 * 
 * @param jArray
 * @deprecated
 */
function getFeeItemReservationDiscountList(jArray) {
}

function getFeeItemReservationDiscountListNew(discountedFeeStructureArray,sponsorshipOnId, admissionTypeId, callback) {
	if(discountedFeeStructureArray.size>0){
		var response = discountedFeeStructureArray[0];
		if (response.responseFlag == 1) {
			var jArray = discountedFeeStructureArray[1];
			var totalPayableAmount = 0.0;
			for ( var k = 0; k < jArray.length; k++) {
				var feeItemCourseCategoryDiscountId = jArray[k].feeItemCourseCategoryDiscountId;
				var feeItemId = jArray[k].feeItemObj.feeItemId;
				var timeUnit = jArray[k].feeItemObj.timeUnit;
				var payableAmount = parseFloat(jArray[k].payableAmount).toFixed(2);
				amountPayable =(payableAmount);
				if (timeUnit.toLowerCase() == 'monthly') {
					totalPayableAmount = (parseFloat(totalPayableAmount) + parseFloat(amountPayable)) * 12.0;
				} else {
					totalPayableAmount = parseFloat(totalPayableAmount)
							+ parseFloat(amountPayable);
				}
				var temp ='<label class="gems_currency">'+payableAmount+'</label>';
				if($('#txtFeeStructureDescription').data('FreezeStatus')!=true){
					temp+= '<div style="display:block" class="A_'+admissionTypeId+'" feeItemCourseCategoryDiscountId="'+feeItemCourseCategoryDiscountId+'"><a href="javascript:void(0)" onclick="renderChangeInputToDiscount(\'structureRow'
					+ sponsorshipOnId + '-' + admissionTypeId + '\',\''
					+ payableAmount + '\',\'' + feeItemId + '\',\''
					+ feeItemCourseCategoryDiscountId + '\')">Change</a></div>';
				}
				$('tr#structureRow' + sponsorshipOnId + '-' + admissionTypeId).find(
						'.' + feeItemId).html(temp);
			}
			totalPayableAmount = (totalPayableAmount);
			$('#lblFeeStructureSummationTab2').html('<label class="gems_currency">'+totalPayableAmount+'</label>');
			setStudentPayableAmount(parseFloat(totalPayableAmount).toFixed(2));
			$('tr#structureRow' + sponsorshipOnId + '-' + admissionTypeId).find(
					'.total').html(
					'<strong>'
							+ '<label class="gems_currency">'+totalPayableAmount+'</label>'
							+ '</strong>');
		}
		try {
			callback();
		} catch (e) {
		}
	}
}

function validateDiscountGrid(value, colName) {
value = parseFloat(value);
// ////////alert("value: "+value);
if (colName == 'Discount (in %)') {
	if (value > 100.0)
		return [ false, "Not allowed !" ];
	else
		return [ true, "" ];
}
if (colName == 'Discount (in <span class="WebRupee">Rs.</span>)') {
	return [ true, "" ];
}
}

function validateFeeStructureGrid() {
// //////////alert("In validating fee item");
var particulars = document.getElementsByName('Particulars')[0].value;
// alert(particulars);
var amount = $('#txtFeeParticularAmount').val().trim();
if (particulars < 0 || particulars == '') {
	jAlert("Select/Enter the fee item!");
	return false;
}

if (amount == '') {
	jAlert('Please enter amount!');
	return false;
} else {
	amount = parseFloat(amount);
	if (amount < 0.00) {
		jAlert('Please enter valid amount!');
		return false;
	}
}
var txtDescription=$('#txtDescription').val(); 
if (txtDescription == undefined  ||  txtDescription== '') {
	jAlert("Please Enter the fee item Description!");
	return false;
}
return true;
}
/**
 * @since 10 May 2012
 * @param grid
 * @returns {Number}
 */
function getTotalSubItemSum(grid) {
var totalPayableAmount = 0.0;

$('#psg2').find('.feeItemsRow').each(function() {
	var timeUnit = $(this).find('timeUnit').text();
	var unitPrice = $(this).find('.amount').text();
	var amount = (parseFloat(unitPrice)).toFixed(2);
	if (timeUnit.toLowerCase() == 'monthly') {
		amount = amount * 12;
	}
	totalPayableAmount = parseFloat(totalPayableAmount) + parseFloat(amount);
});
/*
 * var totSubGridRow = jQuery("#"+grid).getGridParam("reccount");
 * ////////////alert("totSubGridRow : "+totSubGridRow); for(var i = 1 ; i <=
 * totSubGridRow ; i++){ var tempObj = jQuery("#"+grid).jqGrid('getRowData',i );
 * var unitPrice = tempObj.Amount; var timeUnit = tempObj.TimeUnit.toString();
 * if(timeUnit.search(/<select/) != -1){ timeUnit = $('#'+i+'_TimeUnit').val(); }
 * var amount = (parseFloat(unitPrice)).toFixed(2); if(isNaN(amount)){ amount =
 * $('#'+i+'_Amount').val(); } if(timeUnit.toLowerCase() == 'monthly'){ amount =
 * amount * 12; } //////////alert('Time Unit: '+timeUnit+', Payable amt:
 * '+amount); totalPayableAmount = parseFloat(totalPayableAmount) +
 * parseFloat(amount); }
 */
// //////////alert("Total Payble amount: "+totalPayableAmount);
return totalPayableAmount;
}

function setTotalSubItemAmount(totalAmount) {
// $("#sg2").jqGrid('setCell',gRowId,6,totalAmount);
}

function updateTotalPayableAmount() {
var totalAmount = getTotalSubItemSum('sg2');
setTotalAmount(totalAmount);
}

function setTotalAmount(amount) {
// //////////alert("AMount: "+amount);
$('#lblFeeStructureSummationTab1').html(
		//commaFormatted(parseFloat(amount).toFixed(2)));
"<label class='gems_currency'>"+amount+"</label>");
}
function openAddFeeItemHeadForm() {

$('.savedFeeItem').hide();
$('.newFeeItem').show();

$('.add').hide();
$('.cancel').show();

$('#cmbFeeParticulars').attr('name', '');
$('#txtNewFeeParticular').attr('name', 'Particulars');
// $('#divAddFeeItemHeadForm').modal('show');
}
function closeFeeItemHeadForm() {
$('.savedFeeItem').show();
$('.newFeeItem').hide();

$('.add').show();
$('.cancel').hide();

$('#cmbFeeParticulars').attr('name', 'Particulars');
$('#txtNewFeeParticular').attr('name', '');
// $('#divAddFeeItemHeadForm').modal('hide');
}

function addOrgFeeItemHeadForHeadAdmin() {
var name = $('#txtFeeItemHeadName').val();
name = name.trim();
$.ajax({
	url : 'addOrgFeeItemHeadForHeadAdmin.json?feeItemHead=' + name,
	type : 'POST',
	success : function() {
		closeFeeItemHeadForm();
		getOrganizationFeeItemHeadList();
		// $('#sg2').trigger("reloadGrid");
		// $('#sg2').jqGrid('GridUnload');
		// initFeeItemDetailGrid();
	}
});
}

/**
 * @author Vimal
 * @since 10 May 2012
 * @purpose getting all fee item list
 */
function getOrganizationFeeItemHeadList() {
var instituteCourseId = $('#cbInstiCourseId option:selected').val().split('-')[0];
$.ajax({
	url : 'getMasterFeeItemList.json?instituteCourseId=' + instituteCourseId, // url
																				// is
																				// called
																				// mapped
																				// at
																				// controller
	dataType : 'json',
	async : false,
	success : function(jArray) {
		/*
		 * particularsList = new Array();
		 * particularsList.push('-1'+':'+'Select'); $.each(jArray,function(i,v){
		 * particularsList.push(v["feeItemHeadUniverseId"]+':'+v["name"]); });
		 * particularsList.push('0'+':'+'New Item');
		 * 
		 * particularsList = particularsList.join(";");
		 * 
		 * var boiler = '<option value="-1">--- Select ---</option>';
		 * $.each(jArray,function(i,v){ boiler += '<option value =
		 * "'+v["feeItemHeadUniverseId"]+'">'+v["name"]+'</option>'; });
		 * //boiler += '<option value = "0">New Item</option>';
		 * //alert(boiler); var selectedRowId = ''; var gr =
		 * jQuery("#sg2").getGridParam("selrow"); if(gr != null){ var rowdata =
		 * jQuery("#sg2").getRowData(gr); selectedRowId = rowdata.S_No; }
		 */

		// alert('selectedRowId'+selectedRowId);
		// $('#'+selectedRowId+'_Particulars').html(boiler);
		var boiler = '<option value="-1">--- Select ---</option>';
		$.each(jArray, function(i, v) {
			boiler += '<option value = "' + v["feeItemHeadUniverseId"] + '">'
					+ v["name"] + '</option>';
		});
		$('#cmbFeeParticulars').html(boiler);
		convertComboToSearchable('#cmbFeeParticulars');
		// //////////alert(particularsList);
	},
	error : function() {

	}
});
}

/**
 * @since 04th May 2012
 * @author Vimal
 */
function getSponsoringBodyList(instituteCourseId, callback) {
$.ajax({
	url : 'getSponsoringBodyList.json', // url is called mapped at controller
	data : 'globalInstituteCourseId=' + instituteCourseId,
	dataType : 'json',
	async : false,
	success : function(jArray) {
		gSponsoringBodyList = new Array();
		gSponsoringBodyList.push('-1' + ':' + 'Select');
		$.each(jArray, function(i, v) {
			gSponsoringBodyList.push(v["sponsoringBodyId"] + ':' + v["name"]
					+ "[" + v["financePolicyName"] + "]");
		});
		// gSponsoringBodyList.push('0'+':'+'New Item');

		gSponsoringBodyList = gSponsoringBodyList.join(";");
		try {
			callback(jArray);
		} catch (e) {

		}
		// //////////alert(particularsList);
	},
	error : function() {

	}
});
}

/**
 * @since 25th May 2012
 * @author Vimal
 * @purpose for getting the student list by batch for e.g. 2012-2015
 */
function getStudentListByBatch() {
var batchId = $('#txtFeeStructureDescription')
		.data('InstituteCourseStrengthId');
if (batchId != null && batchId != undefined) {
	$.ajax({
		url : 'studentListByCourseAndBatch.json',
		data : {
			batchId : batchId
		},
		dataType : 'json',
		beforeSend : function() {
			startCommonAjaxSpinner();
		},
		complete : function() {
			stopCommonAjaxSpinner();
		},
		success : function(jArray) {
			gStudentListJsonArray = jArray;
			// initManageStudentGrid();
			// clearStudentGrid();
			// showPursuingStudentListInGrid();
			showStudentListInGrid(jArray);
			// calculateTotalFeeRecievable();
			freezeFeeStructure();
		},
		error : function() {
			// ////////alert("In student data grid error");
		}
	});
}
}

/**
 * @since 25th May 2012
 * @author Vimal
 * @purpose form for invoice printing
 */
var g_courssTyPE='';
function showStudentInvoiceForm(callback) {

	if(g_courssTyPE==undefined || g_courssTyPE==''){
			g_courssTyPE=$('#cbInstiCourseId option:selected').attr('cousetype')!=undefined?$('#cbInstiCourseId option:selected').attr('cousetype'):''; 
	}

var boiler = '<div id = "invoice-content">'
		+ '<div style="width:90% auto;" id = "" class = "">'
		+ '<table id="rowTable" style="width: 100%; margin-top: -10px;">'
		+ '<tbody>'
		+ '<tr>'
		+ '<td align="left" style="width: 10%;">'
		+ '<img height="50px;" width="60px;" src="getTrustLogo.json">'
		+ '</td>'
		+ '<td align="center" height="50px;">'
		+ '<p id="pTrustName" style="font:9px/10px Lucida Grande, Lucida Sans, Arial, sans-serif; color: black;"></p>'
		+ '<p id="pInstituteName" style="font:13px/16px Lucida Grande, Lucida Sans, Arial, sans-serif; color:black; font-weight: bold;"></p>'
		+ '<p id="pInstituteAddress" style="font:9px/10px Lucida Grande, Lucida Sans, Arial, sans-serif; color: black;"></p>'
		+ '</td>'
		+ '<td align="right" style="width: 10%;">'
		+ '<img height="50px;" width="60px;" src="getInstituteLogo.json">'
		+ '</td>'
		+ '</tr>'
		+ '</tbody>'
		+ '</table>'
		+ '</div>'
		+ '<table class = "table table-condensed" border = "1">'
		+ '<tr>'
		+ '<td colspan="5" align="center" style="text-align:center"><strong>Fee Invoice</strong><span style = "float:right" id="tdFeeInvoiceBarcodeNo" style = ""></span></td>'
		+ '</tr>'
		+ '<tr>'
		+ '<td rowspan = "4" width = "15%">'
		+ '<div class = "thumbnail studentProfileImage" id = "divStudentProfileImage">'
		+ '</div>'
		+ '</td>'
		+ '<td width = "18%">'
		+ '<label>Name of Student : </label>'
		+ '</td>'
		+ '<td id="tdNameOfStudent" width="25%"></td>'
		+ '<td width = "18%">'
		+ '<label>Fee Invoice No : </label>'
		+ '</td>'
		+ '<td id="tdFeeInvoiceNo" width="25%"></td>'
		+

		'</tr>'
		+ '<tr>'
		+ '<td>'
		+ '<label>Address : </label>'
		+ '</td>'
		+ '<td id="tdAddress"></td>'
		+ '<td>'
		+ '<label>'+juno.labelByCustomer('l.isInvoceToFeesLabel')+' Date  : </label>'
		+ '</td>'
		+ '<td id="tdReceiptDate"></td>'
		+

		'</tr>'
		+ '<tr>'
		+ '<td>'
		+ '<label>Admission Letter Ref. No. : </label>'
		+ '</td>'
		+ '<td id="tdAdmissionLetterRefNo"></td>'
		+ '<td>'
		+ '<label>Admission Date : </label>'
		+ '</td>'
		+ '<td id="tdAdmissionDate"></td>'
		+

		'</tr>'
		+ '<tr>'
		+ '<td>'
		+ 'Category'
		+ '</td>'
		+ '<td colspan="3" id="tdStudentCategory"></td>'
		+ '<td class="hostelInfo" style="display:none">Hostel Detail:</td>'
		+ '<td class="hostelInfo hostelDetails" style="display:none"></td>'
		+ '</tr>'
		+ '<tr>'
		+ '<td colspan="5" align="center">'
		+ '<table border="1" id = "tblStudentInvoiceHeader" class = "table table-bordered table-condensed">'
		+ '<tr>'
		+ '<td style="text-align:center"><strong>Course Code</strong></td>'
		+ '<td style="text-align:center"><strong>Name of Courses</strong></td>'
		+ '<td style="text-align:center"><strong>Institute Name and Address</strong></td>'
		+ '<td style="text-align:center"><strong>Year</strong></td>'
		+ '</tr>'
		+

		'</table>'
		+ '</td>'
		+ '</tr>'
		+ '<tr>';
var customerIdentificationObj = $('#customerHelper').val();
	boiler+=''
		+ '<td id="tdFeeReceiptFor" colspan="5" style="text-align:center">'
		+ '<strong>'+juno.labelByCustomer('l.isInvoceToFeesLabel')+' details</strong>';
	var customerIdentificationObj = $('#customerHelper').val();
		if(customerIdentificationObj != undefined && customerIdentificationObj !="BLM_MUNJAL"){

			boiler+='<div style="display:inline-block;float:left" class="btn-group">'
				+ '<a href="#" data-toggle="dropdown" class="btn dropdown-toggle"><i class="icon-cog"></i></a>'
				+ '<ul class="dropdown-menu">';
				var editBtnFlag = $('#txtStudentSearchBarInvoice').data('isEditDeleteAuth');
			    if(editBtnFlag) {
				boiler+= ' <li><a style="text-align:left" href="javascript:void(0)" class=" linkOprFeeInvoice EDIT_INVOICE"><i class="icon-edit"></i>&nbsp;&nbsp;Edit '+juno.labelByCustomer('l.isInvoceToFeesLabel')+'</a></li>';
			    }else {
			        boiler+= ' <li><a style="text-align:left" href="javascript:void(0)"onclick="checkEditDeleteAuthorityForInvoice()"  class=""><i class="icon-edit"></i>&nbsp;&nbsp;Edit '+juno.labelByCustomer('l.isInvoceToFeesLabel')+'</a></li>';
			    }
				//+ ' <li><a style="text-align:left" href="javascript:void(0)" class=" linkOprFeeInvoice RESET_INVOICE"><i class="icon-retweet"></i>&nbsp;&nbsp;Reset To Default</a></li>'
				boiler+= ' <li><a style="text-align:left" href="javascript:void(0)" class=" linkOprFeeInvoice INVOICE_LOGS"><i class="icon-invoicelogs"></i>&nbsp;&nbsp;'+juno.labelByCustomer('l.isInvoceToFeesLabel')+' Logs</a></li>'

				+
				
				'</ul>'
				+ '</div>';
		}
	boiler+= '</td>';

		boiler+='</tr>'
		+ '<tr>'
		+ '<td colspan="5" align="center">'
		+ '<table border="1" id = "tblStudentInvoiceDetails" class = "table table-bordered table-condensed">'
		+ '<tr><td>Retrieving '+juno.labelByCustomer('l.isInvoceToFeesLabel')+' details...'
		+ '<div class = "preview-large"></div></td></tr>'
		+ '</table>'
		+ /** Lable showing Effective Outstanding of A Student */
		'<span>'
		+ '<span class="calculateBar" style="font-style:italic">Checking and Calculating previous outstanding of <span style="" class="studentName"></span>...</span>'
		+ '<span class="lagacyOutstandin" style="display:none">Total Legacy Outstanding of <span class="studentName" style="font-weight:bold"></span>:-&nbsp;&nbsp;<span class="outstanding" style="font-weight:bold"></span></span>'
		+ '</span>'
		+ '<span><br>'
		+ '<span class="excessFeeCalculateBar" style="font-style:italic">Checking and Calculating excess fees paid by <span style="" class="studentName"></span>...</span>'
		+ '<span class="excessFeesStudent" style="display:none">Excess Fees Paid By <span class="studentName" style="font-weight:bold"></span>:-&nbsp;&nbsp;<span class="excessFees" style="font-weight:bold"></span></span><br>'
		+ '<span class="studentFeesRefundedTillDate" style="display:none">Student Fees Refunded till Date <span class="studentName" style="font-weight:bold"></span>:-&nbsp;&nbsp;<span class="refundedFeesTilldate" style="font-weight:bold"></span>&nbsp;&nbsp; with VoucherNo :- &nbsp;&nbsp;<span class="studentVoucherNo" style="font-weight:bold"></span></span>'
		+ '</span>'
		+ '</td>'
		+ '</tr>'
		+ '<tr>'
		+'<tr>'
		+'<td colspan="5" align="center"><div id="StudentInstallmentDetails"></div></td></tr>'
		+ '<td colspan="5">'
		+ '<div class = "login" style = "float:right;display:none" id = "invoicePrintControl">';
		if($('#customerHelper').val()!="GMR_SA"){
			boiler+='<a href = "javascript:void(0)" class = "print btn btn-inverse btn-mini" rel = "invoice-content" onclick = "printInvoiceAsPdf()">Print</a>';
		}else{
			boiler+='<a href = "javascript:void(0)" class = "print btn btn-inverse btn-mini" rel = "invoice-content" onclick = "printInvoiceAsPdfNew()">Print</a>';
		}
		boiler+= '&nbsp;&nbsp;<span class="invoiceEditControll" style="display:none"><span style="display:inline"><input type="text" class="span2" id="studentInvoiceCancellationDate2" readonly="readonly">&nbsp;&nbsp;<a  class="print btn btn-inverse btn-mini btn-editStudentInvoice" href="javascript:void(0)">Done Editing</a></span>&nbsp;&nbsp;'
		+ '<a onclick="javascript:void(0)"  class="print btn btn-inverse btn-mini btn-cancelEditStudentInvoice" href="javascript:void(0)">Cancel</a></span>'
		+ '</div>' + '</td>' + '</tr>' + '</table></div>';

/** Creating the billing information html */
var postType=$('#postType').val();
var feeInvoiceId = getStudentInvoiceId();//$('#studentFeeInvoiceId').val();

var studentId = gStudentInvoiceRelatedObject.studentId;
var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');

if(postType=="financeadmin"){
boiler += '<br />'
		+ '<div id="divReceiptHeader" style = "align:center;width:94%;margin-left: 3%;margin-right: 3%;background-color:#f7f7f7;color:#1d5987;font-weight:bold;font-size:12px;margin-top:5px;text-align:center;height:30px;">'
		+'<a class="refreshGrid nonPrintable" id="refreshBillCalId" style="color: red;float:left;margin-right:10px;disable:none" href="javascript:void(0);" onclick ="refrshORupdateForBillData('+feeInvoiceId+')"><i class="icon-refresh"></i> Refresh Bills Recalculated</a>'
		+'Receipt History'
		+ '<span style = "float:right;margin-top:5px;margin-right:5px;">';
	if((customerIdentificationObj != undefined && customerIdentificationObj !="BLM_MUNJAL")){
		if($('#customerHelper').val()=="MEGHE" && g_courssTyPE=="COURSE_TYPE_SCHOOL"){
			
		}else
		boiler +='<input id="ReceiptSorting" type= "button" class = "btn btn-inverse btn-mini " value = "Student Bill Sorting" onclick = "studentBillSortingReceipt('+feeInvoiceId+');"/>&nbsp;&nbsp;';
	}
	boiler +='<input id="DeletedReceipt" type= "button" class = "btn btn-inverse btn-mini " value = "Get All Deleted Receipts" onclick = "DeletedReceipt('+feeInvoiceId+')"/>&nbsp;&nbsp;';
	if($('#customerHelper').val()=="BLM_MUNJAL")
		boiler +='<input id="btnSettelment" type= "button" class = "btn btn-inverse btn-mini " value = "Adjustment Entry" onclick = "adjustmentEntry('+feeInvoiceId+')"/>&nbsp;&nbsp;';
	else
		boiler +='<input id="btnSettelment" type= "button" class = "btn btn-inverse btn-mini " value = "Adjustment Entry" onclick = "showStudentAdjustment('+studentId+','+feeItemId+')"/>&nbsp;&nbsp;';
		if($('#customerHelper').val()=="NITIE")
			boiler +='<a href="javascript:void(0)" onclick="checkStudentFeesPayment()" class="btn btn-mini btn-inverse" id="btnGenerateBill"><i class="icon-plus icon-white"></i>&nbsp;'+juno.labelByCustomer('l.isInvoceToFeesLabel')+'</a>';
		else if($('#customerHelper').val()=="MEGHE" && g_courssTyPE=="COURSE_TYPE_SCHOOL"){
			
		}else
			boiler +='<a href="javascript:void(0)" onclick="checkStudentFeesPayment()" class="btn btn-mini btn-inverse" id="btnGenerateBill"><i class="icon-plus icon-white"></i>&nbsp;Fee '+juno.labelByCustomer('l.isInvoceToFeesLabel')+'</a>';
		boiler +='</span></div>'
		+ '<div id = "divStudentBillingInformationArea" style = "align:center;margin-left: 3%;margin-right: 3%;">'
		+ '<span>Getting billing details...</span><div class = "preview-bar"></div>'
		+ '</div>'
		+ '<div style = "align:center;margin-left: 3%;margin-right: 3%;">' +
		/*
		 * '<input id="btnGenerateBill" type= "button" class = "btn btn-inverse
		 * btn-mini " value = "Generate bill" onclick =
		 * "checkStudentFeesPayment()" />'+
		 */
		'<br />' + '<div id = "paymentOptionRadio"></div>' +
		/* '<div class= "preview-large"></div>'+ */
		'<div id = "divStudentBillingAdditionArea" style = "margin-top:5px;"></div>'
		+ '</div>';
}
else if(customerIdentificationObj != undefined && customerIdentificationObj =="RCOEM" && postType=="nonteaching"){

	boiler += '<br />'
		+ '<div id="divReceiptHeader" style = "align:center;width:94%;margin-left: 3%;margin-right: 3%;background-color:#f7f7f7;color:#1d5987;font-weight:bold;font-size:12px;margin-top:5px;text-align:center;height:30px;">Receipt History'
		+ '<span style = "float:right;margin-top:5px;margin-right:5px;">';

	if(customerIdentificationObj != undefined && customerIdentificationObj !="BLM_MUNJAL"){
			if($('#customerHelper').val()=="MEGHE" && g_courssTyPE=="COURSE_TYPE_SCHOOL"){
			
		}else
		boiler +='<input id="ReceiptSorting" type= "button" class = "btn btn-inverse btn-mini " value = "Student Bill Sorting" onclick = "studentBillSortingReceipt('+feeInvoiceId+');"/>&nbsp;&nbsp;';
	}
	boiler +='<input id="DeletedReceipt" type= "button" class = "btn btn-inverse btn-mini " value = "Get All Deleted Receipts" onclick = "DeletedReceipt('+feeInvoiceId+')"/>&nbsp;&nbsp;'+
		'<input id="btnSettelment" type= "button" class = "btn btn-inverse btn-mini " value = "Adjustment Entry" onclick = "adjustmentEntry('+feeInvoiceId+')"/>&nbsp;&nbsp;';
	if($('#customerHelper').val()=="NITIE")
		boiler +='<a href="javascript:void(0)" onclick="checkStudentFeesPayment()" class="btn btn-mini btn-inverse" id="btnGenerateBill"><i class="icon-plus icon-white"></i>&nbsp;'+juno.labelByCustomer('l.isInvoceToFeesLabel')+'</a>';
	else if($('#customerHelper').val()=="MEGHE" && g_courssTyPE=="COURSE_TYPE_SCHOOL"){
			
		}else
		boiler +='<a href="javascript:void(0)" onclick="checkStudentFeesPayment()" class="btn btn-mini btn-inverse" id="btnGenerateBill"><i class="icon-plus icon-white"></i>&nbsp;Fee'+juno.labelByCustomer('l.isInvoceToFeesLabel')+'</a>';
	boiler +='</span></div>'
		+ '<div id = "divStudentBillingInformationArea" style = "align:center;margin-left: 3%;margin-right: 3%;">'
		+ '<span>Getting billing details...</span><div class = "preview-bar"></div>'
		+ '</div>'
		+ '<div style = "align:center;margin-left: 3%;margin-right: 3%;">' +
		/*
		 * '<input id="btnGenerateBill" type= "button" class = "btn btn-inverse
		 * btn-mini " value = "Generate bill" onclick =
		 * "checkStudentFeesPayment()" />'+
		 */
		'<br />' + '<div id = "paymentOptionRadio"></div>' +
		/* '<div class= "preview-large"></div>'+ */
		'<div id = "divStudentBillingAdditionArea" style = "margin-top:5px;"></div>'
		+ '</div>';
}
callback(boiler);
/*
 * //$('#divShowInvoiceForm').html(boiler); $(function(){
 * $('.print').click(function() { var container = $(this).attr('rel');
 * ////alert(container); $('#'+container).printArea(); return false; }); });
 */
}

function adjustmentEntry(feeInvoiceId){
	$('#commonDialog').modal({
		keyboard: false,
		//show: false
	}).css({
		width: '900px',
		'margin-left': function () {
			return -($(this).width() / 2);
		}
	});
	var studentname=$('#tdNameOfStudent').html();
	$('#commonDialogHeader').html('Student Name:'+studentname);
	var studentFeeInvoiceId=$('#btnStudentInvoiceCancel').data('studentFeeInvoiceId');
	var boiler = '<table class="table table-bordered table-condensed">'+
	'<tr><td>Please Select Date</td><td colspan="3"><input type="text" id="settleDates"/ ></td></tr>'+

	'<tbody id="trnsferFeeStructure"></tbody>';
	boiler+='<tr><td colspan="7" style="text-align:center"><input type="button" value="Transfer"  onclick="doAdjustmentEntry(\''+studentFeeInvoiceId+ '\')" class="btn btn-mini btn-inverse"></td></tr>';

	boiler+='</td></tr></table>';
	$('#commonDialogBody').html(boiler);
	$('#settleDates').datepicker({
		dateFormat:"M dd,yy",
		autoclose:true,
		maxDate: 0
	});

	var jArray1=$('#btnStudentInvoiceCancel').data('FeeItemArray');//semesterId
    
	var boiler='<tr><th>Sr No.</th><th>Fee Head Name</th><th class="gems_currency_label">'+juno.labelByCustomer('l.isInvoceToFeesLabel')+' Amount</th><th class="gems_currency_label">Paid Amount</th><th class="gems_currency_label">Difference in Amount</th><th class="gems_currency_label">Transfer From</th><th class="gems_currency_label">Transfer To</th></tr>';
	for(var i=0;i<jArray1.length;i++){
		var amt=jArray1[i]["totalAmount"]!=undefined && jArray1[i]["totalAmount"]!=''?jArray1[i]["totalAmount"]:0.0;
		var semesterId=jArray1[i]["semesterId"]!=undefined?jArray1[i]["semesterId"]:0;
		boiler+='<tr class="clsfeeDetailsadm"><input class="accountheadId" semesterid="'+semesterId+'" feeItemId="'+jArray1[i]["feeItemId"]+'" id="tdid'+jArray1[i]["feeItemId"]+'_'+semesterId+'" type="hidden" semesterId="'+semesterId+'" value="'+jArray1[i]["feeItemId"]+'">'+
		'<td>'+eval(i+1)+'</td>'+
		'<td><b>'+jArray1[i]["orgFeeItemHeadName"]+'</b><br>'+jArray1[i]["description"]+'</td><td class="gems_currency" amt="'+amt+'" id="invc_'+jArray1[i]["feeItemId"]+'_'+semesterId+'">'+jArray1[i]["totalAmount"]+'</td>'+
		'<td class="gems_currency" amt="0.0" id="td_'+jArray1[i]["feeItemId"]+'_'+semesterId+'">0.0</td><td class="gems_currency" id="remains_'+jArray1[i]["feeItemId"]+'_'+semesterId+'">0.0</td>';

		//if(eval(jArray1[i]["totalAmount"])>0){
		boiler+='<td><input type="text" value="0" style="width:90px;text-align:right;" class="framt framt_'+jArray1[i]["feeItemId"]+'_'+semesterId+'" id="'+jArray1[i]["feeItemId"]+'_'+semesterId+'_amt" onkeyup="totamt()"></td>'+
		'<td><input type="text" value="0" style="width:90px;text-align:right;" class="toamt toamt_'+jArray1[i]["feeItemId"]+'_'+semesterId+'"  id="'+jArray1[i]["feeItemId"]+'_'+semesterId+'_amt" onkeyup="totamt()"></td></tr>';
		//}
		/*else{
			boiler+='<td></td><td></td></tr>';
		}*/
	}
	boiler+='<tr class="clsfeeDetailsadm" id="payabletr"></tr>';
	boiler+='<th colspan="4">Total</th><td></td><td class="totfromtot gems_currency" style="text-align:center">0</td><td class="tottorom gems_currency" style="text-align:center">0</td></tr>';
	$('#trnsferFeeStructure').html(boiler);
	
	
	$.ajax({
		url:'getstudentfeeInvoiceDetailsForAdjustmentEntry.json?feeInvoiceId='+studentFeeInvoiceId,
		dataType:'json',
		type:'GET',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray1){
			for(var i=0;i<jArray1.length;i++){
				$('#td_'+jArray1[i].accountname+'_'+jArray1[i].semesterId).html(jArray1[i].amountPaid);
				$('#td_'+jArray1[i].accountname+'_'+jArray1[i].semesterId).data('amt',jArray1[i].amountPaid);
				$('#tdid'+jArray1[i].accountname+'_'+jArray1[i].semesterId).val(jArray1[i].accounthead);
				if(eval(jArray1[0].payableamount)!=0 && i==0){
					var boiler='<input class="accountheadId" feeItemId="0"  type="hidden" value="'+jArray1[0].payableaccountHead+'"><td></td>'+
					'<td>Student Payable</td><td class="gems_currency">0</td><td class="gems_currency" id="td_0">'+jArray1[0].payableamount+'</td>';
					
					if(eval(jArray1[0].payableamount)>0){
						boiler+='<td></td><td><input type="text" value="0" style="width:90px;text-align:right;" class="framt" id="0_amt" onkeyup="totamt()"></td>'+
						'<td><input type="text" value="0" style="width:90px;text-align:right;" class="toamt"  id="0_amt" onkeyup="totamt()"></td></tr>';
					}
					else{
						boiler+='<td></td><td></td><td></td>';
					}
					$('#payabletr').html(boiler);
				}
			}
			
			var jArray1=$('#btnStudentInvoiceCancel').data('FeeItemArray');//studentFeeInvoiceId
			for(var i=0;i<jArray1.length;i++){
				var diffrence=eval($('#invc_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('amt'))-eval($('#td_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).data('amt')!=undefined?$('#td_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).data('amt'):0.0);
				$('#remains_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).html(diffrence);
				if(diffrence>0){
					$('.toamt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).val(diffrence);
					$('.framt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
				}
				else if(diffrence<0){
					$('.framt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).val(Math.abs(diffrence));
					$('.toamt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
				}
				else{
					$('.toamt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
					$('.framt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
				}
				
			}
			totamt();
		},error:function(){

		}
	});
	
	
	
}


function doAdjustmentEntry(studentFeeInvoiceId){
	var feedata='';
	var billAmount=0;
   var billDate=$('#settleDates').val();
	
	if(billDate==0 || billDate==undefined || billDate==''){
		jAlert('Please select bill date');
		return false;
	}
	var famt=0.0;
	var toamt=0.0;
	$('.clsfeeDetailsadm').each(function(){
		var feeItemId=$(this).find('.accountheadId').attr('feeItemId')==undefined || $(this).find('.accountheadId').attr('feeItemId')==""?"-1":$(this).find('.accountheadId').attr('feeItemId');
		var semesterId=$(this).find('.accountheadId').attr('semesterId')==undefined || $(this).find('.accountheadId').attr('semesterId')==""?"-1":$(this).find('.accountheadId').attr('semesterId');
		var accountheadId=$(this).find('.accountheadId').val()==undefined || $(this).find('.accountheadId').val()==""?"-1":$(this).find('.accountheadId').val();
		var fromamt=$(this).find('td').eq(5).find('input').val()==undefined || $(this).find('td').eq(5).find('input').val()==""?"0":$(this).find('td').eq(5).find('input').val();
		var tomamt=$(this).find('td').eq(6).find('input').val()==undefined || $(this).find('td').eq(6).find('input').val()==""?"0":$(this).find('td').eq(6).find('input').val();

		if(eval(fromamt>0) || eval(tomamt)>0){
			feedata+=feeItemId+'~'+accountheadId+'~'+fromamt+'~'+tomamt+'~'+semesterId+'#';
			billAmount+=eval(fromamt);
		}
		famt+=eval(fromamt);
		toamt+=eval(tomamt);
	});
	if(feedata.length>2)
		feedata = feedata.substring(0,feedata.length -1);
if(famt!=toamt){
	jAlert('Amount mis match of both side');
	return false;
}
	
	if(feedata.length>1){
		$.ajax({
			url:'adjustmentEntryController.json',
			data:{studentFeeInvoiceId:studentFeeInvoiceId,
				feedata:feedata,billAmount:billAmount,billDate:billDate},
			dataType:'json',
			type:'GET',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray1){
				jAlert(jArray1.responseText);
				$('#commonDialog').modal('hide');
				getStudentBillingDetails(function(jArray) {
					showStudentBillingDetails(jArray);
					if (jArray.length > 0) {
						var studentInvoiceId = jArray[0].studentInvoiceId;
						// showStudentRecieptPrintOption(studentInvoiceId,jArray);
					}
				});

			},error:function(){

			}
		});
	}else{
		jAlert('Please Enter Transfer  Amount');
		return false;
	}
	
	
}

function totamt(){
	var framt=0.0;
	var toamt=0.0;

	$('.framt').each(function(){
		framt+=eval($(this).val());
	});
	$('.toamt').each(function(){
		toamt+=eval($(this).val());
	});
	$('.tottorom').html(toamt);
	$('.tottorom').data('original_value',toamt);
	$('.totfromtot').html(framt);
	$('.totfromtot').data('original_value',framt);
	applyGemsPlugins();
}

/**
 * @author Vimal
 * @since 3rd Jun 2012
 * @purpose showing the billing details of the selected student
 * @returns
 */

function DeletedReceipt(feeInvoiceId){
    if(feeInvoiceId == undefined || feeInvoiceId ==''  || feeInvoiceId == 0 ) {
        feeInvoiceId = $('#studentFeeInvoiceId').val();
    }

	$.ajax({
		url:'getdeletedBillDetailsByBillNo.json?feeInvoiceId='+feeInvoiceId,
		data:{},
		dataType:'json',
		type:'GET',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){

			if(jArray != null){
				var length = jArray.length;
				var paidAmount = 0.0;
				if (jArray.length > 0) {
					var studentBillingDetails = '<div class="accordion" id="divStudentBillingDetailAccordian" style="width:100%">';
					for ( var i = 0; i < length; i++) {
						paidAmount += parseFloat(jArray[i].amount);
						var desc = jArray[i].desc;
						studentBillingDetails += '<div class="accordion-group">'+
						'<div class="accordion-heading">'+
						'<a class="accordion-toggle" data-toggle="collapse" data-parent="#divStudentBillingDetailAccordian" href="#studentBilling'+jArray[i].studentInvoiceId+''+i+'" style = "color:#000000">'+(i+1)+
						'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bill No.:&nbsp;&nbsp;'+jArray[i].billNo+'&nbsp;&nbsp;&nbsp;Received on:'+jArray[i].timestamp+ '&nbsp;&nbsp;&nbsp; Amount(in Rs.): '+
						formatAmount(jArray[i].amount)+'</a></div>'+
						'<div id="studentBilling'+jArray[i].studentInvoiceId+''+i+'" class="accordion-body collapse" style="background-color: #F7F7F7;">'+
						'<table class = "table table-condensed">'+
						'<tr><th colspan="6" style="text-align:center">RECEIPT';
						/*if ((jArray[i].billDate).toString() == (jArray[i].currentDate).toString() || jArray[i].EditDeleteFlag) {
									studentBillingDetails += '<span style="float:right">';
									//studentBillingDetails += '<input type="button" value="Reverse Entry" class="btn btn-inverse btn-mini" onclick="reversePaymentDetail(\''+ jArray[i].studentBillId + '\')">&nbsp;&nbsp;';
									if ($('#hdnUserRole').val() == "financeadmin" && jArray[i]["paymentDetails"][0] != null && jArray[i]["paymentDetails"][0] != undefined
											&& jArray[i]["paymentDetails"][0]["modeOfPayment"] != 'BankChallan')
										studentBillingDetails += '<input type="button" value="Edit" class="btn btn-inverse btn-mini" onclick="editPaymentDetail(\''+jArray[i].studentBillId + '\')">&nbsp;&nbsp;';
									studentBillingDetails += '<a onclick="deleteStudentBillDetail(\''+ jArray[i].studentBillId+ '\')" class="" href="javascript:void(0)" title="Delete Receipt"><i class="icon-trash"></i></a></span>';
								}*/
						studentBillingDetails += '</th></tr>' +
						'<tr><td><label>Bill No:</label>' + '</td>' + '<td id="tdBillNo"'+i+'>'+jArray[i].billNo+'</td>'+
						'<td><label>Amount(in  <span class="WebRupee">Rs.</span>)</label></td>'+
						'<td id="tdAmount'+i+'">'+formatRupee(parseFloat(Math.round(jArray[i].amount).toFixed(2)))+'</td>'+
						'<td><label>Barcode</label></td>'+
						'<td id="tdBarCode'+i+'"><span style = "float:right" id="tdFeeInvoiceBillBarcodeNo'+i+'"></span></td></tr>'+
						'<tr><td colspan="6">';
						if (desc != undefined)
							studentBillingDetails += '<div style="display:block"><strong>Desc/Remark</strong>&nbsp;&nbsp;&nbsp;'+jArray[i].desc+'</div>';

						studentBillingDetails += '<table class="table table-condensed table-bordered" id="showPaymentDetailTLB'+jArray[i].studentBillId+'">'+
						'<tr><th colspan="6" style="text-align:left">Cash/DD/Cheque Details</th></tr>'+
						'<tr><td style="text-align:center">Amount</td>'+
						'<td style="text-align:center">Payment Mode</td>'+
						'<td style="text-align:center">Chq/DD/Challan No.</td>'+
						'<td style="text-align:center">Bank Name</td>'+
						'<td style="text-align:center">Branch</td>'+
						'<td style="text-align:center"></td></tr>';

						var paymentDetails = jArray[i].paymentDetails;
						for ( var j = 0; j < paymentDetails.length; j++) {
							var studentBillChequeDetailId = paymentDetails[j].studentBillChequeDetailId;
							var paymentMode = "";
							if (paymentDetails[j].modeOfPayment == 'Cheque')
								paymentMode = "Challan";
							else
								paymentMode = paymentDetails[j].modeOfPayment;
							var bankName = paymentDetails[j].modeOfPayment.toString().toLowerCase() != "cash" ? paymentDetails[j].bankName: "N/A";
							var bankBranch = paymentDetails[j].modeOfPayment.toString().toLowerCase() != "cash" ? paymentDetails[j].bankBranch: "N/A";
							var amt = parseFloat(paymentDetails[j].amount).toFixed(2);
							var chequeDDNo = paymentDetails[j].chequeDDNo;
							var chequeDDDate = paymentDetails[j].chequeDDDate;

							if (paymentDetails[j].chequeBouns == "ChequeBounced")
								studentBillingDetails += '<tr class="alert alert-error">';
							else
								studentBillingDetails += '<tr>';
							var customerIdentificationObj = $('#customerHelper').val();
							studentBillingDetails += '<td id="tdBillPaymentMode'+j+'" style="text-align:right"><strong>'+formatAmount(amt)+'</strong></td>';
							if(customerIdentificationObj != undefined && customerIdentificationObj =="ICT_MUMBAI" && paymentMode == 'Concession')
								studentBillingDetails +='<td id="tdBillPaymentMode'+j+'" style="text-align:left">Scholarship to student</td>';
							else
								studentBillingDetails +='<td id="tdBillPaymentMode'+j+'" style="text-align:left">'+paymentMode+'</td>';
							studentBillingDetails +='<td id="tdchequeD'+j+'" class="ChequeDDDate1" style="text-align:center">'+chequeDDNo+'('+chequeDDDate+')</td>'+
							'<td id="tdBankName'+j+'" style="text-align:center">'+bankName+'</td>'+
							'<td id="tdbankBranch'+j+'" style="text-align:center">'+bankBranch+'</td>'+
							'<td>';

							studentBillingDetails += '</td></tr>';
						}
						studentBillingDetails += '</table>'+
						'</td></tr>';

						var billPayableReceivable = parseFloat(jArray[i].studentFeeRecievable);
						if (billPayableReceivable >= 0) {
							studentBillingDetails += '<tr><td colspan="6" align="center"><span style="font-size:12px;font-weight: bold;text-align:center">Student Fees Receivable '
								+ formatRupee(parseFloat(billPayableReceivable.toFixed(2))) + '</span>';
						} else {
							billPayableReceivable = -(billPayableReceivable);
							studentBillingDetails += '<tr><td colspan="6" align="center"><span style="font-size:12px;font-weight: bold;text-align:center">Student Fees Payable '
								+ formatRupee(parseFloat(billPayableReceivable.toFixed(2))) + '</span>';
						}

						studentBillingDetails += '</td></tr></table>'+
						'<div id = "feeBillPrintPreviewBtn">'+
						'<table class="table table-bordered"><tr><th>Print Recipt</th>'+
						'<td><div class="btn btn-mini btn-inverse" onclick="printPaymentWiseStudentReceipt('+jArray[i].studentBillId+')">Institute Admission Fees Receipt Print(Vertical)</div></td>'+
						'<td><div class="btn btn-mini btn-inverse" onclick="printPaymentWiseStudentReceiptHorizontal('+jArray[i].studentBillId+')">Institute Admission Fees Receipt Print(Horizontal)</div></td></tr></table></div>'+
						'</div></div>';
					}
					studentBillingDetails += '</div>';
				} else {
					studentBillingDetails = '<div id="divReceiptHeader" style = "align:center;width:94%;margin-left: 3%;margin-right: 3%;background-color:#f7f7f7;color:#1d5987;margin-top:4px;font-weight:bold;font-size:10px;height:20px;">No Receipt history found!</div>'
						+ '<div id = "divStudentBillingInformationArea" style = "align:center;width: 94%;margin-left: 3%;margin-right: 3%;"></div>';
				}
				$('#commonDialog').modal('show').css({
					width:'870px',
					'margin-left': function () {
						return -($(this).width() / 2);
					}
				});
				$('#commonDialogBody').html(studentBillingDetails);

			}else{

			}
		}
	});
}

function getCancelationAccHeads(){
	if($('#cancelationCheck').is(':checked')){
		$('#cancelationDiv').show();
		var instituteCourseId = $('#cbInstiCourseId option:selected').val();
		$.ajax({
			url: 'getReAccountHeadByAccountHeadTypeForFinance.json',
			dataType: 'json',
			data:{
				headType:'AccountHead_Cancellation_Head',
				instituteCourseId:instituteCourseId
			},
			async: false,
			success: function(jArray) {
				var boiler = '<option value="0">Select</option>';
				for (var i = 0; i < jArray.length; i++){
					boiler += '<option value="' + jArray[i].accountHeadId + '">' + jArray[i].accountHeadName + '</option>';
				}
				$('#cmbCancelationHead').html(boiler);

			},
			error: function() {
				jAlert("Something went wrong, Please try after some time");
			}
		});
	}else{
		$('#cancelationDiv').hide();
	}
}

function getStudentFeeInstallmentDetails(studentFeeInvoiceId){
	$.ajax({
		url:'getstudentFeeInstallmentDetails.json',
		dataType:'json',
		type:'POST',
		data:'studentFeeInvoiceId='+studentFeeInvoiceId,
		success:function(jArray1){
			
			var  boiler1='<div class="label label-info" style="text-align:center">Installment Details</div><br><table class="table table-bordered table-condensed tablePrint"  style="margin-top:-14px">'+
			'<tr><th>Installment No</th><th>Installment Date</th><th class="gems_currency_label">Installment Amount</th><th>Receipt Number</th>'+//<th class="gems_currency_label">Student Payble Amount</th>
			'</tr>';
			if(jArray1.length>0){
				var totalOfInstallment=0.0;
				for(var i = 0 ; i < jArray1.length ; i++){
					totalOfInstallment=eval(totalOfInstallment)+eval(jArray1[i]["installmentAmount"]);
					boiler1+='<tr>';
					boiler1+='<td class="gems_integer">'+jArray1[i]["installmentNo"]+'</td>'+
					'<td>'+jArray1[i]["installmentdate"]+'</td>';
					
					if(jArray1[i]["receiptNo"]=='' || jArray1[i]["receiptNo"]==undefined)
						boiler1+='<td style="text-align:right"><a class="gems_currency" onclick="editStudentFeeInstallment('+jArray1[i]["studFeeInstallment"]+','+jArray1[i]["installmentAmount"]+','+studentFeeInvoiceId+','+jArray1[i]["installmentNo"]+',\''+jArray1[i]["installmentdate"]+'\')" href="javascript:void(0)" title="Edit Amount" id="ancorAmountId_'+i+'">'+jArray1[i]["installmentAmount"]+'</a></td>';
					else
					    boiler1+='<td style="text-align:right" class="gems_currency">'+jArray1[i]["installmentAmount"]+'</td>';
					
					boiler1+='<td class="gems_currency" style="text-align:right">'+jArray1[i]["receiptNo"]+'</td>'+
					'</tr>';
				}
				boiler1+='<tr><th colspan="2">TOTAL</th><th id="totalOfInstallmentID" class="gems_currency" style="text-align:right">'+totalOfInstallment+'</th><th></th></tr>'
			}else{
				boiler1+='<tr><td colspan="4">Installment Not found !!!</td></tr>'
			}
		//}
			if(jArray1.length>0){
				$('#StudentInstallmentDetails').html(boiler1);
			}
		},error:function(){

		}
	});
}
function getStudentBillingDetails(callback) {
var feeInvoiceId = getStudentInvoiceId();
getStudentFeeInstallmentDetails(feeInvoiceId);
$.ajax({
	url : 'getStudentBillingInformation.json?feeInvoiceId=' + feeInvoiceId,
	dataType : 'json',
	beforeSend : function() {
		$('#divStudentBillingInformationArea').find('.preview-bar').addClass(
				'loading-bar');
	},
	complete : function() {
		$('#divStudentBillingInformationArea').find('.preview-bar')
				.removeClass('loading-bar');
	},
	success : function(jArray) {
		$('#studentInvoiceCancellationDate').data('billArray',jArray);
				if(jArray.length>0){
			$('#refreshBillCalId').show();
		}else{
			$('#refreshBillCalId').hide();
		}
		callback(jArray);
	},
	error : function() {
		return;
	}
});
//http://localhost:8080/GEMS/getStudentBillingInformation.json?feeInvoiceId=10216
}

/**
 * 
 * @param jArray
 *            jArray contains billing details of aparticular student in the form
 *            the json object per billing
 */
function showStudentBillingDetails(jArray) {
	var postType=$('#postType').val();
$('#btnGenerateBill').hide();
$('#btnMaptoReceipt').hide();
$('#divReceiptHeader').hide();
$('#divStudentBillingInformationArea').hide();


if (jArray == undefined) {
	getStudentBillingDetails(function(jArray) {
		showStudentBillingDetails(jArray);
	});
} else {
	//if(postType=="financeadmin"){
		
		$('#btnGenerateBill').show();
		$('#btnMaptoReceipt').show();
		$('#divReceiptHeader').show();
		$('#divStudentBillingInformationArea').show();
		
		var length = jArray.length;
		var paidAmount = 0.0;
		if (jArray.length > 0) {
			var editPaymentDetailBoiler = '';
			var studentBillingDetails = '<div class="accordion" id="divStudentBillingDetailAccordian" style="width:100%">';
			for ( var i = 0; i < length; i++) {
				paidAmount += parseFloat(jArray[i].amount);
				var desc = jArray[i].desc;
				studentBillingDetails += '<div class="accordion-group">'
					+ '<div class="accordion-heading">'
					+ '<a class="accordion-toggle" data-toggle="collapse" data-parent="#divStudentBillingDetailAccordian" href="#studentBilling'
					+ i
					+ '"'
					+ 'onclick="getBarcode(\''
					+ jArray[i].billNo
					+ '\',\'tdFeeInvoiceBillBarcodeNo'
					+ i
					+ '\');" style = "color:#000000">'
					+ (i + 1)
					+ ''
					+ '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bill No.:&nbsp;&nbsp;'
					+ jArray[i].billNo
					+ '&nbsp;&nbsp;&nbsp;Received on: '
					+ jArray[i].timestamp
					+ '&nbsp;&nbsp;&nbsp; <span class="gems_currency_label">Amount</span>: '
					+ formatAmount(jArray[i].amount) +
					(jArray[i].advanceAmount!='0.00'?'&nbsp;&nbsp;&nbsp;  <span class="gems_currency_label">Advance Paid</span>: '+formatAmount(jArray[i].advanceAmount):'');
					if(jArray[i].transferdAmount>0.0){
						studentBillingDetails += '&nbsp;&nbsp;&nbsp;  <span class="gems_currency_label">Transferred Amount</span>: '
							+ formatAmount(jArray[i].transferdAmount)+'&nbsp;&nbsp;&nbsp;&nbsp;Transferred Receipt No : '+jArray[i].transferedReceiptNo;
					}
					studentBillingDetails += '</a></div>'
					+ '<div id="studentBilling'
					+ i
					+ '" class="accordion-body collapse" style="background-color: #F7F7F7;">'
					+ '<table class = "table table-condensed">'
					+ '<tr>'
					+ '<th colspan="6" style="text-align:center">RECIEPT';
				if($('#customerHelper').val()!=undefined && $('#customerHelper').val()=="DYPATIL" || $('#customerHelper').val()=="INDIRA_PUNE") {
					studentBillingDetails += '<span style="float:left;color:black"><input type="checkbox" id="changeClassFlag-'+jArray[i].studentBillId+'" value=""><b> Change Class Name</b> &nbsp;&nbsp;&nbsp;&nbsp;</span>';
				}
				if ((jArray[i].billDate).toString() == (jArray[i].currentDate)
						.toString()
						|| jArray[i].EditDeleteFlag) {
					var flag=true;
					for(var j=0;j<jArray[i].paymentDetails.length;j++)
					{
						if(jArray[i].paymentDetails[j].chequeBouns == "ChequeBounced")
							flag=false;
					}
					
					
					if(flag)
					{

						studentBillingDetails += '<span style="float:right">';
						/*if(jArray[i]["paymentDetails"][0]!=undefined && jArray[i]["paymentDetails"][0] != null && jArray[i]["paymentDetails"][0]["modeOfPayment"] != 'OnlineMode')
				{
					studentBillingDetails += '<input type="button" value="Reverse Entry" class="btn btn-inverse btn-mini" onclick="reversePaymentDetail(\''
						+ jArray[i].studentBillId + '\')">&nbsp;&nbsp;';
				}*/
						if(jArray[i].advanceAmount>0 && $('#customerHelper').val()=="MAHINDRA_UNIVERSITY"){
							studentBillingDetails +='<a href="javascript:void(0)" onclick="studentAdvanceAdjustment(\''+jArray[i].studentBillId+ '\',\''+jArray[i].billNo+ '\',\''+jArray[i].amount+ '\',\''+jArray[i].desc+ '\')" class="btn btn-mini btn-inverse"><i class=""></i>&nbsp;Advance Bill Adjustment</a>&nbsp;&nbsp;';
						}
						 if(jArray[i]["paymentMode"]=='Concession' && ( $('#customerHelper').val()=="CMR_UNIVERSITY" || $('#customerHelper').val() =="CMR_IT" || $('#customerHelper').val() =="DYPATIL")  || $('#customerHelper').val() =="GC_UNIVERSITY" ){
						     studentBillingDetails +='<a href="javascript:void(0)" onclick="getstudentspaymentattchments(\''+jArray[i].studentBillId+ '\')" class="btn btn-mini btn-inverse"  style="display: inline-block;"><i class="fa fa-download"></i>&nbsp;Download Attachment</a>&nbsp;&nbsp;';   
						 }
						 if($('#customerHelper').val()=="BLM_MUNJAL"){//Hide buton for all client 
							studentBillingDetails += '<input type="button" id="btnMapToOtherStructure'+ jArray[i].studentBillId +'"  value="Map To Other Fee Structure" class="btn btn-inverse btn-mini" onclick="mapToOtherFeeStructure(\''
								+ jArray[i].studentBillId + '\',\''
								+ jArray[i].instituteCourseId + '\',\''
								+ jArray[i].manualAccountHeadId+ '\',\''+jArray[i].billNo+ '\',\''+jArray[i].receiptdate+'\',\''+jArray[i]["paymentDetails"][0]["taxDetail"]+ '\',\''+jArray[i].installment+ '\',\''+jArray[i].nextPaymentDate+ '\',\''+jArray[i]["paymentDetails"][0]["studentId"]+ '\')">&nbsp;&nbsp;';
						}
				
						if ($('#hdnUserRole').val() == "financeadmin"
							&& jArray[i]["paymentDetails"][0] != null
							&& jArray[i]["paymentDetails"][0] != undefined
							&& (!jArray[i]["transferdStatus"])
							&& jArray[i]["paymentMode"]!='OfflinePayment' && jArray[i]["paymentMode"]!='Concession'
							&& jArray[i]["paymentMode"]!='Online Mode' && jArray[i]["paymentMode"]!='Other/transfered'
							&& jArray[i]["paymentMode"]!='tRANSFER Mode' 
                            && jArray[i]["paymentMode"]!='online' && jArray[i]["paymentMode"]!='Adjustment of payable'){
								
								if(jArray[i]["paymentMode"]!='Government Liabilty'){
										studentBillingDetails += '<input type="button" value="Edit" class="btn btn-inverse btn-mini" onclick="editPaymentDetail(\''
											+ jArray[i].studentBillId + '\',\''+jArray[i].manualAccountHeadId+ '\',\''+jArray[i].bankAccountHeadId+ '\',\''+jArray[i].instituteCourseId+ '\',\''+jArray[i]["paymentDetails"][0]["financePolicy"]+'\',\''+jArray[i].billNo+ '\',\''+jArray[i].receiptdate+'\')">&nbsp;&nbsp;';
								}else if($('#customerHelper').val()=="BITS_MESRA"){
									studentBillingDetails += '<input type="button" value="Edit" class="btn btn-inverse btn-mini" onclick="editPaymentDetail(\''
											+ jArray[i].studentBillId + '\',\''+jArray[i].manualAccountHeadId+ '\',\''+jArray[i].bankAccountHeadId+ '\',\''+jArray[i].instituteCourseId+ '\',\''+jArray[i]["paymentDetails"][0]["financePolicy"]+'\',\''+jArray[i].billNo+ '\',\''+jArray[i].receiptdate+'\')">&nbsp;&nbsp;';
								}
								
								
						}
					//	if(jArray[i]["paymentMode"]=='online'){
							studentBillingDetails += '<input type="button" style="display:none" value="Recalculate" class="btn btn-inverse btn-mini" onclick="recalculatePaymentDetail(\''
												+ jArray[i].studentBillId + '\',\''+jArray[i].instituteCourseId+ '\',\''+jArray[i].studInstiCourSemBatchId+ '\',\''+jArray[i].billNo+ '\')">&nbsp;&nbsp;';
					//	}
						
						if(jArray[i]["paymentDetails"][0] != undefined){
							studentBillingDetails += '<input type="button" id="transferbtn" value="Transfer" class="btn btn-inverse btn-mini" onclick="TransferBill(\''
								+ jArray[i].studentBillId + '\',\''
								+ jArray[i]["paymentDetails"][0]["financePolicy"] + '\',\''
								+ jArray[i]["paymentDetails"][0]["financePolicyspecificatinId"] + '\',\''+jArray[i].billNo+ '\',\''+jArray[i]["paymentDetails"][0]["studentId"]+ '\')">&nbsp;&nbsp;';
						
							
						}
						if($('#customerHelper').val()=="BLM_MUNJAL"){//Hide buton for all client 
							if(jArray[i]["paymentDetails"][0]!=undefined){
							studentBillingDetails += '<input type="button" id="transferbtn" value="Transfer To Other Fee Structure" class="btn btn-inverse btn-mini" onclick="TransferBills1(\''
								+ jArray[i].studentBillId + '\',\''
								+ jArray[i]["paymentDetails"][0]["financePolicy"] + '\',\''
								+ jArray[i]["paymentDetails"][0]["financePolicyspecificatinId"] + '\',\''+jArray[i].billNo+ '\',\''+jArray[i]["paymentDetails"][0]["studentId"]+ '\')">&nbsp;&nbsp;';
							}
						}
						// '<input type="button" value="Edit" class="btn btn-inverse
						// btn-mini"
						// onclick="showEditStudentBillDialog(\''+jArray[i].studentBillId+'\')">&nbsp;&nbsp;'+
						// '<input type="button"
						// onclick="deleteStudentBillDetail(\''+jArray[i].studentBillId+'\')"
						// value="Delete Receipt" class="btn btn-inverse btn-mini">'+
						//if((!jArray[i]["transferdStatus"])){
							studentBillingDetails += '<a onclick="deleteStudentBillDetail(\''
								+ jArray[i].studentBillId
								+ '\')" class="" href="javascript:void(0)" title="Delete Receipt"><i class="icon-trash"></i></a>'
								+ '</span>';
						//}
					}
				}
				studentBillingDetails += '</th>' + '</tr>' + '<tr>' + '<td>'
				+ '<label>Bill No:</label>' + '</td>' + '<td id="tdBillNo"'
				+ i
				+ '>'
				+ jArray[i].billNo
				+ '</td>'
				+ '<td>'
				+ '<label class="gems_currency_label">Amount</label>'
				+ '</td>'
				+ '<td id="tdAmount'
				+ i
				+ '">'
				+ formatRupee(parseFloat(Math.round(jArray[i].amount)
						.toFixed(2)))
						+ '</td>'
						+ '<td>'
						+ '<label>Barcode</label>'
						+ '</td>'
						+ '<td id="tdBarCode'
						+ i
						+ '"><span style = "float:right" id="tdFeeInvoiceBillBarcodeNo'
						+ i
						+ '"></span></td>'
						+ '</tr>'
						+ '<tr>'
						+ '<td colspan="6">';
				if (desc != undefined) {
					studentBillingDetails += '<div style="display:block"><strong>Desc/Remark</strong>&nbsp;&nbsp;&nbsp;<div id="descId">'
						+ jArray[i].desc + '<a onclick="editStudentBillNarration(\''+ jArray[i].studentBillId+ '\')" class="" href="javascript:void(0)" title="Edit Name"><i class="icon-edit"></i></a></div></div>';  
				}
				studentBillingDetails += '<table class="table table-condensed table-bordered" id="showPaymentDetailTLB'
					+ jArray[i].studentBillId
					+ '" >'
					+ '<tr>'
					+ '<th colspan="6" style="text-align:left">Cash/DD/Cheque Details</th>'
					+ '</tr>'
					+ '<tr>'
					+ '<td class="gems_currency_label">Amount</td>'
					+ '<td style="text-align:center">Payment Mode</td>'
					+ '<td style="text-align:center">Chq/DD/Challan No.</td>'
					+ '<td style="text-align:center">Bank Name</td>'
					+ '<td style="text-align:center">Branch</td>'
					+ '<td style="text-align:center"></td>' + '</tr>';

				editPaymentDetailBoiler += '<div id="divStudentBillingEditArea'
					+ jArray[i].studentBillId
					+ '" style="display:none;" ><table class="table table-condensed table-bordered" id="editPaymentdetailTLB'
					+ jArray[i].studentBillId + '" >' + '<thead>' + '<tr>'
					+ '<th>Pay Mode</th>' + '<th class="gems_currency_label">Amt.</th>'
					+ '<th>Bank Name</th>' + '<th>Branch</th>'
					+ '<th>Chq/DD No.</th>' + '<th>Chq/DD Dt.</th>'
					+ '<th></th>' + '<tr>' + '</thead>'
					+ '<tbody class="tblBillPaymentDetail">';
				var customerIdentificationObj = $('#customerHelper').val();
				var paymentDetails = jArray[i].paymentDetails;
				var studentBillId = jArray[i].studentBillId;
				for ( var j = 0; j < paymentDetails.length; j++) {
					var studentBillChequeDetailId = paymentDetails[j].studentBillChequeDetailId;
					var paymentMode = "";
					//temp commented by vishal
					/*if (paymentDetails[j].modeOfPayment == 'Cheque')
					paymentMode = "Challan";
				else*/
					paymentMode = paymentDetails[j].modeOfPayment;
					var bankName = paymentDetails[j].modeOfPayment.toString()
					.toLowerCase() != "cash" ? paymentDetails[j].bankName
							: "N/A";
					var bankBranch = paymentDetails[j].modeOfPayment.toString()
					.toLowerCase() != "cash" ? paymentDetails[j].bankBranch
							: "N/A";
					var amt = parseFloat(paymentDetails[j].amount).toFixed(2);
					var chequeDDNo = paymentDetails[j].chequeDDNo;
					var chequeDDDate = paymentDetails[j].chequeDDDate;

					if (paymentDetails[j].chequeBouns == "ChequeBounced")
						studentBillingDetails += '<tr class="alert alert-error PaymentDetailArr'+studentBillId+'">';
					else
						studentBillingDetails += '<tr class="PaymentDetailArr'+studentBillId+'">';
					studentBillingDetails += '<td id="tdBillPaymentMode' + j
					+ '" style="text-align:right" class="gems_currency"><strong>' + amt
					+ '</strong></td>';
					if(customerIdentificationObj != undefined && customerIdentificationObj =="ICT_MUMBAI" && paymentMode == 'Concession')
						studentBillingDetails +='<td id="tdBillPaymentMode'+j+'" style="text-align:left">Scholarship to student</td>';
					else
						studentBillingDetails +='<td id="tdBillPaymentMode'+j+'" style="text-align:left">'+paymentMode+'</td>';
					
					studentBillingDetails += '<td id="tdchequeD' + j
					+ '" class="ChequeDDDate1" style="text-align:center">'
					+ chequeDDNo + ' (' + chequeDDDate + ')</td>'
					+ '<td id="tdBankName' + j
					+ '" style="text-align:center">' + bankName + '</td>'
					+ '<td id="tdbankBranch' + j
					+ '" style="text-align:center">' + bankBranch + '</td>'
					+ '<td>';
					if (paymentMode != null && paymentMode != undefined
							&& paymentMode != 'BankChallan' && paymentMode != 'OnlineMode') {
						if (paymentDetails[j].chequeBouns != "ChequeBounced"
                            && (paymentMode == "Cheque" || paymentMode == "BankChallan(M)" || paymentMode == "BankChallan(S)" || paymentMode == "BankChallan(W)" || paymentMode == "DemandDraft" || paymentMode == "OfflinePayment"))
							studentBillingDetails += '<a href="javascript:void(0)" class="btn btn-mini" onclick="chequeBouns(\''+jArray[i]["paymentDetails"][0]["financePolicy"]+'\',\''+jArray[i].billNo+ '\',\''+chequeDDDate+ '\')">Cheque/DD Bounce</a>';
						else if (paymentDetails[j].chequeBouns == "ChequeBounced") {
							studentBillingDetails += '<a href="javascript:void(0)" class="btn btn-mini btn-inverse" onclick="chequeBounceLetterDownload(\''+studentBillId+ '\',\''+chequeDDNo+ '\',\''+chequeDDDate+ '\',\''+bankName+ '\',\''+studentBillChequeDetailId+'\')">Letter of Cheque/DD Bounce</a>';

						}

						// studentBillingDetails += '<a href="javascript:void(0)"
						// class="btn btn-mini"
						// onclick="chequeRevert('+studentBillChequeDetailId+')">Un-Bounce</a>';
					}
					/*else if(paymentMode == 'OnlineMode')
				{
					studentBillingDetails += '<a href="javascript:void(0)" class="btn btn-mini" onclick="chargeBackEntry('
						+ studentBillId
						+ ')">Charge Back</a>';
				}*/
					studentBillingDetails += '</td>' + '</tr>';

					editPaymentDetailBoiler += '<tr id="trPaymentDetail'
						+ studentBillChequeDetailId
						+ '" >'
						+ '<td><select style="width:110px" id="editPaymentmodeId'+studentBillId+'" editAttrBill="'+studentBillId+'" class="paymentMode" onchange = "renderPaymentDetails(this)" >'
						+ '<option value = "0">Select</option>';
					if (paymentDetails[j].modeOfPayment == 'Cash')
						editPaymentDetailBoiler += '<option value = "Cash" selected="selected">Cash</option>';
					else
						editPaymentDetailBoiler += '<option value = "Cash">Cash</option>';

					if (paymentDetails[j].modeOfPayment == 'DemandDraft')
						editPaymentDetailBoiler += '<option value = "DemandDraft" selected="selected" >Demand Draft</option>';
					else
						editPaymentDetailBoiler += '<option value = "DemandDraft">Demand Draft</option>';

					if (paymentDetails[j].modeOfPayment == 'Cheque')
						editPaymentDetailBoiler += '<option value = "Cheque" selected="selected" >Cheque</option>';
					else
						editPaymentDetailBoiler += '<option value = "Cheque">Cheque</option>';

					if (paymentDetails[j].modeOfPayment == 'NEFT1')
						editPaymentDetailBoiler += '<option value = "NEFT1" selected="selected" >NEFT1</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT1">NEFT1</option>';

					if (paymentDetails[j].modeOfPayment == 'NEFT2')
						editPaymentDetailBoiler += '<option value = "NEFT2" selected="selected" >NEFT2</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT2">NEFT2</option>';

					if (paymentDetails[j].modeOfPayment == 'NEFT3')
						editPaymentDetailBoiler += '<option value = "NEFT3" selected="selected" >NEFT3</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT3">NEFT3</option>';

					if (paymentDetails[j].modeOfPayment == 'NEFT4')
						editPaymentDetailBoiler += '<option value = "NEFT4" selected="selected" >NEFT4</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT4">NEFT4</option>';


					if (paymentDetails[j].modeOfPayment == 'NEFT5')
						editPaymentDetailBoiler += '<option value = "NEFT5" selected="selected" >NEFT5</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT5">NEFT5</option>';


					if (paymentDetails[j].modeOfPayment == 'NEFT6')
						editPaymentDetailBoiler += '<option value = "NEFT6" selected="selected" >NEFT6</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT6">NEFT6</option>';


					if (paymentDetails[j].modeOfPayment == 'NEFT7')
						editPaymentDetailBoiler += '<option value = "NEFT7" selected="selected" >NEFT7</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT7">NEFT7</option>';


					if (paymentDetails[j].modeOfPayment == 'NEFT8')
						editPaymentDetailBoiler += '<option value = "NEFT8" selected="selected" >NEFT8</option>';
					else
						editPaymentDetailBoiler += '<option value = "NEFT8">NEFT8</option>';


					if (paymentDetails[j].modeOfPayment == 'RTGS1')
						editPaymentDetailBoiler += '<option value = "RTGS1" selected="selected" >RTGS1</option>';
					else
						editPaymentDetailBoiler += '<option value = "RTGS1">RTGS1</option>';

					if (paymentDetails[j].modeOfPayment == 'RTGS2')
						editPaymentDetailBoiler += '<option value = "RTGS2" selected="selected" >RTGS2</option>';
					else
						editPaymentDetailBoiler += '<option value = "RTGS2">RTGS2</option>';

					if (paymentDetails[j].modeOfPayment == 'RTGS3')
						editPaymentDetailBoiler += '<option value = "RTGS3" selected="selected" >RTGS3</option>';
					else
						editPaymentDetailBoiler += '<option value = "RTGS3">RTGS3</option>';

					if (paymentDetails[j].modeOfPayment == 'RTGS4')
						editPaymentDetailBoiler += '<option value = "RTGS4" selected="selected" >RTGS4</option>';
					else
						editPaymentDetailBoiler += '<option value = "RTGS4">RTGS4</option>';

					if (paymentDetails[j].modeOfPayment == 'RTGS5')
						editPaymentDetailBoiler += '<option value = "RTGS5" selected="selected" >RTGS5</option>';
					else
						editPaymentDetailBoiler += '<option value = "RTGS5">RTGS5</option>';


					if (paymentDetails[j].modeOfPayment == 'RTGS6')
						editPaymentDetailBoiler += '<option value = "RTGS6" selected="selected" >RTGS6</option>';
					else
						editPaymentDetailBoiler += '<option value = "RTGS6">RTGS6</option>';


					if (paymentDetails[j].modeOfPayment == 'RTGS7')
						editPaymentDetailBoiler += '<option value = "RTGS7" selected="selected" >RTGS7</option>';
					else
						editPaymentDetailBoiler += '<option value = "RTGS7">RTGS7</option>';
					if(customerIdentificationObj != undefined && customerIdentificationObj =="DYPATIL"){
						if (paymentDetails[j].modeOfPayment == 'TRANSFER')
							editPaymentDetailBoiler += '<option value = "TRANSFER" selected="selected" >TRANSFER</option>';
						else
							editPaymentDetailBoiler += '<option value = "TRANSFER">TRANSFER</option>';
					}else {
						if (paymentDetails[j].modeOfPayment == 'RTGS8')
							editPaymentDetailBoiler += '<option value = "RTGS8" selected="selected" >RTGS8</option>';
						else
							editPaymentDetailBoiler += '<option value = "RTGS8">RTGS8</option>';
					}
					if (paymentDetails[j].modeOfPayment == 'CardPayment')
						editPaymentDetailBoiler += '<option value = "CardPayment" selected="selected" >CardPayment</option>';
					else
						editPaymentDetailBoiler += '<option value = "CardPayment">CardPayment</option>';

//
					if (paymentDetails[j].modeOfPayment == 'BankChallan')
						editPaymentDetailBoiler += '<option value = "BankChallan" selected="selected" >Bank Challan</option>';
					else
						editPaymentDetailBoiler += '<option value = "BankChallan">Bank Challan</option>';
					
					
					if (paymentDetails[j].modeOfPayment == 'Other Course Fee')
						editPaymentDetailBoiler += '<option value = "Other Course Fee" selected="selected" >Other Course Fee</option>';
					else
						editPaymentDetailBoiler += '<option value = "Other Course Fee">Other Course Fee</option>';
					
					//chanakya 
					var customerIdentificationObj = $('#customerHelper').val();
					if(customerIdentificationObj != undefined && customerIdentificationObj =="CHANAKYA"){
						if (paymentDetails[j].modeOfPayment == 'BankChallan(W)')
							editPaymentDetailBoiler += '<option value = "BankChallan(W)" selected="selected" >BankChallan(W)</option>';
						else
							editPaymentDetailBoiler += '<option value = "BankChallan(W)">BankChallan(W)</option>';

						if (paymentDetails[j].modeOfPayment == 'BankChallan(M)')
							editPaymentDetailBoiler += '<option value = "BankChallan(M)" selected="selected" >BankChallan(M)</option>';
						else
							editPaymentDetailBoiler += '<option value = "BankChallan(M)">BankChallan(M)</option>';

						if (paymentDetails[j].modeOfPayment == 'BankChallan(S)')
							editPaymentDetailBoiler += '<option value = "BankChallan(S)" selected="selected" >BankChallan(S)</option>';
						else
							editPaymentDetailBoiler += '<option value = "BankChallan(S)">BankChallan(S)</option>';


						if (paymentDetails[j].modeOfPayment == 'Cash(M)')
							editPaymentDetailBoiler += '<option value = "Cash(M)" selected="selected" >Cash(M)</option>';
						else
							editPaymentDetailBoiler += '<option value = "Cash(M)">Cash(M)</option>';


						if (paymentDetails[j].modeOfPayment == 'Cash(W)')
							editPaymentDetailBoiler += '<option value = "Cash(W)" selected="selected" >Cash(W)</option>';
						else
							editPaymentDetailBoiler += '<option value = "Cash(W)">Cash(W)</option>';


						if (paymentDetails[j].modeOfPayment == 'Cash(S)')
							editPaymentDetailBoiler += '<option value = "Cash(S)" selected="selected" >Cash(S)</option>';
						else
							editPaymentDetailBoiler += '<option value = "Cash(S)">Cash(S)</option>';
						
						if (paymentDetails[j].modeOfPayment == 'Cash(D)')
							editPaymentDetailBoiler += '<option value = "Cash(D)" selected="selected" >Cash(D)</option>';
						else
							editPaymentDetailBoiler += '<option value = "Cash(D)">Cash(D)</option>';
						
					}
					if(customerIdentificationObj != undefined && customerIdentificationObj =="ICT_MUMBAI"){
						if (paymentDetails[j].modeOfPayment == 'Concession')
							editPaymentDetailBoiler += '<option value = "Concession" selected="selected" >Scholarship to student</option>';
						else
							editPaymentDetailBoiler += '<option value = "Concession">Scholarship to student</option>';
					}else{
						if (paymentDetails[j].modeOfPayment == 'Concession')
							editPaymentDetailBoiler += '<option value = "Concession" selected="selected" >Concession</option>';
						else
							editPaymentDetailBoiler += '<option value = "Concession">Concession</option>';
					}

					editPaymentDetailBoiler += '</select><br><span id="configuredBankname1'+studentBillId+'"></span></td>'
						+ '<td>'
						+ '<div class="input-prepend">'
						+ '<span class="add-on"><span class="WebRupee">Rs.</span></span>'
						+ '<input style="width:80px;text-align:right" class="amount" placeholder="Amount" type="text"  value = "'
						+ amt + '" >' + '</div>' + '</td>';

					if (paymentDetails[j].modeOfPayment == 'Cash') {
						editPaymentDetailBoiler += '<td><input type="text" id="" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead" disabled="disabled" ></td>'
							+ '<td><input type = "text"  class="branch bankdetail" style="width:100px" placeholder="Branch" disabled="disabled" ></td>'
							+ '<td><input type = "text"  class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD/NEFT/RTGS No." disabled="disabled" ></td>'
							+ '<td><input type = "text"  class="chequeDDDate bankdetail" readonly="true" style="width:100px" placeholder="Cheque/DD/NEFT/RTGS Date" disabled="disabled" ></td>';
					} else {
						editPaymentDetailBoiler += '<td><input type="text" id="" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead" value="'
							+ bankName
							+ '" ></td>'
							+ '<td><input type = "text"  class="branch bankdetail" style="width:100px" placeholder="Branch" value="'
							+ bankBranch
							+ '" ></td>'
							+ '<td><input type = "text"  class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD No." value="'
							+ chequeDDNo
							+ '" ></td>'
							+ '<td><input type = "text"  class="chequeDDDate bankdetail" readonly="readonly" style="width:100px" placeholder="Cheque/DD Date" value="'
							+ chequeDDDate + '" ></td>';
					}

					//editPaymentDetailBoiler += '<td><i class="icon-remove pointer" onclick="removePaymentOption(this)"></i></td>'
					editPaymentDetailBoiler += '<td></td>'
						+ '</tr>';

				}
				studentBillingDetails += '</table>';

				editPaymentDetailBoiler += '</tbody>'
				+'<tr class="cardpaymentMode" style="display:none"><td>Charges:<br>'
				+'<input type="radio" name="charges" id="male" value="Yes" onclick="checkConfigurationEDIT('+studentBillId+');" class="contactvalidator">Yes'
				+'<input type="radio" name="charges" value="No" id="female" onclick="checkConfigurationEDIT('+studentBillId+');" class="contactvalidator" >No</td>'
				+'<td class="againstCharges">Charges Against:<br><select id = "otherFeeAccountHeadcmb'+studentBillId+'"  style="width:100px" class="otherFeeAccountHead11" onchange = "" ></select></td>'
				+'<td class="typeOfCard">Card type:<br><select id = "otherFeeAccountHeadcmbCard'+studentBillId+'"  style="width:100px" class="otherFeeAccountHead'+studentBillId+'" onchange = "" >'
				+'<option value = "Debit" class="Debit">Debit Card</option><option value = "Credit" class="Credit">Credit Card</option></select></td>'

				+ '<td>Percentage:<br><input type = "text" id ="Percentage'+studentBillId+'" class="cardPercentage" onkeyUp="calculateCardpaymentEdit('+studentBillId+');" style="width:100px" placeholder="Percent"></td>'
				+ '<td colspan="2">Total Amount:<br><input type = "text" id = "TotalAmoount'+studentBillId+'"   style="width:100px" placeholder="TotalAmoount"></td><td></td></tr>'
				+'</table>';

				 
				editPaymentDetailBoiler += '<table id="paymentDetailAddRowAndSaveTLB'
					+ jArray[i].studentBillId
					+ '" class="table table-condensed table-bordered" >'
					+($('#txtStudentSearchBarInvoice').data('currCode')!='INR' && $('#txtStudentSearchBarInvoice').data('currCode')!=undefined
							?'<tr><th>Current Conversion Amount</th><td><input type="text" id="txtConversionAmt'+studentBillId+'" style="text-align:right" value="'+jArray[i].conversionAmt+'"></td><td colspan="2"></td></tr>':'')
					+ '<tr><td  style="text-align:center" colspan="4">'
					+ '<input type = "button" class = "btn btn-inverse btn-mini editStudentBillingInfoBtn'
					+ jArray[i].studentBillId
					+ '" onclick = "editStudentBillingInformation('
					+ jArray[i].studentBillId
					+ ','
					+ jArray[i].studentInvoiceId  
					+ ',\''
					+ jArray[i].billNo
					+ '\',\''
					+ jArray[i].receiptdate
					+ '\')" value = "Edit"  >&nbsp;&nbsp;'
					+ '<input type = "button" style="display:none" class = "btn btn-inverse btn-mini editStudentBillingInfoBtn'
					+ jArray[i].studentBillId
					+ ' " onclick = "addMorePaymentDetails('
					+ 'divStudentBillingEditArea'
					+ jArray[i].studentBillId
					+ ')" value =  "Add New Row" >&nbsp;&nbsp;'
					+ // addMorePaymentDetailsForEdit('+jArray[i].studentBillId+',this)
					'<input type = "button" class = "btn editStudentBillingInfoCancelBtnCls editStudentBillingInfoBtn'
					+ jArray[i].studentBillId
					+ ' " onclick = "hideEditPaymentDetailTLB('
					+ jArray[i].studentBillId
					+ ')" value =  "Cancel" >'
					+ '</td></tr></table>'
					+ '<div class="responsebar">'
					+ '</div>' + '</div>';

				studentBillingDetails += editPaymentDetailBoiler;

				studentBillingDetails += '</td></tr>';
				var lblCustomerHelper=$('#customerHelper').val();
				var billPayableReceivable = parseFloat(jArray[i].studentFeeRecievable);
				var transferdAmount = parseFloat(jArray[i].transferdAmount)
				if (billPayableReceivable >= 0) {
					studentBillingDetails += '<tr><td colspan="6" align="center"><span style="font-size:12px;font-weight: bold;text-align:center">Student Fees Receivable : '
						+ formatRupee(parseFloat(billPayableReceivable
								.toFixed(2)))+((transferdAmount>0)?('&nbsp;&nbsp;&nbsp;&nbsp;Transferred Amount : '+formatAmount(jArray[i].transferdAmount)+'&nbsp;&nbsp;&nbsp;&nbsp;Transferred Receipt No : '+jArray[i].transferedReceiptNo+'</span>'):('</span>'));
				} else {
					billPayableReceivable = -(billPayableReceivable);
					studentBillingDetails += '<tr><td colspan="6" align="center"><span style="font-size:12px;font-weight: bold;text-align:center">Student Fees Payable : '
						+ formatRupee(parseFloat(billPayableReceivable
								.toFixed(2))) +((transferdAmount>0)?('&nbsp;&nbsp;&nbsp;&nbsp;Transferred Amount : '+formatAmount(jArray[i].transferdAmount)+'&nbsp;&nbsp;&nbsp;&nbsp;Transferred Receipt No : '+jArray[i].transferedReceiptNo+'</span>'):('</span>'));
				}

				studentBillingDetails += '</td></tr>' + '</table>';

				// if(jArray[i].paymentWiseRecieptGenerateFlag == 'YES') {
				studentBillingDetails += '<div id = "feeBillPrintPreviewBtn" style="">'
					+ '<table class="table table-bordered">'
					+ '<tr>';
				
				if(lblCustomerHelper!="REVA_UNIVERSITY"){
					if(lblCustomerHelper=="WESCHOOL"){
						studentBillingDetails += '<td colspan="2"><label style="width:50px"><input type="radio" value="PDF" id="printPDF'
						+ i
						+ '" name="recieptPrint'
						+ i
						+ '" checked="checked">&nbsp;&nbsp;PDF</label></td>';
					}else{
						studentBillingDetails += '<td><label style="width:50px"><input type="radio" value="PDF" id="printPDF'
							+ i
							+ '" name="recieptPrint'
							+ i
							+ '" checked="checked">&nbsp;&nbsp;PDF</label></td>'
							+ '<td><label style="width:100px"><input type="radio" value="PDF" id="printHC'
							+ i
							+ '" onclick="printAdmissionReceipt(\''
							+ jArray[i].studentBillId
							+ '\');" name="recieptPrint'
							+ i
							+ '">&nbsp;&nbsp;Hard copy</label></td>';
					}
				}
					// '<td><label style="width:100px"><input type="radio"
					// value="PDF" id="printBo" name="PrintBonafide" onclick=""
					// >&nbsp;&nbsp;Print Bonafide</label></td>'+
				if(lblCustomerHelper!="REVA_UNIVERSITY"){
					studentBillingDetails +='<td><label><input type="checkbox" checked="true" name="OfficeCopy'
							+ i
							+ '" id="chkOfficeCopy'
							+ i
							+ '" value="OfficeCopy">&nbsp;&nbsp;Office copy</label></td>'
							+ '<td><label><input type="checkbox" checked="true" name="StudentCopy'
							+ i
							+ '" id="chkStudentCopy'
							+ i
							+ '" value="StudentCopy">&nbsp;&nbsp;Student copy</label></td>'
							+ '<td><label><input type="checkbox" checked="true" name="Printlogo" id="chkPrintLogo'
							+ i
							+ '" value="PrintLogo">&nbsp;&nbsp;Print logo</label></td>';
					if(lblCustomerHelper=="WESCHOOL"){
						studentBillingDetails +='<td colspan="2">'
								+ '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''
								+ jArray[i].studentBillId
								+ '\',\''
								+ i
								+ '\',\'Original\')"><i class="icon-download-alt"></i>Original Receipt</a>&nbsp;&nbsp;'
								+ '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''
								+ jArray[i].studentBillId
								+ '\',\''
								+ i
								+ '\',\'Duplicate\')"><i class="icon-download-alt"></i>Duplicate Receipt</a> '
								+ '</td>';
					}else{
						
						if(jArray[i].billPatVertical!=""){
							  studentBillingDetails += '<td>'
							  + '<a href="javascript:void(0)" title="Download" onclick="window.open(\''
								+ jArray[i].billPatVertical+'\')"><i class="icon-download-alt"></i>Original (Vertical)</a>&nbsp;&nbsp;'
								+ '<a href="javascript:void(0)" title="Download" onclick="onclick="window.open(\''
								+ jArray[i].billPatVertical+'\')"><i class="icon-download-alt"></i>Duplicate (Vertical)</a> '
								+ '</td>';
						}else{
							 studentBillingDetails += '<td>'
							  + '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''
								+ jArray[i].studentBillId
								+ '\',\''
								+ i
								+ '\',\'Original\','+jArray[i].studentInvoiceId+')"><i class="icon-download-alt"></i>Original (Vertical)</a>&nbsp;&nbsp;'
								+ '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''
								+ jArray[i].studentBillId
								+ '\',\''
								+ i
								+ '\',\'Duplicate\','+jArray[i].studentInvoiceId+')"><i class="icon-download-alt"></i>Duplicate (Vertical)</a> '
								+ '</td>';
						}
						if( jArray[i].billPathorizantal!=""){
							studentBillingDetails += '<td>'
								+ '<a href="javascript:void(0)" title="Download" onclick="window.open(\''
								+ jArray[i].billPathorizantal+'\')"><i class="icon-download-alt"></i>Original (Horizontal)</a>&nbsp;&nbsp;'
								+ '<a href="javascript:void(0)" title="Download" onclick="window.open(\''
								+ jArray[i].billPathorizantal+'\')"><i class="icon-download-alt"></i>Duplicate (Horizontal)</a> '
								+ '</td>' ;
						}else{
							studentBillingDetails += '<td>'
								+ '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceiptHorizontal(\''
								+ jArray[i].studentBillId
								+ '\',\''
								+ i
								+ '\',\'Original\','+jArray[i].studentInvoiceId+')"><i class="icon-download-alt"></i>Original (Horizontal)</a>&nbsp;&nbsp;'
								+ '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceiptHorizontal(\''
								+ jArray[i].studentBillId
								+ '\',\''
								+ i
								+ '\',\'Duplicate\','+jArray[i].studentInvoiceId+')"><i class="icon-download-alt"></i>Duplicate (Horizontal)</a> '
								+ '</td>' ;
						}
						
								
								
					}
				}else {
					studentBillingDetails += '<td colspan="4">'
							+ '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''
							+ jArray[i].studentBillId
							+ '\',\''
							+ i
							+ '\',\'Original\')"><i class="icon-download-alt"></i>Academic Fee Voucher-Original</a></td><td>'
							+ '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''
							+ jArray[i].studentBillId
							+ '\',\''
							+ i
							+ '\',\'Duplicate\')"><i class="icon-download-alt"></i>Academic Fee Voucher-Duplicate</a> '
							+ '</td>' ;
				}
					studentBillingDetails += '</tr>' + '</table></div>';
				// <input type="button" value="Download" class="btn btn-inverse
				// btn-mini" onclick =
				// "printPaymentWiseStudentReceipt(\''+jArray[i].studentBillId+'\',\''+i+'\')">
				// }
				studentBillingDetails += '</div></div>';
			}
			// ////////alert("Student paid amount "+paidAmount);
			studentBillingDetails += '</div>';
		} else {
			studentBillingDetails = '<div id="divReceiptHeader" style = "align:center;width:94%;margin-left: 3%;margin-right: 3%;background-color:#f7f7f7;color:#1d5987;margin-top:4px;font-weight:bold;font-size:10px;height:20px;">No Receipt history found!</div>'
				+ '<div id = "divStudentBillingInformationArea" style = "align:center;width: 94%;margin-left: 3%;margin-right: 3%;"></div>';
		}
		setStudentPaidAmount(paidAmount);

		$('#divStudentBillingInformationArea').html(studentBillingDetails);
		$('.chequeDDDate').datepicker({
			changeMonth : true,
			changeYear : true,
			showButtonPanel : true,
			dateFormat : 'M dd, yy',
			yearRange : "-10:+10",
		});
		// alert('After showing bill');
		// $('#divStudentBillingDetailAccordian').accordion({collapsible:true,
		// active:-1});
	//}
	
}
}
function chequeBounceLetterDownload(studentBillId,chequeDDNo,chequeDDDate,bankName,studentBillChequeDetailId)
{	
		window.location.replace('downloadAndPrintChequeBounceDetailsLetterfinanceside.json?studentBillId='+studentBillId+'&studentBillChequeDetailId='+studentBillChequeDetailId);
}
function TransferBills1(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId){


	$('#commonDialog').modal('show');
	var studentname=$('#tdNameOfStudent').html();
	$('#commonDialogHeader').html('Student Name:'+studentname);
	var boiler = '<table class="table table-bordered table-condensed">'+
	'<tr><td>Please Select Date</td><td colspan="3"><input type="text" id="settleDate"/ ></td></tr>'+
	'<tr><td>Please Select Fee Structure </td><td colspan="3"><select id="feestructure"  onchange="">/td></tr><tbody id="trnsferFeeStructure"></tbody>';
	/*if(IndividualMultipleFlag=='Multiple'){
		boiler+='<tr><td><input type="button" value="Save" onclick="saveAcceptBCTransanctionToAccountsSelected()" class="btn btn-mini btn-inverse"></tr></td>';
	}else{
		boiler+='<tr><td colspan="3"><input type="button" value="Save"  onclick="saveAcceptBCTransanctionToAccounts('+studentId+')" class="btn btn-mini btn-inverse" style="margin-left:420px"></td></tr>';
	}*/
	boiler+='<tr><td colspan="5" style="text-align:center"><input type="button" value="Transfer"  onclick="TransferBillstoAnother(\''+studentBillId+ '\',\''+FinancePolicy+ '\',\''+financePolicyspecificatinId+ '\',\''+BillNo+ '\',\''+studentId+ '\')" class="btn btn-mini btn-inverse"></td></tr>';

	boiler+='</td></tr></table>';
	$('#commonDialogBody').html(boiler);
	$('#settleDate').datepicker({
		dateFormat:"M dd,yy",
		autoclose:true,
		maxDate: 0
	});
	FeeStructureDetails(studentId);
	TransferBills(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId);
}
function TransferBills(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId){
	$('#transferbtn').data('studentBillId',studentBillId);
	$('#cmbFinancePolicy1').val(FinancePolicy);
	$('#cmbFinancePolicy1').data('feeStructureId',feeStructureId);
	$('#cmbFinancialYear1').val(financePolicyspecificatinId);
	var feeStructureId=$('#feestructure').val();
	//configureNewJournalEntry();



	$.ajax({
		url:'getBillDetailsByBillNo.json?BillNo='+BillNo,
		data:{FinancePolicy:FinancePolicy,studentBillId:studentBillId},
		dataType:'json',
		type:'GET',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray1){
           var boiler='<tr><th>Sr No.</th><th>Fee Head Name</th><th>Bill Amount</th><th>Transferable Amount</th><th>Transfer Amount</th></tr>';
			for(var i=0;i<jArray1.length;i++){
				boiler+='<tr class="clsfeeDetails"><input class="accountheadId"  type="hidden" value="'+jArray1[i]["AccountHead"]+'"><td>'+eval(i+1)+'</td><td>'+jArray1[i]["AccountHeadname"]+'</td><td class="gems_currency">'+jArray1[i]["Amount"]+'</td><td class="gems_currency">'+jArray1[i]["transferdAmount"]+'</td><td><input type="text" value="0" style="width:90px;text-align:right;" id="'+jArray1[i]["AccountHead"]+'_amt" onkeyup="checkamount('+jArray1[i]["AccountHead"]+','+jArray1[i]["transferdAmount"]+')"></td></tr>';
			}
			$('#trnsferFeeStructure').html(boiler);
		},error:function(){

		}
	});

}

function checkamount(AccountHead,amt){

	var amts=$('#'+AccountHead+'_amt').val();
	if(eval(amts)>amt){
		jAlert('Transfer amount should  not be greater than  bill amount');
		$('#'+AccountHead+'_amt').val('');
	}

}
function TransferBillstoAnother(studentBillId,studentId){
	var feeStructureId=$('#feestructure').val();
	if(feeStructureId==0 || feeStructureId==undefined || feeStructureId==''){
		jAlert('Please select fee Structure');
		return false;
	}
	var billAmount=0.0;
	var billDate=$('#settleDate').val();
	
	if(billDate==0 || billDate==undefined || billDate==''){
		jAlert('Please select bill date');
		return false;
	}
	var feedata='';
	$('.clsfeeDetails').each(function(){
		var accountheadId=$(this).find('.accountheadId').val()==undefined || $(this).find('.accountheadId').val()==""?"-1":$(this).find('.accountheadId').val();
		var amt=$(this).find('td').eq(4).find('input').val()==undefined || $(this).find('td').eq(4).find('input').val()==""?"0":$(this).find('td').eq(4).find('input').val();
		if(eval(amt>0)){
			feedata+=accountheadId+'~'+amt+'#';
			billAmount+=eval(amt);
		}

	});
	if(feedata.length>2)
		feedata = feedata.substring(0,feedata.length -1);
	
	if(feedata.length>1){
		$.ajax({
			url:'transfertoStudentBillsToOtherFeeStructure.json',
			data:{billDate:billDate,
				studentFeeInvoiceIdTo:feeStructureId,
				feedata:feedata,
				billAmount:billAmount,
				studentBillId:studentBillId
				,studentId:studentId},
			dataType:'json',
			type:'GET',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray1){
            jAlert(jArray1.responseText);
            $('#commonDialog').modal('hide');
            getStudentBillingDetails(function(jArray) {
				showStudentBillingDetails(jArray);
				if (jArray.length > 0) {
					var studentInvoiceId = jArray[0].studentInvoiceId;
					// showStudentRecieptPrintOption(studentInvoiceId,jArray);
				}
			});
			},error:function(){

			}
		});
	}else{
		jAlert('Please Enter Transfer  Amount');
		return false;
	}
	
}


function TransferBill(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId){
	$('#transferbtn').data('studentBillId',studentBillId);
	$('#cmbFinancePolicy1').val(FinancePolicy);
	//$('#cmbFinancePolicy1').data('feeStructureId',feeStructureId);
	$('#cmbFinancialYear1').val(financePolicyspecificatinId);
	
	configureNewJournalEntry();


	setTimeout(function(){
		$.ajax({
			url:'getBillDetailsByBillNo.json?BillNo='+BillNo,
			data:{FinancePolicy:FinancePolicy,studentBillId:studentBillId},
			dataType:'json',
			type:'GET',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray1){

				for(var i=0;i<jArray1.length;i++){
					var amount=jArray1[i]["Amount"];
					var insid=jArray1[i]["AccountHead"];
					$('#tbodyAccounts tr:nth-last-child(2)').find('.txtDrAmount').val(amount);
					$('#tbodyAccounts tr:nth-last-child(2)').find('.txtDrAmount').trigger('keyup');
					$('#tbodyAccounts tr:nth-last-child(2)').find('.cmbAC option').each(function(){
						if($(this).val()== insid){
							$(this).attr('selected',true);
						}
					});
					if(i!=eval(jArray1.length-1)){
						$('#linkAddNewAccount').trigger('click');
					}
					convertComboToSearchable('.cmbAC');

				}
				$('#studentTr').show();
				$('#txtRemark').html('transferred bill-'+BillNo);
				$('#cmbStudentList').val(studentId);
				convertComboToSearchable('#cmbStudentList');

			},error:function(){

			}
		});
	}, 2000);
}




function editPaymentDetail(studentBillId,manualAccountHeadId,bankAccountHeadId,institutecourseId,financePolicy,billNo,receiptdate) {
	
	
	$.ajax({
			url:'lockingPaymentverify.json',
			dataType:'text',
			data:{transactionUniqueRef:billNo,financepolicy:financePolicy,transactionDate:receiptdate},
			type:'GET',
			async:false,
			beforeSend:function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
				
			},
			success:function(msg){
				if(msg=="true"){
									
					$('#divStudentBillingEditArea' + studentBillId).show();
					$('#showPaymentDetailTLB' + studentBillId).hide();
					$('#btnGenerateBill').hide();
					$('#divStudentBillingAdditionArea').html('');
					$('.paymentMode:visible').data('manualAccountHeadId',manualAccountHeadId);
					/*if(manualAccountHeadId!=0 && manualAccountHeadId != undefined){
						setTimeout(function(){
							$('#cbBillPayamentMode').trigger('change');
							$('#otherFeeAccountHeadpmt').val(manualAccountHeadId);
						},200);
					}*/
					$('.hasDatepicker').datepicker({
						changeMonth : true,
						changeYear : true,
						showButtonPanel : true,
						dateFormat : 'M dd, yy',
						yearRange : "-10:+10",
					});
					//@Vilas012
					getAccountHeadbyPaymentMode(institutecourseId,$('.paymentMode:visible').val())
					
					if(manualAccountHeadId!=0 && manualAccountHeadId != undefined){
						setTimeout(function(){
							$('#cbBillPayamentMode').trigger('change');
							$('#otherFeeAccountHeadpmt').val(manualAccountHeadId);
						},200);
					}
					
					/*
					if(bankAccountHeadId!=0 && bankAccountHeadId != undefined){
						$('#paymentMode').trigger('change');
						setTimeout(function(){
							$('#cbBillPayamentMode').trigger('change');
							$('#otherFeeAccountHeadpmt').val(bankAccountHeadId);
						},500);
					}*/		
				}else if(msg=="false"){
					jAlert("something went wrong");
					return false;
				}else{
					jAlert(msg);
					return false;
				}
				
			}
		});
	
}

function hideEditPaymentDetailTLB(studentBillId) {
$('#divStudentBillingEditArea' + studentBillId).hide();
$('#showPaymentDetailTLB' + studentBillId).show();
$('#btnGenerateBill').show();
$('#divStudentBillingAdditionArea').html('');
}

/**
 * @author Vimal
 * @since 2nd June 2012
 * @purpose It shows the form for entering the billing details and calls a
 *          function which allocate resources for this form like bank and branch
 *          name retrieval etc...
 */
function showAddBillForm(jObject, formSrc, callback) {
var intallmentInfoBoiler = '';
// alert('fineAmount: '+fineAmount);
// if(fineAmount == undefined){
var fineAmount = 0.00;
// }
var amount = 0.00;
var installmentNo = '';
var installmentDetailId = '';
var paidAmount = 0.0;
var payableAmount = 0.0;
var isfinanceAdmin='';

var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
var studentId = undefined;
try {
	studentId = getSelectedStudentId2();
} catch (e) {

}
if (studentId == undefined) {
	studentId = gStudentInvoiceRelatedObject.studentId;
}
getStudentRemainingPayableAmount(studentId, feeStructureId, function(jObject) {
	if (jObject.fromStudentRecievable != undefined) {
		payableAmount = jObject.fromStudentRecievable;
		setStudentRemainingPayableAmount(payableAmount);
	}
	if (jObject.paidAmount != undefined) {
		paidAmount = jObject.paidAmount;
		isfinanceAdmin=jObject.isFinanceAdmin;
	}

});
// alert(jObject);
if (jObject != undefined) {
	var installmentAmount = '';
	// alert("jObject.amountType: "+jObject.amountType);
	if (jObject.amountType == 'Percent') {
		installmentAmount = jObject.amount + ' %';
		var percent = jObject.amount;
		percent = parseFloat(percent);
		amount = (payableAmount * percent) / 100.0;
	} else {
		amount = jObject.amount;
		installmentAmount = '<span class="WebRupee">Rs.</span>&nbsp;'
				+ jObject.amount;
	}
	installmentNo = jObject.installmentNo;
	installmentDetailId = jObject.installmentDetailId;

	// Creating installment information boiler
	var lastDate = '';
	if (jObject.payWithinDay != undefined)
		lastDate = jObject.payWithinDay + ' days';
	else {

		lastDate = $.datepicker.formatDate('dd-M-yy', new Date(Date
				.parse(jObject.payWithinDate)));
	}
	intallmentInfoBoiler = '<div class = "alert alert-info">'
			+ '<span style = "margin-left:45%;font-size:14px;font-weight:bold;text-decoration:underline">Installment detail</span>'
			+ '<table class = "table table-condensed table-bordered">'
			+ '<tr><th width = "15%">Installment name</th><td width = "20%">'
			+ jObject.name
			+ '</td><th width = "15%">Amount to paid</th><td width = "20%">'
			+ installmentAmount
			+ '</td><th width = "15%">Last Day/date</th><td width = "20%">'
			+ lastDate + '</td></tr>' + '</table>';
	var remainingInstallmentList = jObject.remainInstallmentList;
	var boiler = '<i class = "icon-hand-right"></i>&nbsp;&nbsp;<span style="font-weight:bold;text-decoration:underline;">Remaining installments</span>';
	for ( var i = 0; i < remainingInstallmentList.length; i++) {
		var installmentAmount = '';
		if (remainingInstallmentList[i].amountType == 'Percent') {
			installmentAmount = remainingInstallmentList[i].amount + ' %';
			// var percent = remainingInstallmentList[i].amount;
			// percent = parseFloat(percent);
			// amount = (payableAmount * percent)/100.0;
		} else {
			// amount = remainingInstallmentList[i].amount;
			installmentAmount = '<span class="WebRupee">Rs.</span>&nbsp;'
					+ remainingInstallmentList[i].amount;
		}

		var lastDate = '';
		if (remainingInstallmentList[i].payWithinDay != undefined)
			lastDate = remainingInstallmentList[i].payWithinDay + ' days';
		else {

			lastDate = $.datepicker.formatDate('dd-M-yy', new Date(Date
					.parse(remainingInstallmentList[i].payWithinDate)));
		}
		boiler += '<p><Strong>' + remainingInstallmentList[i].name
				+ '</strong>:&nbsp;&nbsp;&nbsp;' + installmentAmount
				+ '&nbsp;&nbsp;&nbsp;&nbsp;<Strong>Last date:</strong>:'
				+ lastDate + '</p>';
	}
	intallmentInfoBoiler += boiler;
	intallmentInfoBoiler += '</div>';
} else {
	amount = payableAmount;
}
var customerIdentificationObj = $('#customerHelper').val();
var mailCheck='';
if(customerIdentificationObj =="INDIRA_PUNE") {
	mailCheck += '<tr><th colspan="2"><span style="float:center;color:var(--juno-blue)"><b>Send Welcome Mail to Student/Parent</b> &nbsp;&nbsp;&nbsp;&nbsp;</span></th><td colspan="2" ><input type="checkbox" id="isCheckForReciptMail" value=""></td></tr>';
}else {
	mailCheck +='<tr></tr>';
}

// alert("fineAmount: "+fineAmount);
amount = amount + fineAmount;
// amount = parseFloat(amount.toString()).toFixed(2);
// amount = $.isNumeric(amount) == false?0:amount;
amount = parseFloat(amount.toString()).toFixed(2);
// alert(gtotPayableAmt);
$('#addReceiptModalDiv').html('');

var date = $.datepicker.formatDate('dd M, yy', new Date());
// alert(amount);
// if(paidAmount < (parseFloat(payableAmount.toString()) +
// parseFloat(paidAmount.toString()))){
var billingBoiler = intallmentInfoBoiler
		+ '<form id = "frmStudentBilling">'
		+ '<table class = "table table-bordered" style = "background-color:#f7f7f7">'
		+'<tr>'
		+ '<th colspan = "4">Add Receipt Details<span style="float:right">Date:  <input id="txtPaymentReceiptDate" type="text" readonly="readonly"/></span></th>'
		+
		// '<th colspan = "4">Add Receipt Details<span style="float:right">Date:
		// '+date+'</span></th>'+
		'<input type = "hidden" value = "'
		+ installmentNo
		+ '" id = "installmentNo">'
		+ '<input type = "hidden" value = "'
		+ installmentDetailId
		+ '" id = "installmentDetailId">'
		+ '</tr>'
		+ '<tr>'
		+ '<th style="text-align:left">Name</th>'
		+ '<td ><input type = "text" id = "txtBillStudentName" disabled = "disabled"></td>'
		+ '<th style="text-align:left">Manual Bill No (If Any)</th>'
		+ '<td ><input type = "text" id = "txtBillNo"></td>'
		+ '</tr>'
		+ '<tr><th colspan="4" style="text-align:left">Specify Payment Details</th></tr>'
		+ '<tr><td colspan="4" style="text-align:center">'
		+ '<table class="table table-condensed table-bordered">'
		+ '<thead>'
		+ '<tr>'
		+ '<th>Pay Mode</th>'
		+ '<th class="gems_currency_label">Amt.</th>'
		+ '<th>Bank Name<span class="copm" style="display:none"><b style="color:red;font-size:16px;" >*</b></th>'
		+ '<th>Branch<span class="copm" style="display:none"><b style="color:red;font-size:16px;" >*</b></th>'
		+ '<th>Chq/DD/NEFT/RTGS/Card No.<br><span style="display:none" class="refUTRNoForUPI">/UTR Details</span><span class="copm" style="display:none"><b style="color:red;font-size:16px;" >*</b></th>'
		+ '<th>Chq/DD/NEFT/RTGS Dt.<br><span style="display:none" class="refUTRNoForUPI">/Transaction Date</span><span class="copm" style="display:none"><b style="color:red;font-size:16px;" >*</b></th>'
		+ '<th class="conupload" style="display:none"></th>'
		+ '<th class="otherFeeAccountHead" style="display:none">Account Head</th>'
		+ '<tr>'
		+ '</thead>'
		+ '<tbody class="tblBillPaymentDetail">'
		+ '<tr class="paymentdetail default">'
		+ '<td><select id = "cbBillPayamentMode"  style="width:100px" class="paymentMode" onchange = "renderPaymentDetails(this)" ></select><br><b><span id="configuredBankname"> </span></b></td>'
		+ '<td>'
		+ '<div class="input-prepend">'
		+ '<span class="add-on"><b class="gems_currency_symbol">'+window.juno._currency_symbol+'</b></span>'
		+
		// '<span class="add-on"><span class=""><b>Rs.</b></span></span>'
		// getAmountPayableToStudent();
		'<input style="width:80px;text-align:right" id="txtBillPaymentAmount" class="amount" placeholder="Amount" type="text" value = "'
		+ gStudentRemainingPayableAmount
		+ '" onchange="">'
		+ '<input id="txtBillPaymentFineAmount" type="hidden" value = "'
		+ fineAmount
		+ '">'
		+ '<input type="hidden" id="totalAmt" value="'
		+ gStudentRemainingPayableAmount
		+ '">'
		+ '</div>'
		+ '</td>'
		+
		// <input type="text" placeholder="Bank Name" maxlength="50"
		// data-provide="typeahead" id="bankName" name="bankName">
		'<td><input type="text" id="cbBillBankList12" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead"></td>'
		+ '<td><input type = "text" id = "branch" class="branch bankdetail" style="width:100px" placeholder="Branch"></td>'
		+ '<td><input type = "text" id = "tdChequeNo" class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD No."></td>'
		+ '<td><input type = "text" id = "tdChequeDate" class="chequeDDDate bankdetail"  readonly="true" style="width:100px" placeholder="Cheque/DD Date"></td>'
		+'<td class="conupload" style="display:none"><input type="button" value="Upload document" onclick="uploadconcessionDocument()" class="btn btn-mini btn-inverse"></td>'
		+'<td class="otherFeeAccountHead" style="display:none"><select id = "otherFeeAccountHeadcmb"  style="width:100px" class="otherFeeAccountHead" onchange = "" ></select></td>'

		/* Commented on October 07,2017 (Instructed  by Gauravi Ma'am)*/
		/*+ '<td>'
		+ '<a class="addMoreLink btn btn-mini pointer" onclick="addMorePaymentDetails('
		+ 'divStudentBillingAdditionArea'
		+ ')"><i class="icon-plus"></i></a>'
		+ '</td>'*/
		
		+ '</tr>'
		+ '</tbody>'
		+'<tr class="cardpaymentMode" style="display:none"><td>Charges:<br>'
		+'<input type="radio" name="charges" id="male" value="Yes" onclick="checkConfiguration();" class="contactvalidator">Yes'
		+'<input type="radio" name="charges" value="No" id="female" onclick="checkConfiguration();" class="contactvalidator" >No</td>'
		+'<td class="againstCharges">Charges Against:<br><select id = "otherFeeAccountHeadcmb11"  style="width:100px" class="otherFeeAccountHead11" onchange = "" ></select></td>'
		+'<td class="typeOfCard">Card type:<br><select id = "otherFeeAccountHeadcmb12"  style="width:100px" class="otherFeeAccountHead11" onchange = "" >'
		+'<option value = "Debit" class="Debit">Debit Card</option><option value = "Credit" class="Credit">Credit Card</option></select></td>'

		+ '<td>Percentage:<br><input type = "text" id = "Percentage" class="cardPercentage" onkeyUp="calculatecardpayment();" style="width:100px" placeholder="Percent"></td>'
		+ '<td colspan="2">Total Amount:<br><input type = "text" id = "TotalAmoount"   style="width:100px" placeholder="TotalAmoount"></td></tr>'

		
		+ '</table>'
		+ '</td></tr>'
		+
		/*
		 * '<th style="text-align:left">Amount(in <span class="WebRupee">Rs.</span>)</th>'+ '<td>'+
		 * //'<input type = "text" id = "txtBillPaymentAmount"
		 * disabled="disabled">'+ '<div class="input-prepend">'+ '<span
		 * class="add-on"><span class="WebRupee">Rs.</span></span>'+ '<input
		 * class="span2" id="txtBillPaymentAmount" type="text" value =
		 * "'+gStudentRemainingPayableAmount+'" dir = "rtl"
		 * onchange="getAmountPayableToStudent();">'+ '<input
		 * id="txtBillPaymentFineAmount" type="hidden" value =
		 * "'+fineAmount+'">'+ '</div>'+ '</td>'+ '<th style="text-align:left">Payment
		 * Mode</th>'+ '<td><select id = "cbBillPayamentMode" onchange =
		 * "renderPaymentDetails()" class = ""></select></td>'+ '</tr>'+ '<tr>'+ '<td colspan = "4" id = "tdPaymentDetailsEntrySection"></td>'+ '</tr>'+ '<tr id = "bankinforow" style="display:none;">'+ '<th style="text-align:left">Bank
		 * Name</th>'+ '<td ><select id = "cbBillBankList" class = ""></select>'+
		 * '&nbsp;&nbsp;<input type="button" class="btn btn-inverse btn-mini"
		 * value="Add New" style="margin-top:-8px"
		 * onclick="$(\'#bankDetailsModal\').modal(\'show\');"></td>'+ '<th style="text-align:left">Branch
		 * Name</th>'+ '<td ><input id = "cbBillBankBranch" type = "text"
		 * class = "" /></td>'+ '</tr>'+
		 */

		'<tr style="display:none">'
		+ '<th style="text-align:left">Outstanding Fee Amount (in  <span class="WebRupee">Rs.</span>)</th>'
		+ '<td ><input class="" id="txtOutStandingFeeAmount" type="text"></td>'
		+ '<th style="text-align:left">Amount payable to student (in  <span class="WebRupee">Rs.</span>)</th>'
		+ '<td ><input class="" id="txtAmountPayableToStudent" type="text" dir = "rtl" disabled="disabled" ></td>'
		+ '</tr>'
		+ '<tr>'
		+ '<th style="text-align:left;display:none">Admission date of student</th>'
		+ '<td style="display:none"><input class="" id="txtAdmissionDateStudent" type="text"></td>'
		+ '<th style="text-align:left">Next payment date</th>'
		+ '<td id = "nextPaymentDateRow" ><input id = "txtNextPaymentDate" type = "text"/></td>'
		+ '<th style="text-align:left">Desc/Remark</th>'
		+ '<td id = "" ><input id = "txtReceiptDetail" type = "text"/></td>'
		+ '</tr>'
		+($('#txtStudentSearchBarInvoice').data('currCode')!='INR' && $('#txtStudentSearchBarInvoice').data('currCode')!=undefined
		?'<tr><th>Current Conversion Amount</th><td><input type="text" id="txtConversionAmt" style="text-align:right"></td><td colspan="2"></td></tr>':'')
		+mailCheck
		+ '<tr>' + '<td colspan = "4" style="text-align:center">'
		+ '<div class = "preview"></div>';



if (formSrc == 'INVOICE') { // || formSrc == 'ADMISSION_INVOICE'
	billingBoiler += '<input type = "button" class = "btn btn-inverse btn-mini  " id = "btnSaveBilling" onclick = "saveStudentBillingInformation()" value = "Save">&nbsp;&nbsp;';
	billingBoiler += '<input type = "button" class = "btn btn-inverse btn-mini" id = "btnCancelBilling" onclick = "hideBillingInformationForm()" value =  "Cancel" >';
}
billingBoiler += '</td>' + '</tr>' + '<tr>' + '<td colspan = "4">'
		+ '<div class="responsebar">' + '</div>' + '</div>' + '</td>' + '</tr>'
		+ '</table>' + '</form>';
// jAlert(billingBoiler);
var role = $('#hdnUserRole').val();

//if(isfinanceAdmin=='financeadmin')
$('#divStudentBillingAdditionArea').html(billingBoiler);
applyGemsPlugins();


var x = 1;
var CurrentDate = new Date();
CurrentDate.setMonth(CurrentDate.getMonth() + x);
// $('#txtNextPaymentDate').val($.datepicker.formatDate('M dd,yy',CurrentDate));

$('#txtPaymentReceiptDate').datepicker({
	changeMonth : true,
	changeYear : true,
	showButtonPanel : true,
	dateFormat : 'M dd, yy',
	yearRange : "-10:+10",
	maxDate : new Date(),
});

$('#txtPaymentReceiptDate').val($.datepicker.formatDate('M dd,yy', new Date()));
/*
 * $(function() { $('#cbBillBankList').change(function(){
 * if($('#cbBillBankList').val()=='addNew')
 * $('#bankDetailsModal').modal('show'); });
 * 
 * });
 */

initializeMultiplePaymentForm();

/**
 * Apply datepicker on admission date of the student text book
 */
$('#txtAdmissionDateStudent').datepicker({
	changeMonth : true,
	changeYear : true,
	showButtonPanel : true,
	dateFormat : 'M dd, yy',
	yearRange : "-10:+10",
});

$('#txtNextPaymentDate').datepicker({
	changeMonth : true,
	changeYear : true,
	showButtonPanel : true,
	dateFormat : 'M dd, yy',
	yearRange : "-10:+10",
});

var studentName = undefined;
try {
	studentName = getStudentName();
} catch (e) {
}
if (studentName == undefined) {
	studentName = gStudentInvoiceRelatedObject.firstName + ' '
			+ gStudentInvoiceRelatedObject.lastName;
}
$('#txtBillStudentName').val(studentName);

var nextinstallment="Next Installment";
var courseName = gStudentInvoiceRelatedObject.courseName;
var academicBatch = gStudentInvoiceRelatedObject.academicBatch !=undefined?gStudentInvoiceRelatedObject.academicBatch:"-";
var details = studentName + " " + courseName + " (" + academicBatch + ")"+nextinstallment;
$('#txtReceiptDetail').val(details);

/*
 * $('#frmStudentBilling').hotKey({ key: 'b', modifier: 'ctrl' }, function (e) {
 * e.preventDefault(); alert('Hi im called'); });
 */

$(document).unbind();
$.key('ctrl+m', function(e) {
	e.preventDefault();
	addMorePaymentDetails('divStudentBillingAdditionArea');
});

$.key('ctrl+d', function(e) {
	e.preventDefault();
	removePaymentOption();
});

$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail').delegate(
		'input.amount', 'change', function(e) {
			getAmountPayableToStudent();
		});

/*
 * var totalAmountPaid=0;
 * totalAmountPaid+=parseFloat(gStudentRemainingPayableAmount);
 * alert("totalAmountPaid--"+totalAmountPaid);
 * 
 * var x = 1; var CurrentDate = new Date();
 * CurrentDate.setMonth(CurrentDate.getMonth() + x); if(totalAmountPaid <
 * gtotPayableAmt){ $('#txtNextPaymentDate').val($.datepicker.formatDate('M
 * dd,yy',CurrentDate)); }
 */

try {
	callback();
} catch (e) {
}

// } else {
// jAlert('Payment is clear for this student!');
// }
$('#cbBillPayamentMode').trigger('change');
}
function calculatecardpayment(){
	var billAmount=$('#txtBillPaymentAmount').val();
	if(billAmount=='' || billAmount==undefined  || billAmount==0 || billAmount=='0'){
		jAlert('Please enter bill amount to calculate charges amount');
		return false
		}
	var per=$('.cardPercentage:visible').val();
	var totabillAmountWithCharges=(eval(billAmount)*eval(per)/100);
	$('#TotalAmoount').val(totabillAmountWithCharges);
}
function calculateCardpaymentEdit(studentBillId){
	var billAmount=$('#divStudentBillingEditArea' + studentBillId).find('.tblBillPaymentDetail').find('tr').find('.amount').val();
	if(billAmount=='' || billAmount==undefined  || billAmount==0 || billAmount=='0'){
		jAlert('Please enter bill amount to calculate charges amount');
		return false
		}
	var per=$('.cardPercentage:visible').val();
	var totabillAmountWithCharges=(eval(billAmount)*eval(per)/100);
	$('#TotalAmoount'+studentBillId).val(totabillAmountWithCharges);
}


function checkConfiguration(){
	var value = $('input[name = "charges"]:checked').val();
    if(value!='Yes'){
    	$('#Percentage').attr('readonly',true);
    	$('#TotalAmoount').attr('readonly',true);

    	$('#otherFeeAccountHeadcmb11').attr('disabled',true);
    	$('#otherFeeAccountHeadcmb12').attr('disabled',true);

    }else{

    	$('#Percentage').attr('readonly',false);
    	$('#TotalAmoount').attr('readonly',false);

    	$('#otherFeeAccountHeadcmb11').attr('disabled',false);
    	$('#otherFeeAccountHeadcmb12').attr('disabled',false);

    
    }
}

function checkConfigurationEDIT(studentBillId){
	var value = $('input[name = "charges"]:checked').val();
    if(value!='Yes'){
    	$('#Percentage'+studentBillId).attr('readonly',true);
    	$('#TotalAmoount'+studentBillId).attr('readonly',true);

    	$('#otherFeeAccountHeadcmb'+studentBillId).attr('disabled',true);
    	$('#otherFeeAccountHeadcmbCard'+studentBillId).attr('disabled',true);

    }else{

    	$('#Percentage'+studentBillId).attr('readonly',false);
    	$('#TotalAmoount'+studentBillId).attr('readonly',false);

    	$('#otherFeeAccountHeadcmb'+studentBillId).attr('disabled',false);
    	$('#otherFeeAccountHeadcmbCard'+studentBillId).attr('disabled',false);

    
    }
}

function uploadconcessionDocument(){

	$('#commonDialog').modal('show');

	var boiler = '<table class="table table-bordered"><tr><td><b>Attached Docs:</b></td>'+

	'<td colspan="3" class = "UploadedCompanyAssignments"><div id="companyAssignmentsList"></div></td></tr>'+
	'<tr><td><b>Upload</b></td><td colspan="3" class="divEmployeeLeaveUploadedFilesUploadBar">'+
	'<div class="preview"></div>';

	boiler+='<div class="btn btn-info" style = "width:165px;height:20px">Upload'+
	'<input style = "margin-top:-40px;margin-left:-10px;opacity:0;" type="file" name="fileData" id="IncomecertificatesBtn" onclick="initFileUploadScholarship();"></div><br><br>';
	boiler+='<div class = "alert alert-info" style="color:black;font-size:13px;">';
	boiler+='<i class = "icon-hand-right"></i>&nbsp;&nbsp;Click on Upload Document Button to Upload Your Document <br />'+
	'<i class = "icon-hand-right"></i>&nbsp;&nbsp;.pdf files only<br />'+
	'</div>'+
	'</td></tr></table>';
	$('#commonDialogBody').html(boiler);
	initFileUploadScholarship();
}
function showincomeDetailAttachment(jArray,tableId,isCreator){
	var roleType = $('#roleType').val();
	var attachementBoiler = "<table class = 'table'>";
	for(var i = 0 ; i < jArray.length; i++){
		var attachmentFileName = jArray[i]["name"].toString(); 
		var documentId = jArray[i]["documentId"];
		var eDocId =  jArray[i]["eDocId"]!=undefined?jArray[i]["eDocId"]:jArray[i]["documentId"];
		var isTemporary = jArray[i]["isTemporary"];

		var trId = 'trAttachmentFile-'+documentId;

		var fileType = jArray[i]["studentId"];
		iconPath = gFileTypeIconMapping[fileType];
		if(!isTemporary){
			attachementBoiler += 
				'<tr id = "'+trId+'"><td><img src="'+iconPath+'" />&nbsp;&nbsp;&nbsp;&nbsp;'+(juno.label['a.download.json'].setIndexedArgs(eDocId, "UPLOADED", encodeURIComponent(attachmentFileName), attachmentFileName))+'</td>';
			if(isCreator){
				if(roleType=="financeadmin"){
					attachementBoiler += '<td style="display:none;"><img style = "cursor:pointer" title = "remove" src = "img/remove-icon.png" onclick = "removeGuestLectureDetailAttachmentAjax(\''+trId+'\',\''+eDocId+'\',\'saved\')" /></td>';
				}else{
					attachementBoiler += '<td><img style = "cursor:pointer" title = "remove" src = "img/remove-icon.png" onclick = "removeGuestLectureDetailAttachmentAjax(\''+trId+'\',\''+eDocId+'\',\'saved\')" /></td>';
				}
			}
			attachementBoiler +=  '</tr>';
		} else {
			attachementBoiler += 
				'<tr id = "'+trId+'"><td><img src="'+iconPath+'" />&nbsp;&nbsp;&nbsp;&nbsp;<a href = "javascript:void(0)">'+attachmentFileName+'</a></td><td><img style = "cursor:pointer" title = "remove" src = "img/remove-icon.png" onclick = "removeGuestLectureDetailAttachmentAjax(\''+trId+'\',\''+eDocId+'\',\'temporary\')" />&nbsp;&nbsp;&nbsp;&nbsp<img src = "img/unsaved.png" title = "Unsaved"/></td></tr>';
		}
	}
	attachementBoiler += "</table>";
		$('#companyAssignmentsList').html(attachementBoiler);
	
}

function removeGuestLectureDetailAttachmentAjax(trId,documentId,docuementType){
	
	if(docuementType == 'saved'){
		removeUploadedDocumentById(documentId,function(jObject){
			$('#'+trId).remove();
			isDocument=false;
			uploadGuestLectureDetail();
		});
	} else {
		removeTemporaryGuestLectureDetailAttachmentAjax(documentId,function(){
			$('#'+trId).remove();
		});
	}
}

function removeTemporaryGuestLectureDetailAttachmentAjax(documentId,callback){
	try{
		$.ajax({
			url:'removeTemporaryStudentConcessionDocumentAttachment.json',
			dataType:'json',
			type:'POST',
			data:{d__documentId:documentId},
			success:function(){
				try{
					callback();
				}catch(e){

				}
			}	
		});

	}catch(e){
		alert(e);
	}
}
function initFileUploadScholarship(){
	var elementId = 'IncomecertificatesBtn';
	var index = 1;
		new AjaxUpload(elementId,{
			action : 'setUploadConcessiondocumentInSession.json',
			data : {},
			name : 'fileData',
			size : AllowedFileSize.PROFILE_UPLOAD_DOCUMENTS,
			onSubmit : function(file, extension) {
				if(extension.toString().toLowerCase() == 'pdf' ){
					startCommonAjaxSpinner();
					this.setData({
						'fileSize':AllowedFileSize.PROFILE_UPLOAD_DOCUMENTS,
						'index':index
					});
				
				} else {
					jAlert('Use only "pdf" format file!');
					return false;
				}
			},
			onComplete : function(file, response) {
				stopCommonAjaxSpinner();
				var jArray = eval('(' + response + ')');
				if(jArray["responseFlag"]==0){
					jAlert(jArray["responseText"]);
				}
				else{			
					showincomeDetailAttachment(jArray,'IncomeCertificateFile',true);
				}
		}
		});

}

// Done by Gauravi to add new payment types
function initializeMultiplePaymentForm() {
	$('.bankdetail').attr('disabled', 'disabled');
	$('.amount').numeric();
	setTimeout(function() {
		getBankListAjax('cbBillBankList12');
	}, 500);
	var customerIdentificationObj = $('#customerHelper').val();
	boiler = '<option value = "0">Select</option>';
	if(customerIdentificationObj != undefined && customerIdentificationObj =="CHANAKYA"){
		boiler +='<option value = "Cash(W)" class="RTGS">Cash(W)</option>';
		boiler +='<option value = "Cash(M)" class="RTGS">Cash(M)</option>';
		boiler +='<option value = "Cash(S)" class="RTGS">Cash(S)</option>';
		boiler +='<option value = "Cash(D)" class="RTGS">Cash(D)</option>';
		boiler += '<option value = "DemandDraft">Demand Draft</option>'
			   + '<option value = "Cheque">Cheque</option>'
			   + '<option value = "NEFT1" class="NEFT">NEFT1</option>'
			   + '<option value = "NEFT2" class="NEFT">NEFT2</option>'
			   + '<option value = "NEFT3" class="NEFT">NEFT3</option>'
			   + '<option value = "NEFT4" class="NEFT">NEFT4</option>'
			   + '<option value = "NEFT5" class="NEFT">NEFT5</option>'
			   + '<option value = "NEFT6" class="NEFT">NEFT6</option>'
			   + '<option value = "NEFT7" class="NEFT">NEFT7</option>'
			   + '<option value = "NEFT8" class="NEFT">NEFT8</option>'
			   + '<option value = "RTGS1" class="RTGS">RTGS1</option>'
			   + '<option value = "RTGS2" class="RTGS">RTGS2</option>'
			   + '<option value = "RTGS3" class="RTGS">RTGS3</option>'
			   + '<option value = "RTGS4" class="RTGS">RTGS4</option>'
			   + '<option value = "RTGS5" class="RTGS">RTGS5</option>'
			   + '<option value = "RTGS6" class="RTGS">RTGS6</option>'
			   + '<option value = "RTGS7" class="RTGS">RTGS7</option>'
			   + '<option value = "RTGS8" class="RTGS">RTGS8</option>';
		
		boiler +='<option value = "BankChallan(W)" class="RTGS">Bank Challan(W)</option>';
		boiler +='<option value = "BankChallan(M)" class="RTGS">Bank Challan(M)</option>';
		boiler +='<option value = "BankChallan(S)" class="RTGS">Bank Challan(S)</option>';
		boiler +='<option value = "Concession(CTS)" class="">Concession(CTS)</option>';
	
		boiler +='<option value = "Concession">Concession</option>'
			+ '<option value = "legacyDeposit">Student Legacy Deposit</option>';
	}else{
		boiler+='<option value = "Cash" selected="selected">Cash</option>';
		boiler+= '<option value = "DemandDraft">Demand Draft</option>'
			+ '<option value = "Cheque">Cheque</option>'
			+ '<option value = "CardPayment">Card Payment</option>'
			+ '<option value = "NEFT1" class="NEFT">NEFT1</option>'
			+ '<option value = "NEFT2" class="NEFT">NEFT2</option>'
			+ '<option value = "NEFT3" class="NEFT">NEFT3</option>'
			+ '<option value = "NEFT4" class="NEFT">NEFT4</option>'
			+ '<option value = "NEFT5" class="NEFT">NEFT5</option>'
			+ '<option value = "NEFT6" class="NEFT">NEFT6</option>'
			+ '<option value = "NEFT7" class="NEFT">NEFT7</option>'
			+ '<option value = "NEFT8" class="NEFT">NEFT8</option>'
			+ '<option value = "RTGS1" class="RTGS">RTGS1</option>'
			+ '<option value = "RTGS2" class="RTGS">RTGS2</option>'
			+ '<option value = "RTGS3" class="RTGS">RTGS3</option>'
			+ '<option value = "RTGS4" class="RTGS">RTGS4</option>'
			+ '<option value = "RTGS5" class="RTGS">RTGS5</option>'
			+ '<option value = "RTGS6" class="RTGS">RTGS6</option>'
			+ '<option value = "RTGS7" class="RTGS">RTGS7</option>';
		if(customerIdentificationObj != undefined && customerIdentificationObj =="DYPATIL")	
			boiler+= '<option value = "TRANSFER">TRANSFER</option>';
		else
			boiler+= '<option value = "RTGS8" class="RTGS">RTGS8</option>';
		boiler +='<option value = "BankChallan" class="RTGS">Bank Challan</option>';
		boiler +='<option value = "Other Course Fee" class="RTGS">Other Course Fee</option>';
		if(customerIdentificationObj != undefined && customerIdentificationObj =="ICT_MUMBAI")
			boiler +='<option value = "Concession">Scholarship to student</option>';
		else
			boiler +='<option value = "Concession">Concession</option>';
		boiler += '<option value = "legacyDeposit">Legacy Liability</option>';
		if(customerIdentificationObj != undefined && customerIdentificationObj =="BLM_MUNJAL")
			boiler += '<option value = "hostelbuddy">Hostel Buddy</option>';
		//if( $("#productionServer").val()=="false" || juno.isCurrentCustomer('OXFORD_EDUCATIONAL_INSTITUTIONS'))
			boiler += '<option value="UPI">UPI</option>';
	}
	$('.paymentMode').html(boiler);
	$('.chequeDDDate').datepicker({
		changeMonth : true,
		changeYear : true,
		showButtonPanel : true,
		dateFormat : 'M dd, yy',
		yearRange : "-10:+10",
	});
}

function addMorePaymentDetails(divId) {

// alert("addMorePaymentDetails");
var boiler = '<tr class="paymentdetail">'
		+ '<td><select id = ""  style="width:100px" class="paymentMode" onchange = "renderPaymentDetails(this)" >'
		+ '<option value = "0">Select</option>'
		+ '<option value = "Cash">Cash</option>'
		+ '<option value = "DemandDraft">Demand Draft</option>'
		+ '<option value = "Cheque">Challan / Cheque</option>'
		+ '<option value = "NEFT">NEFT</option>'
		+ '<option value = "RTGS">RTGS</option>'
		+ '<option value = "Bank Challan">Bank Challan</option>'
		+ '</select></td>'
		+ '<td>'
		+ '<div class="input-prepend">'
		+ '<span class="add-on"><span class="WebRupee">Rs.</span></span>'
		+
		// getAmountPayableToStudent();
		'<input style="width:80px;text-align:right" class="amount" placeholder="Amount" type="text"  onchange="">'
		+ '<input class="amount" placeholder="Amount" type="hidden" value="'
		+ gStudentRemainingAmt
		+ '">'
		+ '</div>'
		+ '</td>'
		+ '<td><input type="text" id="" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead"></td>'
		+ '<td><input type = "text"  class="branch bankdetail" style="width:100px" placeholder="Branch"></td>'
		+ '<td><input type = "text"  class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD No/UTR."></td>'
		+ '<td><input type = "text"  class="chequeDDDate bankdetail" readonly="true" style="width:100px" placeholder="Cheque/DD/UTR Date"></td>'
		+ '<td><i class="icon-remove pointer" onclick="removePaymentOption(this)"></i></td>'
		+ '</tr>';

var id = $(divId).attr('id');
$(divId).find('.tblBillPaymentDetail').append(boiler);

$(".chequeDDNo").keydown(
		function(event) {
			// Allow: backspace, delete, tab and escape
			if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9
					|| event.keyCode == 27 || event.keyCode == 109
					|| event.keyCode == 189 || event.keyCode == 110
					|| event.keyCode == 190 || event.keyCode == 183 ||
					// Allow: Ctrl+A
					(event.keyCode == 65 && event.ctrlKey === true) ||
					// Allow: home, end, left, right
					(event.keyCode >= 35 && event.keyCode <= 39)) {
				// let it happen, don't do anything
				return;
			} else {
				// Ensure that it is a number and stop the keypress
				if ((event.keyCode < 48 || event.keyCode > 57)
						&& (event.keyCode < 96 || event.keyCode > 105)) {
					event.preventDefault();
				}
			}
		});

allocateResourseToBillingForm(id);
}
var gStudentRemainingAmt = 0;
function removePaymentOption(currentObj) {
if (currentObj != undefined) {
	var trObj = $(currentObj).parents('tr:first');
	trObj.remove();
} else {
	if (!$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail')
			.find('tr:last').hasClass('default')) {
		$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail').find(
				'tr:last').remove();
	}
}

var selTot = 0.00;
$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail').find('tr')
		.each(function() {
			var amt = parseFloat($(this).find('.amount').val());
			if (!isNaN(amt) && !$(this).is(':last-child')) {
				selTot += amt;
			}
		});
$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail tr:last').find(
		'.amount').val(
		(parseFloat(gStudentRemainingPayableAmount) - selTot).toFixed(2));
gStudentRemainingAmt = parseFloat(gStudentRemainingPayableAmount)
		- parseFloat(selTot).toFixed(2);
}
/**
 * 
 */
function hideBillingInformationForm() {
$('#divStudentBillingAdditionArea').html('');
}

function getAmountPayableToStudent() {
/*
 * var amount = 0.0; $('.tblBillPaymentDetail').find('tr').each(function(){ var
 * temp=$(this).find('.amount').val(); if(!isNaN(temp)){ amount += temp; } });
 * 
 * if(!isNaN(amount)){ $.ajax({ url:'getAmountPayableToStudent.json',
 * dataType:'json',
 * data:'studentFeeInvoiceId='+getStudentInvoiceId()+'&amount='+amount,
 * success:function(jObject){
 * $('#txtAmountPayableToStudent').val(jObject.feePayableToStudent); },
 * error:function(){ jAlert('Server error!! Please refresh the spage and try
 * again!!'); } }); }
 */
}
/**
 * @author Vimal
 * @since 3rd June 2012
 * @purpose to render the payment details like bank and branch name in the
 *          student bill entry form It renders if the payment mode is Demand
 *          Draft or Cheque
 */
var denominationIdArray = new Array();
var denominationQtyArray = new Array();
function renderPaymentDetails(currentObj) {

var flag = true;
var paymentMode =$('.paymentMode:visible').val();// $(currentObj).parents('tr:first').find('.paymentMode:visible').val();
// alert(paymentMode);
var currTrObj = $(currentObj).parents('tr:first');

if (flag) {
	$('.refUTRNoForUPI').hide();
	if (paymentMode == 'DemandDraft' || paymentMode == 'Cheque'
			|| paymentMode == 'NEFT' || paymentMode == 'NEFT1'
			|| paymentMode == 'RTGS' || paymentMode == 'NEFT2'
			|| paymentMode == 'NEFT3' || paymentMode == 'NEFT4'
			|| paymentMode == 'RTGS1' || paymentMode == 'RTGS2'
			|| paymentMode == 'RTGS3' || paymentMode == 'RTGS4'
				|| paymentMode == 'NEFT5' || paymentMode == 'NEFT6'
					|| paymentMode == 'RTGS5' || paymentMode == 'NEFT7'
					|| paymentMode == 'NEFT8' 
					|| paymentMode == 'RTGS6' || paymentMode == 'RTGS7'
					|| paymentMode == 'RTGS8' || paymentMode == 'TRANSFER' || paymentMode=='BankChallan' || paymentMode=='BankChallan(M)' 
						|| paymentMode=='BankChallan(S)' || paymentMode=='BankChallan(W)'){
		$(currTrObj).find('.bankdetail').removeAttr('disabled');
		$('.copm').show();
		$(currTrObj).find('.chequeDDDate').attr('readonly', true);
		$('.cardpaymentMode').hide();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');

		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	} else if (paymentMode == 'Cash' || paymentMode == 'Cash(W)' || paymentMode == 'Cash(M)' || paymentMode == 'Cash(S)'  || paymentMode == 'Cash(D)') {
		$('#configuredBankname').html('');
		$('.copm').hide();
		$('.cardpaymentMode').hide();
		$(currTrObj).find('.bankdetail').attr('disabled', 'disabled');
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	}else if(paymentMode == 'CardPayment') {
		$('.cardpaymentMode').show();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		$(currTrObj).find('.bankdetail').removeAttr('disabled');
		$(currTrObj).find('.chequeDDDate').attr('readonly',true);
		getAccountHeadDetails(institutecourseId,paymentMode);
		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	}else if(paymentMode == 'UPI') {
		$('.cardpaymentMode').hide();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		$(currTrObj).find('.bankdetail').attr('disabled', 'disabled');
		$(currTrObj).find('.chequeDDNo').removeAttr('disabled');
		$(currTrObj).find('.chequeDDDate').removeAttr('disabled');
		$(currTrObj).find('.chequeDDDate').attr('readonly',true);
		$('.refUTRNoForUPI').show();
		getAccountHeadDetails(institutecourseId,paymentMode);
		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	}else {
		$('.copm').hide();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		$(currTrObj).find('.bankdetail').attr('disabled', 'disabled');
		$('.cardpaymentMode').hide();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');

		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	}
} else {
	jAlert('Please select only one Cash Mode');
	$(currTrObj).find('.paymentMode').val('0');
}

if(paymentMode == 'Concession'){
	$('.conupload').show();
	var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
	getAccountHeadDetails(institutecourseId,paymentMode);
}
else{
	$('.conupload').hide();
}
if(paymentMode == 'Other Course Fee'){
	$('.otherFeeAccountHead').show();
	var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
	getAccountHeadDetails(institutecourseId,paymentMode);
}
else{
	$('.otherFeeAccountHead').hide();
}

//var mode = $(currentObj).val().substring(0, $(currentObj).val().length - 1);
var mode = $(currentObj).parents('tr:first').find('.paymentMode').val();
if (mode == 'NEFT' || mode == 'NEFT1' || paymentMode == 'NEFT2'
		|| paymentMode == 'NEFT3' || paymentMode == 'NEFT4' || mode == 'RTGS'
		|| paymentMode == 'RTGS1' || paymentMode == 'RTGS2'
		|| paymentMode == 'RTGS3' || paymentMode == 'RTGS4'
			|| mode == 'NEFT5' || paymentMode == 'NEFT6'
				|| paymentMode == 'NEFT7' || paymentMode == 'NEFT8'
				|| paymentMode == 'RTGS5' || paymentMode == 'RTGS6'
				|| paymentMode == 'RTGS7' || paymentMode == 'RTGS8' || paymentMode == 'TRANSFER'	
		|| mode == 'BankChallan' || paymentMode=='BankChallan(M)' 
			|| paymentMode=='BankChallan(S)' || paymentMode=='BankChallan(W)') {
	$(currentObj).closest('tr').find('.addMoreLink').hide();
	
	$(currTrObj).find('.bankdetail').removeAttr('disabled');
} else
	$(currentObj).closest('tr').find('.addMoreLink').show();
}

/**
 * @author Vimal
 * @since 3rd June 2012
 * @purpose to allocates resources for the billing form after painting of the
 *          form.
 */

function getAccountHeadbyPaymentMode(institutecourseId,paymentMode){
	
	if(paymentMode==undefined || paymentMode=='' || paymentMode=='0')
		paymentMode=$('.paymentMode:visible').val();
	
		$.ajax({
			url:'getaccountHeadOfPaymentMode.json',
			dataType:'json',
			data:{
				paymentMode:paymentMode,
				instituteCourseId:institutecourseId
			},
			async:false,
			success:function(jArray){
				$('#configuredBankname').html('Account Head:-<br>'+jArray.AccountName).show();
				$('#configuredBankname1').html('Account Head:-<br>'+jArray.AccountName).show();
				var billIIId=$('.paymentMode:visible').attr('editAttrBill');
				
				if(jArray.AccountName=='Not Configured' && billIIId==undefined){
					$('#configuredBankname').html('Account Head:<br><select id = "otherFeeAccountHeadpmt1"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
					$('#configuredBankname1').html('Account Head:<br><select id = "otherFeeAccountHeadpmt"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
					getAccountHeadDetails(institutecourseId,paymentMode);
				}else{
					$('#configuredBankname'+billIIId).html('Account Head:<br><select id = "otherFeeAccountHeadpmt1"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
					$('#configuredBankname1'+billIIId).html('Account Head:<br><select id = "otherFeeAccountHeadpmt"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
					getAccountHeadDetails(institutecourseId,paymentMode);
				}
				
			}
		});
		var manualAccountHeadId=$('.paymentMode:visible').data('manualAccountHeadId');
		if(manualAccountHeadId!=undefined){
			console.log("manualAccountHeadId "+manualAccountHeadId);
			$('#otherFeeAccountHeadpmt').val(manualAccountHeadId)
			if($('#customerHelper').val()=='BLM_MUNJAL'){
			$('.paymentMode:visible').attr('disabled',true);
			$('.AccountHeadcls:visible').attr('disabled',true);
			}
			//$('#otherFeeAccountHeadpmt').attr('disabled',true);
		}
	
}
function allocateResourseToBillingForm(id) {
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.amount').numeric();

$('#' + id).find('.tblBillPaymentDetail tr:last').find('.bankdetail').attr(
		'disabled', 'disabled');

// $('.tblBillPaymentDetail tr:last').find('#cbBillBankList').html(boiler);

// var bankNameList = $('#cbBillBankList12').html();
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.bankName')
		.typeaheadNew({
			source : substringMatcher(gBankArray),
			property : "name"
		});
var cashFlag = true;
$('#' + id).find('.tblBillPaymentDetail').find('tr').each(function() {
	var paymentMode = $(this).find('.paymentMode:visible').val();
	if (paymentMode == 'Cash') {
		cashFlag = false;
	}
});

boiler = '<option value = "0">Select</option>';
if (cashFlag)
	boiler += '<option value = "Cash">Cash</option>';
boiler += '<option value = "DemandDraft">Demand Draft</option>'
		+ '<option value = "Cheque">Challan / Cheque</option>'
		+ '<option value = "NEFT">NEFT</option>'
		+ '<option value = "RTGS">RTGS</option>';
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.paymentMode:visible').html(
		boiler);

$('#' + id).find('.tblBillPaymentDetail tr:last').find('.chequeDDDate')
		.datepicker({
			changeMonth : true,
			changeYear : true,
			showButtonPanel : true,
			dateFormat : 'M dd, yy',
			yearRange : "-10:+10",
		});
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.bankdetail').attr(
		'disabled', 'disabled');
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.paymentMode:visible').val(
		'DemandDraft');
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.paymentMode:visible').trigger(
		'change');
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.paymentMode:visible').focus();
var selTot = 0.00;
$('#' + id).find('.tblBillPaymentDetail').find('tr').each(function() {
	var amt = parseFloat($(this).find('.amount').val());
	if (!isNaN(amt) && !$(this).is(':last-child')) {
		selTot += amt;
	}
});

// alert("selTot" + selTot);
// alert("gStudentRemainingPayableAmount " + gStudentRemainingPayableAmount);
// parseFloat(gStudentRemainingPayableAmount) - selTot;
$('#' + id).find('.tblBillPaymentDetail tr:last').find('.amount').val(
		(parseFloat(gStudentRemainingPayableAmount) - selTot).toFixed(2));

$('#' + id).find('.tblBillPaymentDetail tr:last').find('.amount').numeric();
$('#' + id).find('.tblBillPaymentDetail').find('.amount').unbind();
$('#' + id).find('.tblBillPaymentDetail').delegate('input.amount', 'change',
		function(e) {
			// getAmountPayableToStudent();
		});
}

/**
 * @since 3rd June 2012
 * @returns {Boolean}
 */
function validateStudentBillingForm(divId) {
var flag = true;
$('#' + divId).find('.tblBillPaymentDetail').find('tr').each(function() {
	var temp = $(this).find('.paymentMode:visible').val();
	if (temp == 'Cheque' || temp == 'DemandDraft' || temp == 'BankChallan' ) {
		var bankName = $(this).find('.bankName').val();
		if (bankName == '0' || bankName == '') {
			jAlert("Please select the bank information!");
			flag = false;
			return;
		}
		var chequeDDNo = $(this).find('.chequeDDNo').val();
		if (chequeDDNo == '') {
			jAlert("Please enter the Cheque / DD No.!");
			flag = false;
			return;
		}
		var chequeDDDate = $(this).find('.chequeDDDate').val();
		if (chequeDDDate == '') {
			jAlert("Please enter the Cheque / DD Date !");
			flag = false;
			return;
		}
		var amount = $(this).find('.amount').val();
	} else {
		var amount = $(this).find('.amount').val();
	}
	var accountHeadId=$(this).find('#otherFeeAccountHeadpmt').val();
	var billIIId=$('.paymentMode:visible').attr('editAttrBill');
	if($('#customerHelper').val()!='BLM_MUNJAL'){
		if(accountHeadId==0) {
			jAlert("Please Select Account Head !!!");
			flag = false;
			return;
		}
	}else{
		if(accountHeadId==0 && billIIId==undefined) {
			jAlert("Please Select Account Head !!!");
			flag = false;
			return;
		}
	}
});
return flag;
}

/**
 * @author Vimal
 * @since 4th June 2012
 */
function renderChequeDetailEntryForm() {
// tdPaymentDetailsEntrySection
var boiler = '<table class = "table table-condensed table-bordered" style="width:50%">'
		+ '<tr>'
		+ '<th width = "20%">Challan No: </th>'
		+ '<td><input type = "text" id = "tdChequeNo"></td>'
		+ '</tr>'
		+ '<tr>'
		+ '<th width = "20%">Date: </th>'
		+ '<td><input type = "text" id = "tdChequeDate"></td>'
		+ '</tr>'
		+ '</table>';
$('#tdPaymentDetailsEntrySection').html(boiler);
/*
 * $( "#tdChequeDate" ).datepicker({ dateFormat: 'yy-mm-dd', showWeek: true,
 * changeMonth: true, changeYear: true, yearRange:"-60:+0"
 * 
 * });
 */

}
/**
 * @author Vimal
 * @since 4th June 2012
 */
function renderDDDetailEntryForm() {
// tdPaymentDetailsEntrySection
var boiler = '<table class = "table table-condensed table-bordered" style="width:50%">'
		+ '<tr>'
		+ '<th width = "20%">DD No: </th>'
		+ '<td><input type = "text" id = "tdDemandDraftNo"></td>'
		+ '</tr>'
		+ '<tr>'
		+ '<th width = "20%">Date: </th>'
		+ '<td><input type = "text" id = "tdDemandDate"></td>'
		+ '</tr>'
		+ '</table>';
$('#tdPaymentDetailsEntrySection').html(boiler);
$("#tdDemandDate").datepicker({
	dateFormat : 'yy-mm-dd',
	showWeek : true,
	changeMonth : true,
	changeYear : true,
	yearRange : "-60:+0",
});
}

/**
 * @since 2May 2013
 */

function renderCashDetailEntryForm() {
var boiler = '<table class = "tinytable">'
		+ '<tr><td colspan = "2"><div class = "alert alert-info">Please select denomination and no of total currency of that denomination</div></td></tr>'
		+ '<tr>' + '<th>Denomination</th>' + '<td>No of currency</td>'
		+ '</tr>' + '<tr>' + '<td>1000 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination1000"></td>' + '</tr>'
		+ '<tr>' + '<td>500 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination500"></td>' + '</tr>'
		+ '<tr>' + '<td>100 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination100"></td>' + '</tr>'
		+ '<tr>' + '<td>50 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination50"></td>' + '</tr>'
		+ '<tr>' + '<td>20 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination20"></td>' + '</tr>'
		+ '<tr>' + '<td>10 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination10"></td>' + '</tr>'
		+ '<tr>' + '<td>10 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination10"></td>' + '</tr>'
		+ '<tr>' + '<td>5 X &nbsp;</td>'
		+ '<td><input type = "text" id = "denomination10"></td>' + '</tr>'
		+ '</table>';
$('#tdPaymentDetailsEntrySection').html(boiler);
}

/**
 * @since 3rd June 2012
 * @returns
 * @purpose save the student billing information and call the function to re
 *          populate the billing history form to "accordian"
 */
function saveStudentBillingInformation(feeInvoiceId, callback) {
	
	    var userId=$('#userId').val();
	    var studentBatchId=$('#studentBatchId').val();
	    var studentName=$('#studentName').val();
	    var studentUniqueNumber=$('#studentUniqueNumber').val();
	    var studentStatus=$('#studentStatus').val();
	    var DepartmentName=$('#DepartmentName').val();
	    var rollNo=$('#rollNo').val();
//	////////alert("validateStudentBillingForm(): "+validateStudentBillingForm());
	 if ($('#customerHelper').val()== "INDIRA_PUNE" || validateStudentBillingForm('divStudentBillingAdditionArea')) {
		var instituteCourseId = 0;
		try {
			instituteCourseId = getSelectedInstituteCourseId();
		} catch (e) {
		}
		if (instituteCourseId == 0) {
			instituteCourseId = gStudentInvoiceRelatedObject.instituteCourseId;
		}
		if(instituteCourseId == 0 || instituteCourseId == undefined){
			instituteCourseId=instid;
		}
		if (feeInvoiceId == undefined) {
			feeInvoiceId = getStudentInvoiceId();
		}
		var isCheckForReciptMail=$("#isCheckForReciptMail").is(":checked") ? "true" : "false";

		var receiptDate = $('#txtPaymentReceiptDate').val();

		var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
		var installmentNo = $('#installmentNo').val();
		var installmentDetailId = $('#installmentDetailId').val();
		var paymentAmount = $('#txtBillPaymentAmount').val();
		var paymentToBankIdAlias = $('#bankAliesCmb').val();
		var fineAmount = $('#txtBillPaymentFineAmount').val().trim();
		var dateOfAdmission = $('#txtAdmissionDateStudent').val();
		var outStandingFeeAmount = $('#txtOutStandingFeeAmount').val().trim();
		var accountHeadId=$('#otherFeeAccountHeadpmt1').val();
		
		if($('#otherFeeAccountHeadpmt1_chzn').is(':visible')){
			if($('#otherFeeAccountHeadpmt1').val()=='0'){
				jAlert("Please Select Account Head");
				return false;
			}
		}
		
		var Taxdetails="";
		
		if (paymentAmount.includes("-")) {
			jAlert("Please Enter Valid Amount");
			return false;
		}

		var receiptDetail = $('#txtReceiptDetail').val();
		var billNo = $('#txtBillNo').val().trim();

		if (fineAmount == '' || fineAmount == '0.00' || isNaN(fineAmount)) {
			fineAmount = '';
		}
		var nextPaymentDate = $('#txtNextPaymentDate').val();
		// nextPaymentDate =
		// $.datepicker.formatDate('yy-mm-dd',Date.parse(nextPaymentDate));
		var bankName = '';
		var bankBranch = '';
		var chequeDDNo = '';
		var chequeDDDate = '';
		var paymentMode = '';// $('#cbBillPayamentMode').val();
		/*
		 * if(paymentMode.toLowerCase() != 'cash'){ bankName =
		 * $('#cbBillBankList').val(); bankBranch = $('#cbBillBankBranch').val();
		 * //alert('paymentMode: '+paymentMode); if(paymentMode.toLowerCase() ==
		 * 'demanddraft'){ chequeDDNo = $('#tdDemandDraftNo').val(); chequeDDDate =
		 * $('#tdDemandDate').val(); //alert('DD No: '+chequeDDNo); } else
		 * if(paymentMode.toLowerCase() == 'cheque'){ chequeDDNo =
		 * $('#tdChequeNo').val(); chequeDDDate = $('#tdChequeDate').val();
		 * //alert('check No: '+chequeDDNo); } } else {}
		 */
		// alert('chequeDDNo: '+chequeDDNo+' chequeDDDate='+chequeDDDate);
		var array = new Array();
		var flag=true;
		$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail')
		.find('tr').each(
				function() {
					var paymentMode = $(this).find('.paymentMode:visible').val();
					var amount = $(this).find('.amount').val();
					var bankName = $(this).find('.bankName').val();
					var chequeDDNo = $(this).find('.chequeDDNo').val();
					var chequeDDDate = $(this).find('.chequeDDDate').val();
					var branch = $(this).find('.branch').val();
					if (paymentMode != '0') {
						var temp = '';
						if(paymentMode == 'NEFT' || paymentMode == 'NEFT1'
							|| paymentMode == 'RTGS' || paymentMode == 'NEFT2'
								|| paymentMode == 'NEFT3' || paymentMode == 'NEFT4'
									|| paymentMode == 'RTGS1' || paymentMode == 'RTGS2'
										|| paymentMode == 'RTGS3' || paymentMode == 'RTGS4'
											|| paymentMode == 'NEFT5' || paymentMode == 'NEFT6'
												|| paymentMode == 'RTGS5' || paymentMode == 'NEFT7'
													|| paymentMode == 'NEFT8' || paymentMode=='BankChallan(M)'
														|| paymentMode == 'RTGS6' || paymentMode == 'RTGS7'
															|| paymentMode == 'RTGS8' || paymentMode == 'TRANSFER' || paymentMode == 'BankChallan'  
																|| paymentMode == 'DemandDraft' || paymentMode == 'Cheque'
																|| paymentMode=='BankChallan(S)' || paymentMode=='BankChallan(W)' ){
							if(bankName==''){
								jAlert("Please enter bank name");
								flag=false;
								return false;
							}

							if(branch==''){
								jAlert("Please enter branch name");
								flag=false;
								return false;
							}

							if(chequeDDNo==''){
								jAlert("Please enter Chq/DD/NEFT/RTGS No ");
								flag=false;
								return false;
							}
							if(chequeDDDate==''){
								jAlert("Please enter Chq/DD/NEFT/RTGS Date");
								flag=false;
								return false;
							}

						}else if($('#customerHelper').val()!='BLM_MUNJAL' && paymentMode=='CardPayment'){
							var value = $('input[name = "charges"]:checked').val();
							if(value=='' || value==undefined || value=='0' || value==0){
								jAlert('Please Select Charges Mode');
								flag=false;
								return false;
							}
							if(value=='Yes'){
								var accno=$('#otherFeeAccountHeadcmb11 option:selected').val();
								if(accno=='' || accno==undefined || accno=='0' || accno==0){
									jAlert('Please Select Charges Against');
									flag=false;
									return false;
								}
								var cardtype=$('#otherFeeAccountHeadcmb12 option:selected').val();
								if(cardtype=='' || cardtype==undefined || cardtype=='0' || cardtype==0){
									jAlert('Please Select Card Type');
									flag=false;
									return false;
								}
								var taxpercentage=$('#Percentage').val();
								if(taxpercentage=='' || taxpercentage==undefined || taxpercentage=='0' || taxpercentage==0){
									jAlert('Please enter Percentage');
									flag=false;
									return false;
								}
								var taxamount=$('#TotalAmoount').val();
								if(taxamount=='' || taxamount==undefined || taxamount=='0' || taxamount==0){
									jAlert('Please Select Total MAount');
									flag=false;
									return false;
								}

								Taxdetails+=accno+'~'+cardtype+'~'+taxpercentage+'~'+taxamount;
							}
						}else if(paymentMode == 'UPI') {
							if(chequeDDNo==''){
								jAlert("Please enter UTR Code");
								flag=false;
								return false;
							}
							if(chequeDDDate==''){
								jAlert("Please enter Transaction Date");
								flag=false;
								return false;
							}
						}

						if (paymentMode == 'Cash' || paymentMode == 'Concession' || paymentMode == 'CashW' || paymentMode == 'CashM' || paymentMode == 'CashS') {
							temp = '{' + '\"paymentMode\":\"' + paymentMode
							+ '\",' + '\"amount\":\"' + amount
							+ '\",' + '\"bankName\":\"\",'
							+ '\"chequeDDNo\":\"\",'
							+ '\"chequeDDDate\":\"\",'
							+ '\"branch\":\"\"' + '}';
						} else {
							temp = '{' + '\"paymentMode\":\"' + paymentMode
							+ '\",' + '\"amount\":\"' + amount
							+ '\",' + '\"bankName\":\"' + bankName
							+ '\",' + '\"chequeDDNo\":\"'+ chequeDDNo + '\",'
							+ '\"chequeDDDate\":\"' + chequeDDDate
							+ '\",' + '\"branch\":\"' + branch
							+ '\"' + '}';
						}
						array.push(temp);
					}
					else{
						jAlert("please select Pay Mode");
						flag=false;
						return false;
					}
				});

		array = '[' + array.join(',') + ']';
		var  lblCustomerHelper='';
		
		
		setTimeout(function(){
			lblCustomerHelper=$('#customerHelper').val();
		},1000);
		if(flag){
			$('#btnSaveBilling').hide();
			let conversionAmt = verifyVal('#txtConversionAmt');
		    let currId = $('#txtStudentSearchBarInvoice').data('currId') != undefined ? $('#txtStudentSearchBarInvoice').data('currId') : '0' ;
			let currCode = $('#txtStudentSearchBarInvoice').data('currCode') != undefined ? $('#txtStudentSearchBarInvoice').data('currCode') : '';
			$.ajax({
				url : 'saveBillingInformationToServer.json?denominationIdArray='
					+ denominationIdArray
					+ '&denominationQtyArray='
					+ denominationQtyArray,
					data : {
						feeInvoiceId : feeInvoiceId,
						feeItemId : feeItemId,
						paymentAmount : paymentAmount,
						bankName : bankName,
						paymentMode : paymentMode,
						chequeDDNo : chequeDDNo,
						chequeDDDate : chequeDDDate,
						bankBranch : bankBranch,
						installmentNo : installmentNo,
						nextPaymentDate : nextPaymentDate,
						fineAmount : fineAmount,
						installmentDetailId : installmentDetailId,
						paymentToBankIdAlias : paymentToBankIdAlias,
						instituteCourseId : instituteCourseId,
						outStandingFeeAmount : outStandingFeeAmount,
						dateOfAdmission : dateOfAdmission,
						billNo : billNo,
						array : array,
						Taxdetails:Taxdetails,
						receiptDetail : receiptDetail,
						receiptDate : receiptDate,accountHeadId:accountHeadId,
						userId:userId,
				     	conversionAmt:conversionAmt,
				     	currId:currId,
				     	currCode:currCode
					},
					dataType : 'json',
					type : 'POST',
					beforeSend : function() {
						startLoading();
						$('#frmStudentBilling').find('#btnSaveBilling').attr(
								'disabled', 'disabled');
					},
					complete : function() {
						stopLoading();
						$('#frmStudentBilling').find('#btnSaveBilling').removeAttr(
								'disabled', 'disabled');
					},
					success : function(responseJArray) {
						var flag = responseJArray.responseFlag==undefined?'0':responseJArray.responseFlag;
						if (flag.toString() == '1') {
							setInvoiceGenerationStatus('GENERATED',
									responseJArray.studentInvoiceObject,
									responseJArray.studentId);
							hideBillingInformationForm();
							showSuccessMessage(
									"Bill successfully generated: Bill No. is: "
									+ responseJArray.billNo, 10000);
							getStudentBillingDetails(function(billJArray) {
								showStudentBillingDetails(billJArray);
								if (billJArray.length > 0) {
									var studentInvoiceId = billJArray[0].studentInvoiceId;
									try {
										checkAndDisplayStudentLegacyOutstanding(studentInvoiceId);
										checkAndDisplayStudentExcessFees(studentInvoiceId);
									} catch (e) {
									}
								}
								if(lblCustomerHelper=="WESCHOOL"){
									var flag='TRUE', printType="Original", invoiceType='OPEN';
									window.location.replace('printPaymentWiseStudentReceiptPDFforWeschool.json?studentBillId='+responseJArray.studentBillId+'&hasStudentCopy='+flag+'&hasOfficeCopy='+flag+'&invoiceType='+invoiceType+'&printLogo='+flag+'&printType='+printType);
								}else if(lblCustomerHelper=="REVA_UNIVERSITY"){
									window.location.replace('printStudentFeeReceiptReceiptPDFforREVA.json?studentBillId='+responseJArray.studentBillId+'&printType="Original"');
								}else
									printAdmissionReceipt(responseJArray.studentBillId);
								try {
									callback(responseJArray);
								} catch (e) {

								}
							});
						} else {
							showErrorMessage("Bill saving failed! "
									+ responseJArray.responseText, 20000);
							try {
								callback();
							} catch (e) {

							}
						}
						if(isCheckForReciptMail=='true' && $('#customerHelper').val() == "INDIRA_PUNE") {
							setTimeout(function(){
								sendMialRecieptDetailToParent();
							},1000);
						}
					},
					error : function() {

					}
			});
		}
	}

}

function editStudentBillingInformation(studentBillId, studentInvoiceId,billNo,receiptDate) {
if (validateStudentBillingForm('divStudentBillingEditArea' + studentBillId)) {
	var userId=$('#userId').val();
var flag=true;
	var array = new Array();
	
	var instituteCourseId = 0;
		try {
			instituteCourseId = getSelectedInstituteCourseId();
		} catch (e) {
		}
		if (instituteCourseId == 0) {
			instituteCourseId = gStudentInvoiceRelatedObject.instituteCourseId;
		}
		if(instituteCourseId == 0 || instituteCourseId == undefined){
			instituteCourseId=instid;
		}
		var Taxdetails="";
	
	$('#divStudentBillingEditArea' + studentBillId).find(
			'.tblBillPaymentDetail').find('tr').each(
			function() {
				var paymentMode = $(this).find('.paymentMode:visible').val();
				var amount = $(this).find('.amount').val();
				var bankName = $(this).find('.bankName').val();
				var chequeDDNo = $(this).find('.chequeDDNo').val();
				var chequeDDDate = $(this).find('.chequeDDDate').val();
				var branch = $(this).find('.branch').val();
				
				if (paymentMode != '0' && paymentMode != '') {
						
						if(paymentMode == 'NEFT' || paymentMode == 'NEFT1'
							|| paymentMode == 'RTGS' || paymentMode == 'NEFT2'
								|| paymentMode == 'NEFT3' || paymentMode == 'NEFT4'
									|| paymentMode == 'RTGS1' || paymentMode == 'RTGS2'
										|| paymentMode == 'RTGS3' || paymentMode == 'RTGS4'
											|| paymentMode == 'NEFT5' || paymentMode == 'NEFT6'
												|| paymentMode == 'RTGS5' || paymentMode == 'NEFT7'
													|| paymentMode == 'NEFT8' || paymentMode=='BankChallan(M)'
														|| paymentMode == 'RTGS6' || paymentMode == 'RTGS7'
															|| paymentMode == 'RTGS8' || paymentMode == 'TRANSFER' || paymentMode == 'BankChallan'  
																|| paymentMode == 'DemandDraft' || paymentMode == 'Cheque'
																|| paymentMode=='BankChallan(S)' || paymentMode=='BankChallan(W)' ){
							if(bankName==''){
								jAlert("Please enter bank name");
								flag=false;
								return false;
							}

							if(branch==''){
								jAlert("Please enter branch name");
								flag=false;
								return false;
							}

							if(chequeDDNo==''){
								jAlert("Please enter Chq/DD/NEFT/RTGS No ");
								flag=false;
								return false;
							}
							if(chequeDDDate==''){
								jAlert("Please enter Chq/DD/NEFT/RTGS Date");
								flag=false;
								return false;
							}

						}else if($('#customerHelper').val()!='BLM_MUNJAL' && paymentMode=='CardPayment'){
							var value = $('input[name = "charges"]:checked').val();
							if(value=='' || value==undefined || value=='0' || value==0){
								jAlert('Please Select Charges Mode');
								flag=false;
								return false;
							}
							if(value=='Yes'){
								var accno=$('#otherFeeAccountHeadcmb'+studentBillId+' option:selected').val();
								if(accno=='' || accno==undefined || accno=='0' || accno==0){
									jAlert('Please Select Charges Agaist');
									flag=false;
									return false;
								}
								var cardtype=$('#otherFeeAccountHeadcmbCard'+studentBillId+' option:selected').val();
								if(cardtype=='' || cardtype==undefined || cardtype=='0' || cardtype==0){
									jAlert('Please Select Card Type');
									flag=false;
									return false;
								}
								var taxpercentage=$('#Percentage'+studentBillId).val();
								if(taxpercentage=='' || taxpercentage==undefined || taxpercentage=='0' || taxpercentage==0){
									jAlert('Please enter Percentage');
									flag=false;
									return false;
								}
								var taxamount=$('#TotalAmoount'+studentBillId).val();
								if(taxamount=='' || taxamount==undefined || taxamount=='0' || taxamount==0){
									jAlert('Please Select Total MAount');
									flag=false;
									return false;
								}

								Taxdetails+=accno+'~'+cardtype+'~'+taxpercentage+'~'+taxamount;
							}
						}
					}else{
						jAlert('please select payment mode');
						flag=false;
						return false;
					}
				
				if (paymentMode != '0' && paymentMode != '') {
					var temp = '';
					if (paymentMode == 'Cash') {
						temp = '{' + '\"paymentMode\":\"' + paymentMode + '\",'
								+ '\"amount\":\"' + amount + '\",'
								+ '\"bankName\":\"\",' + '\"chequeDDNo\":\"\",'
								+ '\"chequeDDDate\":\"\",' + '\"branch\":\"\"'
								+ '}';
					} else {
						temp = '{' + '\"paymentMode\":\"' + paymentMode + '\",'
								+ '\"amount\":\"' + amount + '\",'
								+ '\"bankName\":\"' + bankName + '\",'
								+ '\"chequeDDNo\":\"' + chequeDDNo + '\",'
								+ '\"chequeDDDate\":\"' + chequeDDDate + '\",'
								+ '\"branch\":\"' + branch + '\"' + '}';
					}
					array.push(temp);
				}
			});
	array = '[' + array.join(',') + ']';
	
	//setTimeout(function(){
		var	lblCustomerHelper=$('#customerHelper').val();
	//},1000);
	var dateOfAdmission = $('#txtAdmissionDateStudent').val();
	var accountHeadId=$('#otherFeeAccountHeadpmt:visible').val();
	var paymentMode=$('#editPaymentmodeId'+studentBillId).val();
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
		
	if(flag){

		let conversionAmt = verifyVal('#txtConversionAmt'+studentBillId);
	    let currId = $('#txtStudentSearchBarInvoice').data('currId') != undefined ? $('#txtStudentSearchBarInvoice').data('currId') : '0' ;
		let currCode = $('#txtStudentSearchBarInvoice').data('currCode') != undefined ? $('#txtStudentSearchBarInvoice').data('currCode') : '';
		$.ajax({
			url :'saveBillingInformationToServer.json',    // 'editStudentBillingInformation.json',
			data : {
				studentBillId : studentBillId,
				feeInvoiceId : studentInvoiceId,
				accountHeadId:accountHeadId,
				array : array,
				billNoOld:billNo,
				userId:userId,
				instituteCourseId:instituteCourseId,
				paymentMode:paymentMode,
				receiptDate:receiptDate,
				feeItemId:feeItemId,
				Taxdetails:Taxdetails,
				dateOfAdmission:dateOfAdmission,
		     	conversionAmt:conversionAmt,
		     	currId:currId,
		     	currCode:currCode
			},
			dataType : 'json',
			type : 'POST',
			beforeSend : function() {
				startLoading();
				$('.editStudentBillingInfoBtn' + studentBillId).attr('disabled',
				'disabled');
			},
			complete : function() {
				stopLoading();
				$('.editStudentBillingInfoBtn' + studentBillId).removeAttr(
						'disabled', 'disabled');
			},
			success : function(responseJArray) {
				var flag = responseJArray.responseFlag;
				if (flag.toString() == '1') {
					showSuccessMessage("Bill successfully generated: Bill No. is: "
							+ responseJArray.billNo, 10000);
					getStudentBillingDetails(function(billJArray) {
						showStudentBillingDetails(billJArray);
						if (billJArray.length > 0) {
							var studentInvoiceId = billJArray[0].studentInvoiceId;
							try {
								checkAndDisplayStudentExcessFees(studentInvoiceId);
							} catch (e) {
							}
						}
						if(lblCustomerHelper=="WESCHOOL"){
							var flag='TRUE', printType="Original", invoiceType='OPEN';
							window.location.replace('printPaymentWiseStudentReceiptPDFforWeschool.json?studentBillId='+responseJArray.studentBillId+'&hasStudentCopy='+flag+'&hasOfficeCopy='+flag+'&invoiceType='+invoiceType+'&printLogo='+flag+'&printType='+printType);
						}else
							printAdmissionReceipt(responseJArray.studentBillId);
					});
				} else {
					showErrorMessage("Bill saving failed! "
							+ responseJArray.responseText, 20000);
					try {
						callback();
					} catch (e) {

					}
				}
			},
			error : function() {

			}
		});
	}
}
}

function getReceiptwisePaymentInformationForPrinting(studentBillId, callback) {
	$.ajax({
		url : 'getReceiptwisePaymentInformationForPrinting.json',
		data : 'studentBillId=' + studentBillId,
		dataType : 'json',
		async : false,
		success : function(jObject) {
			callback(jObject);
		}
	});
}

function getFeeReceiptDesignForPrinting(callback) {
getReceiptwisePaymentInformationForPrinting(studentBillId, function(jObject) {

	callback(boiler);
});
}
function printAdmissionReceiptNew(studentBillId, studentInvoiceId) {
	getReceiptwisePaymentInformationForPrinting
	
	//
getReceiptwisePaymentInformationForPrinting(
		studentBillId,
		function(jObject) {
			var instituteName = $('#instituteName').val();
			var receiptNo = jObject['receiptNo'];
			var currDate = jObject['currDate'];
			var billGeneratedDate = jObject['billGeneratedDate'];
			var studentName = jObject['studentName'];
			var studentUID = jObject['studentUID'];
			var invoiceId = studentInvoiceId;
			if (studentUID == undefined) {
				studentUID = '-';
			}
			var studclass = jObject['class'];
			var particularArray = jObject['particularArray'];
			var receiptArray = jObject['receiptArray'];
			var generatedBy = jObject['generatedBy'];
			
			var remark = jObject['remark'];
			if (remark == '' || remark == undefined) {
				remark = 'Interim fee. Final fee would be finalized by the S.S.Samiti';
			}
			var totalAmount = 0;
			var payment = '';
			var stdDetail = '<tr>' + '<td colspan="3">' + '<b>'
					+ '<div style="display:inline-block;">Dept. / Branch : '
					+ studclass + '</div>' + '</b>' + '</td>' + '</tr>';
			if (receiptNo != undefined)
				receiptNo = receiptNo.split('/')[0] + "/"
						+ receiptNo.split('/')[1] + "/" + '<strong>'
						+ receiptNo.split('/')[2] + '</strong>';
			for ( var i = 0; i < receiptArray.length; i++) {
				payment += '</tr>'
						+ '<td style="width:81%;">'
						+ receiptArray[i].paidBy
						+ '</td>'
						+ '<td style="text-align:right;width:19%;">'
						+ formatAmount(parseFloat(receiptArray[i].amount)
								.toFixed(2)) + '</td>' + '</tr>';

			}

			if (payment != null || payment != '') {
				payment = '<tr>'
						+ '<td colspan="3" style="font-size:9px;">'
						+ '<table cellspacing="0" cellpadding="0" class="table3" style="width:100%;">'
						+ payment + '</table>' + '</td>' + '</tr>';
			}
			var boiler = '<div style="width:100%;text-align:center;font-size: 10px;" class="printDiv">'
					+ '<strong>'
					+ $('#subjectTo').val()
					+ '</strong>'
					+ '</div>'
					+ '<div style="width:100%;font-family: COURIER;">'
					+ '<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">'
					+ '<img height="46px" src="getInstituteLogo.json">'
					+ '</div>'
					+ '<div style="width:60%;display:inline-block;text-align:center;vertical-align:middle;font-size: 13px;">'
					+ '<b>'
					+ instituteName
					+ '</b>'
					+ '</div>'
					+ '<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">'
					+ '<img height="46px" src="getInstituteLogo.json">'
					+ '</div>'
					+ '</div><br>'
					+

					'<table class="table table-bordered table2" cellspacing="0" cellpadding="0" id="tblPrintIncomeResceipt" >'
					+
					/*
					 * '<tr>'+ '<th colspan="3"><center><div><img
					 * height="36px" src="getInstituteLogo.json"></div><b>'+instituteName+'</b><br><b>Receipts
					 * <span id="spnCopyName"></span></b></center></th>'+ '</tr>'+
					 */
					'<tr>';
					if($('#customerHelper').val() == "IMT_GAZIABAD"){
				boiler+='<th colspan="3"><center><b> FEE RECEIPT / BILL OF SUPPLY</b></center></th>';
		            }else{
				boiler+='<th colspan="3"><center><b>RECEIPT</b></center></th>';
			       }
			boiler+= '</tr>'
					+ '<tr>'
					+ '<td><strong>Receipt No. </strong></td><td colspan="2"><span class="size14"> '
					+ receiptNo
					+ ' </span><span style="float:right;" >'
					+ billGeneratedDate
					+ '</span></td>'
					+ '</tr>'
					+ '<tr>'
					+ '<td><strong>Received from </strong></td><td colspan="2" class="size14 fontBold">'
					+ '<span class="size14"> '
					+ studentName
					+ '</span><span style="float:right;" >UID: '
					+ studentUID
					+ '</span></td>'
					+ '</tr>'
					+ stdDetail
					+ '<tr>'
					+ '<th style="width:17%;">Sr no.</th>'
					+ '<th style="width:63%;">Account Head</th>'
					+ '<th style="width:20%;">Amount</th>' + '</tr>';
			for ( var k = 0; k < particularArray.length; k++) {
				boiler += '</tr><td style="text-align:center">' + eval(k + 1)
						+ '</td>';

				if (particularArray[k]['isRefundable'])
					boiler += '<td style="">'
							+ particularArray[k]['orgFeeItemHeadName']
							+ '</td>'; // boiler+='<td
										// style="">'+particularArray[k]['orgFeeItemHeadName']+'(
										// Refundable )</td>';
				else
					boiler += '<td style="">'
							+ particularArray[k]['orgFeeItemHeadName']
							+ '</td>';

				boiler += '<td style="text-align:right">'
						+ commaFormatted(Math.round(
								parseFloat(particularArray[k]['totalAmount']))
								.toFixed(2)) + '</td></tr>';

				totalAmount = totalAmount
						+ eval(particularArray[k]['totalAmount']);

			}
			amountInWord = (toWords(eval(totalAmount)) + ' Only.');
			boiler += '<tr>'
					+ '<td><strong>Amount in word </strong></td>'
					+ '<td colspan="2"> Rupees '
					+ amountInWord
					+ ' </td>'
					+ '</tr>'
					+ '<tr>'
					+ '<td colspan="2" style="text-align:right"><b>Total(In Rs.)</b></td>'
					+ '<td style="text-align:right;" class="fontBold">'
				//	+ formatAmount(parseFloat(totalAmount).toFixed(2)) 
					+formatAmount(Math.round(parseFloat(totalAmount)).toFixed(2))
					//+ commaFormatted(Math.round(parseFloat(totalAmount)).toFixed(2))
					+ '/-</td>' + '</tr>';
			boiler += '<tr>'
					+ payment
					+ '<tr>'
					+ '<td colspan="3">'
					+ remark
					+ '</td>'
					+ '</tr>'
					+ '<tr>';
				if($('#customerHelper').val() == "IMT_NAGPUR"){
					boiler += '<td colspan="3" style="text-align:right;" class="fontBold size10"><strong>Computer generated receipt and no signature required</td>' + '</tr>' ;
				}else{
					boiler += '<td colspan="3" style="text-align:right;" class="fontBold size10"><strong>For '
						+ instituteName + ' <br><br>Generated By : ' + generatedBy
						+ '</strong></td>' + '</tr>' ;
				}
					/*
					 * '<tr>'+ '<td colspan="3" style="font-weight:bold;font-style:italic">Provisional
					 * fee & Subject to orders of Honorable High Court & Supreme
					 * Court</td>'+ '</tr>'+
					 */
					'</table>';

			var boilerPrint = '<div style="height:24.6cm;">'
					+ '<div style="height:40%;">'
					+ boiler
					+ '</div>'
					+ '<div style="height:40%;padding-top:16%;">'
					+ '<span style="text-align:center">---------------------------------------------------------------------------------------------------------------------</span>'
					+ boiler + '</div>' + '</div>';

			// -------------------BONAFIDE---------------------
			var studentId = gStudentInvoiceRelatedObject.studentId;
			getFinalBonafideAdmissionCardData(
					studentId,
					invoiceId,
					undefined,
					function(bonafideData) {
						var studentName = bonafideData.studentName;
						var department = bonafideData.department;
						var yearType = bonafideData.yearType;
						var academicYear = bonafideData.academicYear;
						var round = bonafideData.round;
						var quota = bonafideData.quota;
						var currdate = bonafideData.currdate;
						var billNos = bonafideData.billNos;
						var docArray = bonafideData.docArray;
						var deanName = bonafideData.deanName;
						var shiftName = bonafideData.shiftType;

						var footerMessage = bonafideData.footerMessage;
						var footerSignature = bonafideData.footerSignature;

						if (shiftName != undefined && shiftName != '') {
							shiftName = ' [ ' + shiftName + ' ]';
						}
						var boilerPrint1 = '<table>'
								+ '<tr>'
								+ '<td style="text-align:center;font-weight:bold">'
								+ '<br><br><br><br><br><br><br><br><br><br>Bonafide / Provisional Admission Certificate<br>'
								+ '</td>'
								+ '</tr>'
								+

								'<tr>'
								+ '<td>'
								+ '<p>     This is to certify that <span style="font-weight:bold">'
								+ studentName
								+ ' </span>is bonafied student of this college provisionally admitted to  '
								+ yearType
								+ ' <span style="font-weight:bold">'
								+ department
								+ ''
								+ shiftName
								+ '</span>'
								+ ' for the session '
								+ academicYear
								+ ' during the '
								+ quota
								+ ' <span style="font-weight:bold">'
								+ round
								+ '</span>'
								+ ' held on <span style="font-weight:bold">'
								+ currdate
								+ '</span>'
								+ ' This provisional admission is subject to the fulfillment of eligibility criteria and pending documents required if any.'
								+ '</p>'
								+ '<p>'
								+ '    At the time of admission the candidate has paid fees by Receipt Number: <span style="font-weight:bold">'
								+ billNos
								+ '</sapn>'
								+ '</p>'
								+ '<p>'
								+ '    The following original certificates and marks sheet are deposited by the candidate with the college for verification purpose: <br>'
								+ '<ol>';
						for ( var i = 0; i < docArray.length; i++) {
							boilerPrint1 += '<li>' + docArray[i].docName
									+ '</li>';
						}
						boilerPrint1 += '</ol>' + '<p>' + footerMessage
								+ '</p>' + '</td>' + '</tr>' + '<tr>'
								+ '<td><br><br><br>' + footerSignature
								+ '</td>' + '</tr>' + '</table>';

						// alert("boilerPrint "+boilerPrint);
						// alert("boilerPrint1 "+boilerPrint1);

						var myboiler = '<html><meta charset="utf-8" /><head>'
								+ '<style type="text/css">'
								+

								'@media print  and (width: 21cm) and (height: 29.7cm) {'
								+ '  .page-break  { display: block; page-break-before: always; }'
								+ '@page {'
								+ '     margin: 3cm;'
								+

								'  }'
								+ 'body{ background-color:#FFFFFF; background-image:none; color:#000000; }'
								+ '.ad{ display:none;}'
								+ '.HeaderSection'
								+ '{'
								+ 'display:none;'
								+ '}'
								+ '.FooterSection'
								+ '{'
								+ 'display:none;'
								+ '}'
								+ '.leftbar{ display:none;}'
								+ '.contentarea{ width:100%;}'
								+ '}'
								+ '</style>'
								+ '<link rel="stylesheet" href="css/print.css" rel="stylesheet" media="print" />'
								+ '</head><body>';
						myboiler += boilerPrint + '<div class="page-break">'
								+ boilerPrint1;
						myboiler += '</body></html>';
						var printWin = window
								.open('', '',
										'left=0,top=0,width=1,height=1,toolbar=0,scrollbars=2,status=0');
						printWin.document.write(myboiler);
						printWin.document.close();
						printWin.focus();
						printWin.print();
						printWin.close();
					});

		});

/*
 * var myboiler='<html><meta charset="utf-8" /><head>'+ '<style
 * type="text/css">'+
 * 
 * '@media print and (width: 21cm) and (height: 29.7cm) {'+ '@page {'+ ' margin:
 * 3cm;'+
 *  ' }'+ 'body{ background-color:#FFFFFF; background-image:none; color:#000000;
 * }'+ '.ad{ display:none;}'+ '.HeaderSection'+ '{'+ 'display:none;'+ '}'+
 * '.FooterSection'+ '{'+ 'display:none;'+ '}'+ '.leftbar{ display:none;}'+
 * '.contentarea{ width:100%;}'+ '}'+ '</style>'+ '<link rel="stylesheet"
 * href="css/print.css" rel="stylesheet" media="print" />'+ '</head><body>';
 * myboiler+=boilerPrint; myboiler+='</body></html>'; var printWin =
 * window.open('','','left=0,top=0,width=1,height=1,toolbar=0,scrollbars=2,status=0');
 * printWin.document.write(myboiler); printWin.document.close();
 * printWin.focus(); printWin.print(); printWin.close(); });
 */

}
function printAdmissionReceipt(studentBillId) {
getReceiptwisePaymentInformationForPrinting(
		studentBillId,
		function(jObject) {
			var instituteName = jObject.instituteName+'<br>'+jObject['instituteAddress'];
			var instituteName1 = $('#instituteName').val()+'<br>'+jObject['instituteAddress'];
			var receiptNo = jObject['receiptNo'];
			var currDate = jObject['currDate'];
			var billGeneratedDate = jObject['billGeneratedDate'];
			var studentName = jObject['studentName'];
			var studentUID = jObject['studentUID'];
			var yearOfStudent = jObject['year'];
			if (studentUID == undefined) {
				studentUID = '-';
			}
			var studclass = jObject['class'];
			var particularArray = jObject['particularArray'];
			var receiptArray = jObject['receiptArray'];
			var generatedBy = jObject['generatedBy'];
			var remark = jObject['remark'];
			var note = jObject['note'];
			if (remark == '' || remark == undefined) {
				remark = 'Interim fee. Final fee would be finalized by the S.S.Samiti';
			}
			var instId = jObject['instituteId'];
			if(instituteName=="" || instituteName==null || instituteName==undefined){
				instituteName=jObject['instituteName']+'<br>'+jObject['instituteAddress'];
				instituteName1=jObject['instituteName'];
			}
			var totalAmount = 0;
			var payment = '';
			var colspan="2";
			var colspan1="3";
			if($('#customerHelper').val() == "IMT_GAZIABAD"){
				colspan="3";
				colspan1="4";
			}
			var studentRollNo = ($('#customerHelper').val() == "IMT_NAGPUR" || $('#customerHelper').val() == "IMT_GAZIABAD" ? ('<tr><td><span class="size14 fontBold">Roll No.</span></th><td colspan='+colspan+'><span class="size14 fontBold">'+jObject.rollNo+'</span></td></tr>') : '');
			var stdDetail = '<tr>' + '<td colspan='+colspan1+'>' + '<b>'
					+ '<div style="display:inline-block;">'+($('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD" ? 'Dept. / Branch : ' : ''+juno.labelByCustomer('l.ProgramDepartment')+':')+' '
					+ studclass + '</div>' + '</b>' + '</td>' + '</tr>';
			 if (receiptNo != undefined)
		    	if(!receiptNo.includes('/'))
					receiptNo = receiptNo.split('/')[0];
			 	/*else{    
					receiptNo = receiptNo.split('/')[0] + "/"
					+ receiptNo.split('/')[1] + "/" + '<strong>'
					+ receiptNo.split('/')[2] + '</strong>';
				}*/
			for ( var i = 0; i < receiptArray.length; i++) {
				payment += '</tr>'
					+ '<td style="width:81%;">'
					+ receiptArray[i].paidBy
					+ '</td>'
					+ '<td style="text-align:right;width:19%;">'
					+ formatAmount(parseFloat(receiptArray[i].amount)
							.toFixed(2)) + '</td>' + '</tr>';

			}
			payment=payment.replace('null','');
			
			if (payment != null || payment != '') {
				payment = '<tr>'
						+ '<td colspan='+colspan1+' style="font-size:9px;">'
						+ '<table cellspacing="0" cellpadding="0" class="table3" style="width:100%;">'
						+ payment + '</table>' + '</td>' + '</tr>';
			}
			var boiler = '<div style="width:100%;text-align:center;font-size: 10px; '+($('#customerHelper').val() != undefined
					&& ($('#customerHelper').val() == "IMT_NAGPUR" || $('#customerHelper').val() == "IMT_GAZIABAD") || $('#customerHelper').val() == "INDIRA_PUNE" ? 'display:none;' : '')+'" class="printDiv">'
					+ '<strong>'
					+ $('#subjectTo').val()
					+ '</strong>'
					+ '</div>'
					+ '<div style="width:100%;font-family: Cambria;">'
					+ '<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">';
			if ($('#customerHelper').val() != undefined
					&& $('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD")
				boiler += '<img height="46px" src="getInstituteLogo.json?instituteId='+instId+'">';
			boiler += '</div>'
					+ '<div style="width:60%;display:inline-block;text-align:center;vertical-align:middle;font-size: 13px;">';
			if ($('#customerHelper').val() != undefined
					&& $('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD")
				boiler += '<b>' + instituteName + '</b>';
			else{
				if($('#customerHelper').val() == "IMT_GAZIABAD")
					boiler += '<img height="45px" src="img/imtg_final_logo.jpg">';
				else
					boiler += '<img height="45px" src="img/imtn_final_logo.jpg">';
			}
			boiler += '</div>'
					+ '<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">';
			if ($('#customerHelper').val() != undefined
					&& $('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD" && $('#customerHelper').val() !="INDIRA_PUNE")
				boiler += '<img height="46px" src="getInstituteLogo.json?instituteId='+instId+'">';
			boiler += '</div>'
					+ '</div><br>'
					+

					'<table class="table table-bordered table2" cellspacing="0" cellpadding="0" id="tblPrintIncomeResceipt" >';
					/*
					 * '<tr>'+ '<th colspan="3"><center><div><img
					 * height="36px" src="src="getInstituteLogo.json?instituteId='+instId+'""></div><b>'+instituteName+'</b><br><b>Receipts
					 * <span id="spnCopyName"></span></b></center></th>'+ '</tr>'+
					 */
			
					boiler+='<tr>';
						if($('#customerHelper').val() == "IMT_GAZIABAD"){
							colspan="3";
							boiler+='<th colspan="4"><center><b> FEE RECEIPT / BILL OF SUPPLY</b></center></th>';
						}else{
							boiler+='<th colspan="3"><center><b>RECEIPT</b></center></th>';
						}
						boiler+= '<tr>'
					+ '<td><strong>Receipt No. </strong></td><td colspan='+colspan+'><span class="size14"> '
					+ receiptNo
					+ ' </span><span style="float:right;" >'
					+ billGeneratedDate
					+ '</span></td>'
					+ '</tr>'
					+ '<tr>'
					+ '<td><strong>Received from </strong></td><td colspan='+colspan+' class="size14 fontBold">'
					+ '<span class="size14"> ' + studentName+'';
					if($('#customerHelper').val() != "INDIRA_PUNE"){
						boiler +='</span><span style="float:right;" >UID: ' + studentUID+'';
					}
						boiler += '</span></td>' + '</tr>'+ studentRollNo + stdDetail + '</tr>';
					
					if($('#customerHelper').val()!=undefined && $('#customerHelper').val()=="IMT_GAZIABAD"){
						boiler +='<tr><td><strong>Account Name</strong></td><td  colspan='+colspan+'>IMT, GAZIABAD</td></tr><tr><td><strong>Account Number</strong></td><td colspan='+colspan+'>6770020000251</td></tr><tr><td><strong>GSTIN </strong></td><td colspan='+colspan+'>09AAATL1391H1ZK</td></tr>';
					}
					if($('#customerHelper').val()!=undefined && $('#customerHelper').val()=="IMT_GAZIABAD"){
						boiler += '<tr><th style="width:10%;">Sr no.</th>'
							+ '<th style="width:60%;">Account Head</th>'
							+ '<th style="width:10%;">SAC CODE</th>'
							+ '<th style="width:20%;">Amount In Rs.</th>' + '</tr>';	
						for ( var k = 0; k < particularArray.length; k++) {
							boiler += '</tr><td style="text-align:center">' + eval(k + 1)
							+ '</td>';

							if (particularArray[k]['isRefundable'])
								boiler += '<td style="">'
									+ particularArray[k]['orgFeeItemHeadName']
							+ '</td>'; // boiler+='<td
							// style="">'+particularArray[k]['orgFeeItemHeadName']+'(
							// Refundable )</td>';
							else
								boiler += '<td style="">'
									+ particularArray[k]['orgFeeItemHeadName']
							+ '</td>';
							
							boiler += '<td style="">999241</td>';

							boiler += '<td style="text-align:right">'
								+ commaFormatted(Math.round(
										parseFloat(particularArray[k]['totalAmount']))
										.toFixed(2)) + '</td></tr>';

							totalAmount = totalAmount
							+ eval(particularArray[k]['totalAmount']);

						}
					}else{
						boiler += '<tr><th style="width:17%;">Sr no.</th>'
							+ '<th style="width:63%;">Account Head</th>'
							+ '<th style="width:20%;">Amount In Rs.</th>' + '</tr>';
						for ( var k = 0; k < particularArray.length; k++) {
							boiler += '</tr><td style="text-align:center">' + eval(k + 1)
							+ '</td>';

							if (particularArray[k]['isRefundable'])
								boiler += '<td style="">'
									+ particularArray[k]['orgFeeItemHeadName']
							+ '</td>'; // boiler+='<td
							// style="">'+particularArray[k]['orgFeeItemHeadName']+'(
							// Refundable )</td>';
							else
								boiler += '<td style="">'
									+ particularArray[k]['orgFeeItemHeadName']
							+ '</td>';

							boiler += '<td style="text-align:right">'
								+ commaFormatted(Math.round(
										parseFloat(particularArray[k]['totalAmount']))
										.toFixed(2)) + '</td></tr>';

							totalAmount = totalAmount
							+ eval(particularArray[k]['totalAmount']);

						}
					}
					
			amountInWord = (toWords(eval(totalAmount)) + ' Only.');
			var advancePaidAmt = '';
			if(jObject['advancePaidAmount'] != undefined && jObject['advancePaidAmount'] != ''){
				advancePaidAmt = '</tr><td colspan='+colspan+'>ADVANCE PAID AGAINST NEXT INSTALLMENT</td><td style="text-align:right;">'+formatAmount(parseFloat(jObject['advancePaidAmount']).toFixed(2)) + '/-</td></tr>';
			}
			boiler += '<tr>'
					+ '<td><strong>Amount in word </strong></td>'
					+ '<td colspan='+colspan+'> Rupees '
					+ amountInWord
					+ ' </td>'
					+ '</tr>'
					+ '<tr>'
					+ '<td colspan='+colspan+' style="text-align:right"><b>Total(In Rs.)</b></td>'
					+ '<td style="text-align:right;" class="fontBold">'
					//+ formatAmount(parseFloat(totalAmount).toFixed(2))
					+commaFormatted(Math.round(parseFloat(totalAmount)).toFixed(2))
					+ '/-</td>' + '</tr>';
			boiler += '<tr>'
					+ advancePaidAmt
					+ payment
					+ '<tr style="'+($('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD" && $('#customerHelper').val() != "INDIRA_PUNE" ? "" : "display:none;")+'">'
					+ '<td colspan='+colspan1+'>'
					+ remark
					+ '</td>'
					+ '</tr>'
					+ '<tr>'
					if($('#customerHelper').val() == "IMT_GAZIABAD" || $('#customerHelper').val() == "IMT_NAGPUR" || $('#customerHelper').val() == "IMT_HYDERABAD"){
						boiler += '<td colspan="2" style="text-align:center;" class="fontBold size10"><strong>Computer generated receipt and no signature required</td><td class="fontBold size10"><strong>Generated At:<br>'+jObject['generatedat']+'</strong></td>' + '</tr>' ;
					}else{
						boiler += '<td colspan="3" style="text-align:right;" class="fontBold size10"><strong>For '
							+ instituteName + ' <br><br>Generated By : ' + generatedBy
							+ '</strong></td>' + '</tr>' ;
					}
					/*
					 * '<tr>'+ '<td colspan="3" style="font-weight:bold;font-style:italic">Provisional
					 * fee & Subject to orders of Honorable High Court & Supreme
					 * Court</td>'+ '</tr>'+
					 */
					var rcoemNotemsg = '* Students who are desirous to receive any freeship / Scholarship under any category should fill the required application forms and duly submit the same to the competent authority as per their specified procedure with in prescribed due date. Failing which they are liable to pay the prescribed fees of the institute.';
                        if($('#customerHelper').val() == "RCOEM" && yearOfStudent==1){
                            boiler +='<tr><td td colspan='+colspan1+'>'+rcoemNotemsg+'</td></tr>';
                        }
					if($('#customerHelper').val() == "INDIRA_PUNE"){
						boiler +='<tr><td td colspan='+colspan1+'>Note:'+note+'</td></tr>';
					}
						boiler +='</table><br>';
				var boilerPrint =''; 
				if(particularArray.length<10){
					boilerPrint += '<div style="height:24.6cm;">'
					+ '<div style="height:35%;">'
					+ boiler
					+ '</div>'
					+ '<br><br><div style="height:40%;padding-top:16%;">'
					+ '<span style="text-align:center">---------------------------------------------------------------------------------------------------------------------</span>'
					+ boiler + '</div>' + '</div>';
				}else{
					boilerPrint += '<div style="height:24.6cm;"><table>'+
					'<tr><td>'+boiler+'</td></tr>'+
					'<tr class="page_break"><td>'+boiler+'</td></tr></table>'+
					'</div></div>';
				}

			var myboiler = '<html><meta charset="utf-8" /><head>'
					+ '<style type="text/css">'+
					'.page_break {'+
					'	  page-break-before: always;'+
					'	}'+

					'@media print  and (width: 21cm) and (height: 29.7cm) {'
					+ '@page {'
					+ '     margin: 3cm;'
					+

					'  }'
					+ 'body{ background-color:#FFFFFF; background-image:none; color:#000000; }'
					+ '.ad{ display:none;}'
					+ '.HeaderSection'
					+ '{'
					+ 'display:none;'
					+ '}'
					+ '.FooterSection'
					+ '{'
					+ 'display:none;'
					+ '}'
					+ '.leftbar{ display:none;}'
					+ '.contentarea{ width:100%;}'
					+ '}'
					+ 'table.table2 a:link	{	     color: #666;	    font-weight: bold;	    text-decoration: none; 	}	.table2 a:visited	{	    color: #999999;	    font-weight: bold;	    text-decoration: none;	}	.table2 a:active, .table2 a:hover	{	    color: #bd5a35;	    text-decoration: underline;	}	/* .table-bordered {	    -moz-border-bottom-colors: none;	    -moz-border-left-colors: none;	    -moz-border-right-colors: none;	    -moz-border-top-colors: none;	    border-collapse: separate;	    border-color: #DDDDDD #DDDDDD #DDDDDD -moz-use-text-color;	    border-image: none;	    border-radius: 4px 4px 4px 4px;	    border-style: solid solid solid none;	    border-width: 1px 1px 1px 0;	}	.table {	    margin-bottom: 18px;	    width: 100%;	}	table {	    border-collapse: collapse;	    border-spacing: 0;	} */	.table2	{	    width:100%;	    font-family: COURIER;	    color: Black;	    font-size: 12px;	    text-shadow: 1px 1px 0px #fff;	    border: #000 1px solid;	    -moz-border-radius: 3px;	    -webkit-border-radius: 3px;	    border-radius: 3px;	    -moz-box-shadow: 0 1px 2px #d1d1d1;	    -webkit-box-shadow: 0 1px 2px #d1d1d1;	    box-shadow: 0 1px 2px #d1d1d1;	    border-spacing: 0;	}	.table2 tr th:first-child	{	    text-align: left;	    padding-left: 10px;	    border-left: 0;	    text-align: center;	}	.table2 th	{	    border-top: 1px solid #000;	    border-bottom: 1px solid #000;	    border-left: 1px solid #000;	    text-align: center;	    height: 15px;	    font-weight: bold;	    background: #bfbfbf;	    /*background: -webkit-gradient(linear, left top, left bottom, from(#ededed), to(#ebebeb));	    background: -moz-linear-gradient(top,  #ededed,  #ebebeb); */	}	.table2 th:first-child	{	    text-align: left; /*padding-left:20px;*/	}	.table2tr:first-child th:first-child	{	    -moz-border-radius-topleft: 3px;	    -webkit-border-top-left-radius: 3px;	    border-top-left-radius: 3px;	}	.table2 tr:first-child th:last-child	{	    -moz-border-radius-topright: 3px;	    -webkit-border-top-right-radius: 3px;	    border-top-right-radius: 3px;	}	.table2 tr	{	    text-align: left;	    padding-left: 1px;	}	.table2 tr td:first-child	{	    text-align: left;	    padding-left: 10px;	    border-left: 0;	}	.table2 tr td	{	    height: 10px;	    border-top: 1px solid #ffffff;	    border-bottom: 1px solid #000;	    border-left: 1px solid #000;	    /* border-right: 1px solid #000; */	    	    	    /* background: #fafafa;	    background: -webkit-gradient(linear, left top, left bottom, from(#fbfbfb), to(#fafafa));	    background: -moz-linear-gradient(top,  #fbfbfb,  #fafafa); */	}	.table2 tr.even td	{	    background: #f6f6f6;	    background: -webkit-gradient(linear, left top, left bottom, from(#f8f8f8), to(#f6f6f6));	    background: -moz-linear-gradient(top,  #f8f8f8,  #f6f6f6);	}	.table2 tr:last-child td	{	    border-bottom: 0;	}	.table2 tr:last-child td:first-child	{	    -moz-border-radius-bottomleft: 3px;	    -webkit-border-bottom-left-radius: 3px;	    border-bottom-left-radius: 3px;	}	.table2 tr:last-child td:last-child	{	    -moz-border-radius-bottomright: 3px;	    -webkit-border-bottom-right-radius: 3px;	    border-bottom-right-radius: 3px;	}	.table2 tr:hover td	{	    /* background: #f2f2f2;	    background: -webkit-gradient(linear, left top, left bottom, from(#f2f2f2), to(#f0f0f0));	    background: -moz-linear-gradient(top,  #f2f2f2,  #f0f0f0); */	}'
					+ 'table.table3 { /* width:100%; */ font-family: COURIER; color: Black; font-size: 12px; text-shadow: 1px 1px 0px #fff; /* border: #000 1px solid; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; */ /* -moz-box-shadow: 0 1px 2px #d1d1d1; -webkit-box-shadow: 0 1px 2px #d1d1d1; box-shadow: 0 1px 2px #d1d1d1; */ } .printDiv { font-family: COURIER; color: Black; font-size: 12px; text-shadow: 1px 1px 0px #fff; } .printingdiv { border :solid thin; } .size14 { font-size: 14px; } .fontBold { font-weight: bold; } .size10 { font-size: 10px; } .sepAmount{ font-weight: bold; background-color:#eeeeee; } .list { margin-left: 80px; } .landscape { width: 100%; height: 100%; margin: 0% 0% 0% 0%; filter: progid:DXImageTransform.Microsoft.BasicImage(Rotation=1); } #nonPrintable{display:none;} .nonPrintable{display:none;} .pageBreakBefore {page-break-before:always;} .pageBreakAfter {page-break-after:always;} .pagebreakAvoid tr {page-break-inside: avoid;} .hideQuotationHeadingCls{ display:none; }'
					+ '</style>'
					+ '<link rel="stylesheet" href="css/print.css" rel="stylesheet" media="print" />'
					+ '</head><body>';
			myboiler += boilerPrint;
			myboiler += '</body></html>';
			var printWin = window
					.open('', '',
							'left=0,top=0,width=1,height=1,toolbar=0,scrollbars=2,status=0');
			printWin.document.write(myboiler);
			printWin.document.close();
			printWin.focus();
			printWin.print();
			printWin.close();
		});
}
function formatAmount(x) {
if (x != null && x != undefined && x != '') {
	x = x.toString();
	var afterPoint = '';
	if (x.indexOf('.') > 0)
		afterPoint = x.substring(x.indexOf('.'), x.length);
	x = Math.floor(x);
	x = x.toString();
	var lastThree = x.substring(x.length - 3);
	var otherNumbers = x.substring(0, x.length - 3);
	if (otherNumbers != '')
		lastThree = ',' + lastThree;
	var res = otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree
			+ afterPoint;

	return res;
} else {
	return "-";
}
}

function showInvoicePrintDialog(contextSrc) {
if (contextSrc == 'student') {
	// $('#divShowInvoiceFormHeader').dialog("destroy");
	$('#divShowInvoiceFormHeader').modal('show').css({
		width : '700px',
		// height: '700px',
		'margin-left' : function() {
			return -($(this).width() / 2);
		}
	});

} else
	$('#divShowInvoiceFormHeader').modal('show').css({
		width : '700px',
		// height: '700px',
		'margin-left' : function() {
			return -($(this).width() / 2);
		}
	});

}

/**
 * @since 25th May 2012
 * @author Vimal
 */
function closeInvoicePrintDialog() {
$('#divShowInvoiceFormHeader').modal('hide');
}

/**
 * @since 25th May 2012
 * @author Vimal
 * @purpose for generating the invoice
 */
function generateStudentInvoice(contextSrc, invoiceId) {

showInvoicePrintDialog();
getStudentSponsoredInvoiceForm_Next();
if (contextSrc == 'student') {
	getInvoiceDetailsById(invoiceId, function() {
		getStudentBillingDetails(function(jArray) {
			showStudentBillingDetails(jArray);
			if (jArray.length > 0) {
				var studentInvoiceId = jArray[0].studentInvoiceId;
				// showStudentRecieptPrintOption(studentInvoiceId,jArray);
			}
		});
	});
} else {
	getInvoiceDetailsByCategory(undefined, function() {
		getStudentBillingDetails(function(jArray) {
			showStudentBillingDetails(jArray);
			if (jArray.length > 0) {
				var studentInvoiceId = jArray[0].studentInvoiceId;
				// showStudentRecieptPrintOption(studentInvoiceId,jArray);
			}
		});
	});
}
// ----------------------------
// sisbcid = StudentInstituteSemesterBatchCourseID
/*
 * $.ajax({ url:'generateStudentInvoice?sisbcid='++'', dataType:'json',
 * success:function(){
 *  } });
 */
}

/**
 * @since 4th June 2012
 * @author Vimal
 * @purpose for generating the invoice
 */
function getStudentInvoiceByBarcode() {
var barcode = $('#txtInvoiceBarcodeNo').val().trim();
checkForInvoiceExistanceOfStudentByBarcode(
		barcode,
		function(jObject) {
			if (jObject.responseFlag == 1) {
				/** Invoice generated case */
				getStudentPersonalInfoByStudentId(
						jObject.studentId,
						function(studentObj) {
							gStudentInvoiceRelatedObject = studentObj;
							if (jObject.sponsorshipOnId == undefined) {
								proceedToStudentInvoiceGeneration(
										'OLD',
										'OPEN',
										undefined,
										undefined,
										function(invoiceObject) {
											responseAfterStudentInvoiceGeneration(invoiceObject);
										});
							} else {
								proceedToStudentInvoiceGeneration(
										'OLD',
										'SPONSORED',
										jObject.sponsoringBodyId,
										jObject.sponsorshipTypeName,
										function(invoiceObject) {
											responseAfterStudentInvoiceGeneration(invoiceObject);
										});
							}
							$('#divShowSponsorshipChoiceOption').modal('hide');
						});
			} else {
				jAlert(juno.labelByCustomer('l.isInvoceToFeesLabel')+' does not exist!!!');
			}
		});
}

/**
 * @since 25th May 2012
 * @author Vimal
 * @purpose for printing the invoice as pdf
 */
function printInvoiceAsPdf() {
	var customerIdentificationObj = $('#customerHelper').val();
	if(customerIdentificationObj != undefined && customerIdentificationObj =="MIT"){

		$('#PrintPrintPdfTmp').html($('#invoice-content').html());
		$('#PrintPrintPdfTmp').find('.hideDivForMIT').remove();

		var printWin = window.open('','','left=0,top=0,width=1,height=1,toolbar=0,scrollbars=2,status=0');
		printWin.document.write($('#PrintPrintPdfTmp').html());
		printWin.document.close();
		printWin.focus();
		printWin.print();
		printWin.close();
		setTimeout(function(){
			$('#PrintPrintPdfTmp').html('');
		},1000);
	}else{
		$('#invoice-content').jqprint();
	}
}


function printInvoiceAsPdfNew()
{	
	var studId=0;
	try {
		studId = getSelectedStudentId2();
	} catch (e) {

	}
	if (studId == undefined) {
		studId = gStudentInvoiceRelatedObject.studentId;
	}
	var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
	var financePolicyId =gStudentInvoiceRelatedObject.fasPolicyId!=undefined?gStudentInvoiceRelatedObject.fasPolicyId:0;
	var feeInvoiceId = getStudentInvoiceId();
	window.location.replace('feeInvoicePdfNew.json?feeInvoiceId='+feeInvoiceId+'&feeStructureId='+feeStructureId+'&financePolicyId='+financePolicyId+'&studId='+studId);
	
	//window.location.replace('feeStructurePDF.json?parentFeeItemId='+parentFeeItemId+'&feesYear='+feesYear+'&feeStructureId='+feeStructureId+'&batchId='+batchId);
	
}

/**
 * 
 * @returns {String}
 */
function getStudentPayableAmount() {
return gStudentTotalPayableAmount + '';
}

/**
 * 
 * @returns {String}
 */
function getStudentRemainingPayableAmount(studentId, feeStructureId, callback) {
$.ajax({
	url : 'getStudentRemainingPayableAmount.json',
	data : 'studentId=' + studentId + '&feeStructureId=' + feeStructureId,
	dataType : 'json',
	async : false,
	type : 'POST',
	success : function(jObject) {
		callback(jObject);
	}
});
}

/**
 * @param(amount)
 */
function setStudentPayableAmount(amount) {
gStudentTotalPayableAmount = amount;
}

/**
 * @param(amount)
 */
function setStudentRemainingPayableAmount(amount) {
gStudentRemainingPayableAmount = amount;
}

/**
 * @since 3rd june 2012
 * @returns {Json Object} containing student invoice header information
 */
function getStudentInvoiceHeader(studentInstituteCourseId, callback) {

// var categoryId = rowObj.categoryId;
// var studentName = getStudentName();
	var studentFeeInvoiceId = gStudentInvoiceRelatedObject.studentFeeInvoiceId!=undefined?gStudentInvoiceRelatedObject.studentFeeInvoiceId:0;
	
if (studentInstituteCourseId == undefined) {
	studentInstituteCourseId = getSelectedStudentBatchIdForFees();
	if (studentInstituteCourseId == undefined) {
		studentInstituteCourseId = gStudentInvoiceRelatedObject.studentInstituteCourseId;
	}
}

$.ajax({
	url : 'getInvoiceHeaderAjaxByStudentBatchId.json?studentBatchId='+ studentInstituteCourseId+'&studentFeeInvoiceId='+studentFeeInvoiceId,
	dataType : 'json',
	type : 'POST',
	async : false,
	success : function(invoiceHeaderJSON) {
		callback(invoiceHeaderJSON);
	},
	error : function() {

	}
});
}
/**
 * @since 29th May 2012
 * @purose this function generate the invoice for a student for particular fee
 *         head structure id and also get all details fee invoice details
 * @deprecated
 */
function getInvoiceDetailsByCategory(studentInstituteCourseId, callback) {
var studentCategoryId = '';
try {
	studentCategoryId = getSelectedStudentCategory();
} catch (e) {
}
var courseId = '';
try {
	courseId = getSelectedCourseId();
} catch (e) {
}
var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
var studentInstituteCourseId = '';
getStudentInvoiceHeader(
		studentInstituteCourseId,
		function(invoiceHeaderJSON) {
			$('#tdNameOfStudent').html(
					'<label>' + invoiceHeaderJSON.invoiceHeader[0].studentName
							+ '</label>');
			$('#tdAddress').html(
					'<label>'
							+ invoiceHeaderJSON.invoiceHeader[0].studentAddress
							+ '</label>');
			$('#tdReceiptDate').html(
					'<label>' + invoiceHeaderJSON.invoiceHeader[0].date
							+ '</label>');
			$('#tdAdmissionLetterRefNo').html('');
			$('#tdAdmissionDate').html(
					'<label>'
							+ invoiceHeaderJSON.invoiceHeader[0].admissionDate
							+ '</label>');
			$('#tdFeeReceiptNo').html('');
			studentInstituteCourseId = invoiceHeaderJSON.invoiceHeader[0].studentInstituteCourseId;
			var boiler = '<tr>'
					+ '<td style="text-align:center"><strong>Course Code</strong></td>'
					+ '<td style="text-align:center"><strong>Name of Courses</strong></td>'
					+ '<td style="text-align:center"><strong>Institute Name and Address</strong></td>'
					+ '<td style="text-align:center"><strong>Year</strong></td>'
					+ '</tr>'
					+ '<tr>'
					+ '<td>'
					+ (invoiceHeaderJSON.invoiceHeader[0].courseCode != undefined) ? invoiceHeaderJSON.invoiceHeader[0].courseCode
					: ""
							+ '</td>'
							+ '<td>'
							+ invoiceHeaderJSON.invoiceHeader[0].courseName
							+ '</td>'
							+ '<td>'
							+ invoiceHeaderJSON.invoiceHeader[0].instiName
							+ '<br/>'
							+ (invoiceHeaderJSON.invoiceHeader[0].instiAddress != undefined ? invoiceHeaderJSON.invoiceHeader[0].instiAddress
									: "") + '</td>' + '<td>'
							+ invoiceHeaderJSON.invoiceHeader[0].year + '</td>'
							+ '</tr>';
			$('#tblStudentInvoiceHeader').html(boiler);

			var revisionNo = getFeeStructureRevision();
			if (studentCategoryId != '0') { // if not selected
				$
						.ajax({
							url : 'getFeeInvoiceDetailsByCategory.json?studentCategoryId='
									+ studentCategoryId
									+ '&courseId='
									+ courseId
									+ '&feeItemId='
									+ feeItemId
									+ '&studentInstituteCourseId='
									+ studentInstituteCourseId
									+ '&invoiceRevisionNo=' + revisionNo,
							dataType : 'json',
							async : false,
							beforeSend : function() {
								$('.preview-large').addClass('loading-large');
							},
							complete : function() {
								$('.preview-large')
										.removeClass('loading-large');
							},
							success : function(jArray) {
								var flag = jArray[0]["members"]["responseFlag"]["value"];
								if (flag == '1') {
									$('#invoicePrintControl').show();
									/** Showing the print buttons */
									var invoiceNo = jArray[3];
									$('#tdFeeInvoiceNo').html(invoiceNo);
									// $('#tdFeeInvoiceBarcodeNo').html(invoiceNo);
									getBarcode(invoiceNo,
											'tdFeeInvoiceBarcodeNo');
									// getBarcode(invoiceNo,'tdFeeInvoiceBarcodeNo1');
									// generateBarcode(invoiceNo,'tdFeeInvoiceBarcodeNo');
									// generateBarcode(invoiceNo,'tdFeeInvoiceBarcodeNo1');
									var invoiceId = jArray[2]["studentFeeInvoiceId"];
									// ////////alert("Invoice: "+invoiceId);
									setStudentInvoiceId(invoiceId);
									var len = jArray[1].length;
									var totalPayableAmount = 0.0;
									var boiler = '';
									boiler = '<tr>'
											+ '<th style = "width:10px">S.No.</th>'
											+ '<th style = "width:300px;text-align:center">Particulars</th>'
											+ '<th style = "width:100px;text-align:center">Amount(in <span class="WebRupee">Rs.</span>)</th>'
											+ '<th style = "width:100px;text-align:center">'+($('#customerHelper').val()=="MGMU"?'Scholarship':'Sponsored')+' Amount</th>'
											+ '<th style = "width:100px;text-align:center">'+($('#customerHelper').val()=="MGMU"?'Scholarship':'Sponsoring')+' Body</th>'
											+ '<th style = "text-align:center">Student payable amount(in <span class="WebRupee">Rs.</span>)</th>'
											+ '</tr>';

									var f = 1;
									var cnt = 0;
									for ( var i = 0; i < len; i++) {

										var discount = parseFloat(jArray[1][i]["percentageDiscount"]);
										var revision = parseInt(jArray[2].feeItemObj.revisionNo);
										var sponsoringBodyName = jArray[1][i]["sponsoringBodyObj"] != undefined ? jArray[1][i]["sponsoringBodyObj"]["name"]
												: "";
										var bAmount = 0.0;
										switch (revision) {
										case 0:
											bAmount = parseFloat(jArray[1][i]["feeItemObj"]["unitPrice"]);
											break;
										case 1:
											bAmount = parseFloat(jArray[1][i]["feeItemObj"]["unitPriceRevision1"]);
											break;
										case 2:
											bAmount = parseFloat(jArray[1][i]["feeItemObj"]["unitPriceRevision2"]);
											break;
										case 3:
											bAmount = parseFloat(jArray[1][i]["feeItemObj"]["unitPriceRevision3"]);
											break;
										case 4:
											bAmount = parseFloat(jArray[1][i]["feeItemObj"]["unitPriceRevision4"]);
											break;
										case 5:
											bAmount = parseFloat(jArray[1][i]["feeItemObj"]["unitPriceRevision5"]);
											break;
										}

										if (isNaN(discount))
											discount = 0.0;
										if (isNaN(bAmount))
											bAmount = 0.0;
										var discountAmount = (bAmount * discount) / 100.0;
										/**
										 * @purpose: calculation of discount
										 *           amount after deducting the
										 *           discount amount from basic
										 *           amount
										 */
										var amountPayable = (bAmount - discountAmount)
												.toFixed(2);
										totalPayableAmount = parseFloat(totalPayableAmount)
												+ parseFloat(amountPayable);
										// //////////alert("totalPayableAmount:
										// "+totalPayableAmount);
										if (jArray[1][i]["feeItemObj"]["superFeeItemObj"]["orgFeeItemHeadObj"] != undefined) {
											if (f == 1) {
												boiler += '<tr>'
														+ '<td>'
														+ (++cnt)
														+ '</td>'
														+ '<td><strong>'
														+ jArray[1][i]["feeItemObj"]["superFeeItemObj"]["orgFeeItemHeadObj"]["feeItemHeadUniverseObj"]["name"]
														+ '</strong></td>'
														+ '<td></td>'
														+ '<td></td>'
														+ '<td></td>'
														+ '<td></td>' + '</tr>';
											}

											boiler += '<tr>'
													+ '<td></td>'
													+ '<td style="padding-left:30px">'
													+ jArray[1][i]["feeItemObj"]["orgFeeItemHeadObj"]["feeItemHeadUniverseObj"]["name"]
													+ '</td>'
													+ '<td style = "text-align:right">'
													+ bAmount
													+ '</td>'
													+ '<td style = "text-align:right">'
													+ discountAmount
													+ '('
													+ discount
													+ '%)</td>'
													+ '<td style = "text-align:center">'
													+ sponsoringBodyName
													+ '</td>'
													+ '<td style = "text-align:right">'
													+ amountPayable + '</td>'
													+ '</tr>';

											f = 0;

										} else {
											boiler += '<tr>'
													+ '<td>'
													+ (++cnt)
													+ '</td>'
													+ '<td><strong>'
													+ jArray[1][i]["feeItemObj"]["orgFeeItemHeadObj"]["feeItemHeadUniverseObj"]["name"]
													+ '</strong></td>'
													+ '<td style = "text-align:right">'
													+ bAmount
													+ '</td>'
													+ '<td style = "text-align:right">'
													+ discountAmount
													+ ' ('
													+ discount
													+ '%)</td>'
													+ '<td style = "text-align:right">'
													+ sponsoringBodyName
													+ '</td>'
													+ '<td style = "text-align:right">'
													+ amountPayable + '</td>'
													+ '</tr>';
											f = 1;
										}

									}
									boiler += '<tr>'
											+ '<td colspan = "5" style = "text-align:right"><strong>Grand Total<strong></td>'
											+ '<td style="width: 100px;text-align:right"><strong class="grandTotal">'
											+ commaFormatted(parseFloat(
													totalPayableAmount)
													.toFixed(2))
											+ '<strong></td>' + '</tr>';
									$('#tblStudentInvoiceDetails').html(boiler);
									setStudentPayableAmount(parseFloat(
											totalPayableAmount).toFixed(2));
									callback();
								} else {
									jAlert(
											jArray[0]["members"]["responseText"]["value"],
											10000);
								}
							},
							error : function() {

							}
						});
			}

		});

}

/**
 * @since 4th June 2012
 * @purose this function search the invoice for a student for particular fee
 *         head structure id and also get all details fee invoice details
 */
function getInvoiceDetailsByBarcode(barcode, callback) {

if (barcode == undefined)
	barcode = $('#txtInvoiceBarcodeNo').val();
if (barcode.trim() != '') {
	$
			.ajax({
				url : 'getInvoiceHeaderAjax.json?invoiceBarcode=' + barcode,
				dataType : 'json',
				type : 'POST',
				async : false,
				success : function(invoiceHeaderJSON) {
					// var len = invoiceHeaderJSON.length;
					// ////////alert("len: "+len);
					// if(len > 0){
					$('#divStudentListForInvoiceGeneration').hide();
					$('#divStudentInvoiceGeneration').show();
					getStudentSponsoredInvoiceForm_Next(function(boiler) {
						$('#divShowInvoiceForm').html(boiler);
					});
					// /studentCategoryId='+studentCategoryId+'&courseId='+courseId+'&feeItemId='+feeItemId+'&studentInstituteCourseId='+studentInstituteCourseId+'&invoiceRevisionNo='+revisionNo,
					// var studentCategoryId =
					// invoiceHeaderJSON[0].invoiceHeader[0].studentCategoryId;
					var courseId = getSelectedCourseId();
					var feeItemId = $('#txtFeeStructureDescription').data(
							'FeeItemId');
					var revisionNo = getFeeStructureRevision();
					$('#pTrustName').html($('p#trustName').text());
					$('#pInstituteName').html($('p#instiName').text());
					$('#pInstituteAddress').html($('p#instiAddress').text());
					$('#tdNameOfStudent').html(
							invoiceHeaderJSON.invoiceHeader[0].studentName);
					$('#tdAddress').html(
							invoiceHeaderJSON.invoiceHeader[0].studentAddress);
					$('#tdReceiptDate').html(
							invoiceHeaderJSON.invoiceHeader[0].date);
					$('#tdAdmissionLetterRefNo').html('');
					// alert(invoiceHeaderJSON.invoiceHeader[0].date);
					// var date = new Date(Date.parse());

					// var admissionDate = $.parseFormat('%d %m %y %h %m',date);
					$('#tdAdmissionDate').html(
							invoiceHeaderJSON.invoiceHeader[0].admissionDate);
					$('#tdFeeReceiptNo').html('');
					$('#tdStudentCategory').html(
							invoiceHeaderJSON.invoiceHeader[0].studentCategory);
					$('div#invoice-content')
							.find('div.studentProfileImage')
							.html(
									'<img src = "getStudentProfileImageById.json?id='
											+ invoiceHeaderJSON.invoiceHeader[0].studentId
											+ '&type=profile" height = "110px" width = "100px" alt = "No image" />');
					var studentInstituteCourseId = invoiceHeaderJSON.invoiceHeader[0].studentInstituteCourseId;
					var boiler = '<tr>'
							+ '<td style="text-align:center"><strong>Course Code</strong></td>'
							+ '<td style="text-align:center"><strong>Name of Courses</strong></td>'
							+ '<td style="text-align:center"><strong>Institute Name and Address</strong></td>'
							+ '<td style="text-align:center"><strong>Year</strong></td>'
							+ '</tr>';

					// alert('boiler: '+boiler);
					boiler += '<tr><td>'
							+ invoiceHeaderJSON.invoiceHeader[0].courseName
							+ '</td>'
							+ '<td>'
							+ invoiceHeaderJSON.invoiceHeader[0].courseName
							+ '</td>'
							+ '<td>'
							+ invoiceHeaderJSON.invoiceHeader[0].instiName
							+ '<br/>'
							+ (invoiceHeaderJSON.invoiceHeader[0].instiAddress != undefined ? invoiceHeaderJSON.invoiceHeader[0].instiAddress
									: "") + '</td>' + '<td>'
							+ invoiceHeaderJSON.invoiceHeader[0].year + '</td>'
							+ '</tr>';
					// alert('boiler: '+boiler);
					$('#tblStudentInvoiceHeader').html(boiler);

					var sponsorshipOnId = invoiceHeaderJSON.invoiceHeader[0].sponsorshipOnId;
					var admissionTypeId = invoiceHeaderJSON.invoiceHeader[0].admissionTypeId;
					var isUpgraded = invoiceHeaderJSON.invoiceHeader[0].isUpgraded;
					var url ='';
					if (isUpgraded != true && sponsorshipOnId != undefined) {
						url = 'getFeeInvoiceDetailsBySponsorshipOnId.json?studentCategoryId=&feeItemId='
								+ feeItemId
								+ '&studentInstituteCourseId='
								+ studentInstituteCourseId
								+ '&invoiceRevisionNo='
								+ revisionNo
								+ '&sponsorshipOnId=' + sponsorshipOnId;
					} else if (isUpgraded == true
							&& sponsorshipOnId == undefined) {
						url = 'getFeeInvoiceDetailsByAdmissionTypeId.json?studentCategoryId=&feeItemId='
								+ feeItemId
								+ '&studentInstituteCourseId='
								+ studentInstituteCourseId
								+ '&invoiceRevisionNo='
								+ revisionNo
								+ '&admissionTypeId=' + admissionTypeId;
					}else{
					
					url = 'getFeeInvoiceDetailsByAdmissionTypeId.json?studentCategoryId=&feeItemId='
							+ feeItemId
							+ '&studentInstituteCourseId='
							+ studentInstituteCourseId
							+ '&invoiceRevisionNo='
							+ revisionNo
							+ '&admissionTypeId='
							+ admissionTypeId;
				}
					$
							.ajax({
								url : url,
								dataType : 'json',
								async : false,
								beforeSend : function() {
									$('.preview-large').addClass(
											'loading-large');
								},
								complete : function() {
									$('.preview-large').removeClass(
											'loading-large');
								},
								success : function(jArray) {
									$('#btnStudentInvoiceCancel').data('FeeItemArray',jArray[1]);
									var flag = jArray[0]["responseFlag"];
									if (flag == '1') {
										if (isUpgraded != true
												&& sponsorshipOnId != undefined) {
											showSponsoredInvoiceDetails(
													jArray[2]["studentFeeInvoiceId"],
													jArray[1],
													jArray[3].studentInvoiceNo);
										} else if (isUpgraded == true
												&& sponsorshipOnId == undefined) {
											showInvoiceDetailsByAdmissionTypeId(
													jArray[2]["studentFeeInvoiceId"],
													jArray[1],
													jArray[3].studentInvoiceNo);
										} else {
											showOpenInvoiceDetails(
													jArray[2]["studentFeeInvoiceId"],
													jArray[1],
													jArray[3].studentInvoiceNo);
										}
										registerAndShowInvoiceCancellationButton(jArray[2]["studentFeeInvoiceId"]);
									} else {
										jAlert(jArray[0]["responseText"], 10000);
									}
									callback();
								}
							});
					/*
					 * } else { jAlert('Invoice id not found!'); }
					 */
				},
				error : function() {
					// jAlert("Invoice id not found!");
				}
			});
} else {
	jAlert('Please enter barcode!!!');
}
}

/**
 * 
 * @returns {String}
 */
function getStudentInvoiceId() {
var invoiceId = $('#tdFeeInvoiceNo').data('InvoiceId') != undefined ? $(
		'#tdFeeInvoiceNo').data('InvoiceId').toString() : 0;
            if(invoiceId=="0" || invoiceId==undefined){
			    invoiceId=gStudentInvoiceRelatedObject.studentFeeInvoiceId!=undefined?gStudentInvoiceRelatedObject.studentFeeInvoiceId:0;
	       }
return invoiceId.toString();
}

/**
 * @purpose set the invoice id to the data part on the element fee invoice id.
 *          This remains valid as long the invoice dialog will remain open
 * @param invoiceId
 */
function setStudentInvoiceId(invoiceId) {
$('#tdFeeInvoiceNo').data('InvoiceId', invoiceId);
}

/**
 * @author vimal
 * @since 3rd June 2012
 * @purpose it calculates total fee receivables from all student on the basis of
 *          their category, against a particular fee structure.
 */
function calculateTotalFeeRecievable() {
var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
var batchId = $('#txtFeeStructureDescription')
		.data('InstituteCourseStrengthId');
var courseId = getSelectedCourseId();
$.ajax({
	url : 'getTotalRecievablesByBatch.htm?courseId=' + courseId + '&batchId='
			+ batchId + '&feeItemId=' + feeItemId,
	success : function() {
		// jAlert('Successfully Updated!!!');
	},
	error : function() {
		// ////////alert(' Updation failed!!!');
	}
});

}

function getFeeStructureFreezeStatus() {

return gFeeStructureStatus + '';
}

function setFeeStructureFreezeStatus(freezeStatus) {

gFeeStructureStatus = freezeStatus;
}

function setFeeStructureRevision(revisionNo) {
gInvoiceRevisionNo = revisionNo;
}

function getFeeStructureRevision() {
return gInvoiceRevisionNo;
}

function disableRevisionButton() {
// //////////alert("In disabling button");
$('#btnGrid2EditFeeStructure').attr('disabled', 'disabled');
}
function enableRevisionButton() {
$('#btnGrid2EditFeeStructure').removeAttr('disabled');
}

/**
 * @author vimal
 * @since 3rd June
 * @purpose it updates the revision of the current fee structure on the click of
 *          the "edit in next revision" button on the fee structure tab
 */
function updateFeeStructureRevision() {
if (gInvoiceRevisionNo != 2) {
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	$.ajax({
		url : 'updateRevisionOfFeeItemStructure.json?feeItemId=' + feeItemId,
		dataType : 'json',
		// data:'',
		beforeSend : function() {

		},
		complete : function() {

		},
		success : function(jArray) {
			if (jArray[0].responseFlag == 1) {
				/*
				 * if(parseInt(jArray[1].revisionNo) == 0){
				 * setFeeItemGridTitle(undefined,"<div class='alert
				 * alert-info'>FEE ITEM LIST (<i>Interim</i>)</div>"); } else {
				 * setFeeItemGridTitle(undefined,"<div class='alert
				 * alert-info'>FEE ITEM LIST (<i>Revision -
				 * "+jArray[1].revisionNo+"</i>)</div>"); }
				 */
				jAlert('Success: Ready for editing in current revision',
						'Error');
				setFeeStructureFreezeStatus(jArray[1].freezeStatus);
				setFeeStructureRevision(jArray[1].revisionNo);
				$('#btnGrid2EditFeeStructure').attr('disabled', 'disabled');
			} else {
				jAlert('Failed');
				$('#btnGrid2EditFeeStructure').removeAttr('disabled');
			}
		}
	});
} else
	jAlert("You can not Edit more than 2 Revisions ", "Message");
}

/**
 * @since 2nd June 2012
 * @author Vimal
 */
function generateInvoiceCheckPoint() {
$
		.prompt(
				'This action will freeze the editing of current fee structure. Proceed?',
				{
					callback : freezeFeeStructure,
					buttons : {
						Proceed : true,
						Cancel : false
					}
				});
}

/**
 * @since 2nd June 2012
 * @author Vimal
 * @porpose It freezes the fee structure the moment an operator click on the
 *          "Generate Invoice" on the student invoice tab
 */
function freezeFeeStructure(flag) {
if (flag) {
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	$
			.ajax({
				url : 'freezeFeeStructureAndSendAnnouncement.json?feeItemId='
						+ feeItemId,
				dataType : 'json',
				data : '',
				beforeSend : function() {
					startCommonAjaxSpinner();
				},
				complete : function() {
					stopCommonAjaxSpinner();
				},
				success : function(jArray) {
					if (jArray[0].responseFlag == '1') {
						jAlert(jArray[0].responseText, "Message");
						setFeeStructureFreezeStatus('true');
						$('#btnGenerateStudentFeeInvoice').attr('disabled',
								'disabled');
						getStudentListByBatchWithInvoiceStatus();
					}
				}
			});
}
}

function setFeeItemGridTitle(gridId, text) {
if (gridId == undefined) {
	gridId = 'sg2';
}
$('.feeStructureHeading').text(text);
}
function getFeeItemGridTitle() {
// var text = jQuery('#sg2').jqGrid('getCaption');
return $('.feeStructureHeading').text();
;
}

/**
 * @author vimal
 * @since 2 Jun 2012
 * @purpose
 * @logic It checks whether student list should be fetched from the database on
 *        the click of the student invoice tab or not. It fetches the student
 *        list on the click of the studtnt invoice tab if the freeze status flag
 *        is false, and defer if the freeze status is true, because if need to
 *        be confirmed by clicking the generate invoice button
 */
function checkForStudentFeeInvoiceGeneration() {
var freezeStatus = getFeeStructureFreezeStatus();
if (freezeStatus == 'true') {
	disableStudentFeeInvoiceGenerateButton();
	if (gStudentFetchFlag == true) {
		// getStudentListByBatch();
		getStudentListByBatchWithInvoiceStatus();
		gStudentFetchFlag = false;
	}
} else {
	enableStudentFeeInvoiceGenerateButton();
}
}

function enableStudentFeeInvoiceGenerateButton() {
$('#btnGenerateStudentFeeInvoice').removeAttr('disabled');
}
function disableStudentFeeInvoiceGenerateButton() {
$('#btnGenerateStudentFeeInvoice').attr('disabled', 'disabled');
}

/**
 * @purpose It generates the student bill no against a invoice
 * @logic concatenating bill primary key with preceded by 5 zeros, preceded by
 *        current year and a constant "SR".
 * @param billId
 * @returns {String}
 */
function generateStudentInvoiceBillNo(billId) {
// ////////alert("Bill ID: "+billId);
var billNo = 100000 + parseInt(billId.toString());
billNo = billNo.toString().substring(1);

var date = new Date();
var year = date.getFullYear();
return "SR-" + year + "-" + billNo;
}

function setStudentPaidAmount(paidAmount) {
gStudentPaidAmount = paidAmount;
}
function getStudentPaidAmount() {
return gStudentPaidAmount;
}

function setDefaultStructureName() {
var courseCode = getCourseCode();
var academicYear = $('#cmbAcademicYear option:selected').text();
var batch = $('#lblFeesYear').data('FeesYear');
var feeConfigYear = $('#cmbYear').val();
if (courseCode == 'undefined' || courseCode == 'null') {
	courseCode = 'Course Name';
}
$('#txtFeeStructureDescription').val(
		courseCode + ' ' + academicYear + ' ' + batch + '(' + feeConfigYear
				+ ')');
}

/**
 * 
 * @returns studentInstituteBatchId from the studentFeeListGrid
 */
function getSelectedStudentBatchIdForFees() {
var ids = jQuery("#student-management-grid").jqGrid('getGridParam', 'selrow');
var tempObj = jQuery("#student-management-grid").jqGrid('getRowData', ids);
if (tempObj.hdnStudentBatchIdClnt != undefined)
	return tempObj.hdnStudentBatchIdClnt;
else {
	var ids = jQuery("#student-admitted-grid").jqGrid('getGridParam', 'selrow');
	var tempObj = jQuery("#student-admitted-grid").jqGrid('getRowData', ids);
	return tempObj.hdnStudentBatchIdClnt;
}
}

/**
 * @since 11 JUL 2012
 * @param invoiceNo
 *            Invoice no is the no of invoice against which fee structure has
 *            been generated.
 */
function cancelFees(invoiceNo) {
$.ajax({
	url : 'cancelFees?invoiceNo=' + invoiceNo,
	dataType : 'json',
	type : 'POST',
	success : function(jArray) {
		jAlert('' + jArray[0].members.responseText.value);
		setFeeStructureStatus('cancelled');

	},
	error : function() {

	}
});
}

/**
 * @since 11 Jul 2012
 * @functionality
 */
function lateFeeCalculations() {

}

function setTotalFlatPayableAmount(amount) {
gTotalFlatPayableAmount = amount;
}

function getTotalFlatPayableAmount() {
return gTotalFlatPayableAmount;
}

function responseAfterDocumentUpload(docId) {
try {
	var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
	$
			.ajax({
				url : 'attachFeeDocument.json',
				data : {
					docId : docId,
					resourceId : feeStructureId
				},
				dataType : 'json',
				type : 'POST',
				success : function(jObject) {
					var attachmentFileName = jObject["name"].toString();
					var documentId = jObject["documentPathId"];
					var eDocPathId = jObject.eDocPathId!=undefined?jObject.eDocPathId:documentId;//E-N-C

					var downloadLink = (juno.label['a.download.json'].setIndexedArgs(eDocPathId, "UPLOADED", encodeURIComponent(attachmentFileName), attachmentFileName));
					var downloadLinkUrl = (juno.label['url.download.json'].setIndexedArgs(eDocPathId, "UPLOADED", encodeURIComponent(attachmentFileName)));

					var fileType = jObject["extension"];
					iconPath = gFileTypeIconMapping[fileType];
					var trId = 'trAttachmentFile-' + documentId;
					attachementBoiler = '<tr id = "'
							+ trId
							+ '"><td width="70%"><img src="'
							+ iconPath
							+ '" />&nbsp;&nbsp;&nbsp;&nbsp;'+downloadLink+'</td>'
							+ '<th>'
							+ '<a class="btn btn-small pluggin-attachment-delete" id = "delete-'
							+ documentId
							+ '" href="javascript:void(0)" ><i class="icon-remove"></i>Delete</a>&nbsp;&nbsp;&nbsp;'
							+ '<a class="btn btn-small" id = "download-'
							+ documentId + '" href="'+downloadLinkUrl+'"><i class="icon-download-alt"></i>Dowload</a>'
							+ '</th></tr>';
					$('#feeDocumentAttachment').append(attachementBoiler);
					applyListenerOnAttachment();
				}
			});
} catch (e) {
	// //alert(e);
}
}

/**
 * for
 * 
 * @param jArray
 */
function populateFeeAttachment(jArray) {
var attachementBoiler = "";
for ( var i = 0; i < jArray.length; i++) {
	var attachmentFileName = jArray[i]["name"].toString();
	var documentId = jArray[i]["documentId"];
	var eDocId = jArray[i].eDocId!=undefined?jArray[i].eDocId:documentId;//E-N-C

	var downloadLink = (juno.label['a.download.json'].setIndexedArgs(eDocId, "UPLOADED", encodeURIComponent(attachmentFileName), attachmentFileName));
	var downloadLinkUrl = (juno.label['url.download.json'].setIndexedArgs(eDocId, "UPLOADED", encodeURIComponent(attachmentFileName)));
	// attachmentFileName =
	// attachmentFileName.substring(attachmentFileName.lastIndexOf('/')+1);
	// var fileName = attachmentFileName.replace(/ /g,'~').trim();
	var trId = 'trAttachmentFile-' + documentId;

	var fileType = jArray[i]["extension"];
	iconPath = gFileTypeIconMapping[fileType];
	attachementBoiler += '<tr id = "'
			+ trId
			+ '"><td width="70%"><img src="'
			+ iconPath
			+ '" />&nbsp;&nbsp;&nbsp;&nbsp;'+downloadLink+'</td>'
			+ '<th>'
			+ '<a class="btn btn-small pluggin-attachment-delete" id = "delete-'
			+ documentId
			+ '" href="javascript:void(0)" ><i class="icon-remove"></i>Delete</a>&nbsp;&nbsp;&nbsp;'
			+ '<a class="btn btn-small" id = "download-' + documentId
			+ '" href="'+downloadLinkUrl+'"><i class="icon-download-alt"></i>Dowload</a>' + '</th></tr>';

	// alert(attachementBoiler);
}
$('#feeDocumentAttachment').html(attachementBoiler);
// alert('Hi');
applyListenerOnAttachment();
}

function getFeeAttachments(feeStructureId, callback) {
try {
	$.ajax({
		url : 'getFeeStructureAttachment.htm',
		dataType : 'json',
		data : 'feeStructureId=' + feeStructureId,
		beforeSend : function() {
			$('.preview-large').addClass('loading-large');
		},
		complete : function() {
			$('.preview-large').removeClass('loading-large');
		},
		success : function(jArray) {
			callback(jArray);
		}
	});
} catch (e) {
}
}

function applyListenerOnAttachment() {
// alert('HI');
$('.pluggin-attachment-delete').click(function(e) {
	var docId = $(this).attr('id').split('-')[1];
	// alert(docId);
	removeUploadedDocumentById(docId, function(jObject) {
		if (jObject.responseFlag == '1') {
			$('.pluggin-attachment-delete').closest('tr').remove();
		} else {
			jAlert('Deletion failed');
		}

	});
});
}

/**
 * @
 */

function checkStudentFeesPayment() {
$('#btnGenerateBill').val('Wait...');
$('#btnGenerateBill').attr('disabled', 'disabled');
var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
checkForPriorityConfig(
		feeStructureId,
		function(jObject) {
			if (jObject.responseFlag == 1) {
				// var feeStructureId =
				// $('#txtFeeStructureDescription').data('FeeItemId');
				// var feeStructureId =
				// $('#txtFeeStructureDescription').data('FeeItemId');
				getStudentBillingDetails(function(jArray) {
					if (jArray.length > 0) {
						var paidAmount = getStudentPaidAmount();
						var payableAmount = getStudentPayableAmount();
						// alert(paidAmount + ', '+payableAmount);
						// if(paidAmount >= payableAmount){
						// jAlert('Payment is clear');
						// } else {
						/*
						 * getNthInstallment(jArray.length +
						 * 1,feeStructureId,function(jObject){
						 * if(jObject.responseFlag == undefined){//Configured
						 * installment showAddBillForm(jObject); var
						 * prevInstallmentNo = jObject.installmentNo; var
						 * nextInstallmentNo = parseInt(prevInstallmentNo) + 1;
						 * $('#nextPaymentDateRow').show();
						 * applyDatePickerOnInstallmentFeesPayment('txtNextPaymentDate',prevInstallmentNo,nextInstallmentNo); }
						 * else {
						 */
						// showFeesPaymentOption();
						showDownPaymentForm();
						// }
						// });
						// }
					} else {
						// showFeesPaymentOption();//Downpayment/Installment
						showDownPaymentForm();
					}
					$('#btnGenerateBill').val('Generate receipt');
					$('#btnGenerateBill').removeAttr('disabled');
					$('#txtBillPaymentAmount').focus(function() {
						$(this).select();
					});
					// getBankListAjax();
				});
			} else {
				var role = $('#hdnUserRole').val();
				// if(role == 'admissionadmin'){
				jAlert(jObject.responseText
						+ ' <a onclick="showFeePrioritySavingDialog()" class="pointer">Click here</a> to prioritize Fees Heads');
				/*
				 * } else if(role == 'headadmin'){ jAlert(jObject.responseText+'
				 * <a onclick="ihe_manageFeeItemPriority.htm">Click here</a>'); }
				 * else if(role == 'empadmin'){ jAlert(jObject.responseText+' <a
				 * onclick="fac_manageFeeItemPriority.htm">Click here</a>'); }
				 * else if(role == 'registraruser'){
				 * jAlert(jObject.responseText+' <a
				 * onclick="reg_manageFeeItemPriority.htm">Click here</a>'); }
				 * else if(role == 'financeadmin'){
				 * jAlert(jObject.responseText+' <a
				 * href="fas_manageFeeItemPriority.htm">Click here</a>'); }
				 */
				$('#btnGenerateBill').val('Generate receipt');
				$('#btnGenerateBill').removeAttr('disabled');
			}
		});
}

function showFeesPaymentOption() {
var boiler = '<table class = "table table-bordered" ><tr>'
		+ '<td>'
		+ '<input type = "radio" name = "radPaymentOption" id = "radPaymentOptionFull" onclick = "showDownPaymentForm()">&nbsp;&nbsp;<strong>Full payment</strong>'
		+

		'</td>'
		+ '<td>'
		+ '<input type = "radio" name = "radPaymentOption" id = "radPaymentOptionInstallment" onclick = "showInstallmentForm()" value="">&nbsp;&nbsp;<strong>In Installment</strong>'
		+ '</td>' + '</tr></table>';
$('#paymentOptionRadio').html(boiler);
}

function showFeesPaymentForm(paymentOption) {

showInstallmentForm();
}

function showInstallmentForm() {
// alert('Hi');
var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
getNthInstallment(
		1,
		feeStructureId,
		function(intallemntjObject) {
			if (intallemntjObject.responseFlag != "0") {
				checkLateFine(
						intallemntjObject.installmentNo,
						function(fineObject) {
							// alert('fineObject.responseFlag
							// '+fineObject.responseFlag);
							if (fineObject.responseFlag == undefined) {
								var totalPayableAmount = getStudentPayableAmount();
								var fineAmount = 0.0;
								var flatFine = fineObject.flatRate;
								var percentageFine = fineObject.percentage;
								percentageFine = parseFloat(percentageFine);
								// alert(flatFine+' flatFine'+percentageFine+'
								// percentageFine');
								if (flatFine != undefined && flatFine != '') {
									fineAmount = flatFine;
								} else if (percentageFine != undefined
										&& percentageFine != '') {
									var installmentPercent = intallemntjObject.amountInPercent;
									installmentPercent = parseFloat(installmentPercent);
									var currentPayableAmount = (totalPayableAmount * installmentPercent) / 100.0;
									fineAmount = (currentPayableAmount * percentageFine) / 100.0;
									// alert("Fine amount: "+fineAmount);
								}
								// alert(fineAmount);
								showAddBillForm(intallemntjObject, fineAmount);
							} else {
								showAddBillForm(intallemntjObject);
							}
							var prevInstallmentNo = intallemntjObject.installmentNo;
							var nextInstallmentNo = parseInt(prevInstallmentNo) + 1;
							$('#nextPaymentDateRow').show();
							applyDatePickerOnInstallmentFeesPayment(
									'txtNextPaymentDate', prevInstallmentNo,
									nextInstallmentNo);
						});
			} else {

				var role = $('#hdnUserRole').val();
				if (role == 'admissionadmin') {
					jAlert('No installment configured!!! To configure installment <a href="adm_manageFees.htm?src=instlmnt">click here</a>');
				} else if (role == 'headadmin') {
					jAlert('No installment configured!!! To configure installment <a href="ihe_manageFees.htm?src=instlmnt">click here</a>');
				} else if (role == 'empadmin') {
					jAlert('No installment configured!!! To configure installment <a href="fac_manageFees.htm?src=instlmnt">click here</a>');
				} else if (role == 'registraruser') {
					jAlert('No installment configured!!! To configure installment <a href="reg_manageFees.htm?src=instlmnt">click here</a>');
				}

				$('#radPaymentOptionInstallment').removeAttr('checked');
			}
		});
}

function showDownPaymentForm() {
showAddBillForm(undefined, 'INVOICE');
$('#nextPaymentDateRow').show();
// var payableAmount = getStudentPayableAmount();
paymentAmount = parseFloat(gStudentRemainingPayableAmount).toFixed(2);
$('#txtBillPaymentAmount').val(paymentAmount);
}

function applyDatePickerOnInstallmentFeesPayment(elementId, prevInstallmentNo,
	nextInstallmentNo) {
var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
$.ajax({
	url : 'getMaxMinDateforIntallement.json',
	dataType : 'json',
	data : 'feeStructureId=' + feeStructureId + '&prevInstallmentNo='
			+ prevInstallmentNo + '&nextInstallmentNo=' + nextInstallmentNo,
	success : function(jObject) {
		$('#' + elementId).datepicker({
			minDate : new Date(Date.parse(jObject.minDate)),
			maxDate : new Date(Date.parse(jObject.maxDate)),
			changeMonth : true,
			changeYear : true,
			showButtonPanel : true,
			dateFormat : 'dd MM yy',
			yearRange : "-10:+10",
		});
	},
	error : function() {

	}
});

}

function checkLateFine(installmentNo, callback) {
var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
$.ajax({
	url : 'checkLateFine.json',
	data : {
		installmentNo : installmentNo,
		feeStructureId : feeStructureId
	},
	dataType : 'json',
	success : function(jObject) {
		try {
			callback(jObject);
		} catch (e) {

		}
	},
	error : function() {

	}
});
}

function getCourseFeesStructureYearWise() {
var instituteCourseId = getSelectedInstituteCourseId();
var fromYear = parseInt($('#cmbYear').val());
try {
	$.ajax({
		url : 'getCourseFeesStructureYearWise.json',
		dataType : 'json',
		data : 'instituteCourseId=' + instituteCourseId + '&year=' + fromYear,
		success : function(jArray) {
			var boiler = '<option value = "0">Select</option>';
			/***/
			feeStructureDataArray = new Array();
			for ( var i = 0; i < jArray.length; i++) {
				boiler += '<option value = "' + jArray[i]["feeItemId"] + '">'
						+ jArray[i]["description"] + '</option>';
				var arrayIndexKey = jArray[i]["feeItemId"];
				feeStructureDataArray[arrayIndexKey] = jArray[i];
			}
			$('#cmbFeeSructure').html(boiler);
		}

	});

} catch (e) {

}
}

/**
 * to set the fee structure data to the element data on select of the fee
 * structure
 * 
 * @param jObject
 */
function setFeeStructureData(jObject) {
$('#txtFeeStructureDescription').data('feeStructureObject', jObject);
$('#txtFeeStructureDescription').data('FeeItemId', jObject["feeItemId"]);
$('#txtFeeStructureDescription').data('InstituteCourseStrengthId',
		jObject["instituteCourseStrengthId"]);
$('#txtFeeStructureDescription').data('FreezeStatus', jObject["freezeStatus"]);
$('#txtFeeStructureDescription').data('Revision', jObject["revisionNo"]);
$('#txtFeeStructureDescription').data('instituteCourseId',
		jObject["instituteCourseId"]);
setFeeStructureRevision(jObject["revisionNo"]);
if (jObject["freezeStatus"].toString() == 'false') {
	disableRevisionButton();
} else {
	enableRevisionButton();
}
}

/**
 * @since 23 Apr 13
 */

function getStudentListByBatchWithInvoiceStatus(feeStructureId, batchId,
	callback) {
if (batchId == undefined) {
	batchId = $('#txtFeeStructureDescription')
			.data('InstituteCourseStrengthId');
}
if (feeStructureId == undefined) {
	feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
}
if (batchId != null && batchId != undefined) {
	/*$.ajax({
		url : 'getStudentListByBatchWithInvoiceStatus.json',
		data : {
			instituteCourseStrength : batchId,
			feeStructureId : feeStructureId,
		},
		dataType : 'json',
		beforeSend : function() {
			$('#student-management-toolbar').html(
					'<div class="preview-large"></div>');
			$('#student-management-toolbar').find('.preview-large').addClass(
					'loading-large');
			 startCommonAjaxSpinner(); 
		},
		complete : function() {
			 stopCommonAjaxSpinner(); 
		},
		success : function(jArray) {
			gStudentListJsonArray = jArray;
			// try{
			showStudentListInGrid(jArray, feeStructureId);
			// } catch(e){}
			try {
				freezeFeeStructure();
			} catch (e) {
			}
			try {
				callback(jArray);
			} catch (e) {
			}
		},
		error : function() {
			// ////////alert("In student data grid error");
		}
	});*/
	
	
	
	$.ajax({
		url:'getStudentListByBatchWithInvoiceStatus.json',
		data : {
			instituteCourseStrength : batchId,
			feeStructureId : feeStructureId,
		},
		dataType:'json',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();

		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray)
		{
			gStudentListJsonArray = jArray;
			showStudentListInGrid(jArray, feeStructureId);
			try {
				freezeFeeStructure();
			} catch (e) {
			}
			try {
				callback(jArray);
			} catch (e) {
			}
		},
		error:function(){
			getCustomAlertMessage("alert_error");
		}
	});
	
	
}
}

/**
 * *********************************************************
 */
function getFeeStructureObjectByStarYearAndStrengthId(instituteStrenghId,
	callback) {
$.ajax({
	url : 'getLatestFeeStructureDescription.json?instituteStrenghId='
			+ instituteStrenghId,
	dataType : 'json',
	beforeSend : function() {
		startCommonAjaxSpinner();
	},
	complete : function() {
		stopCommonAjaxSpinner();
	},
	async : false,
	success : function(jObject) {
		var flag = jObject["responseFlag"];
		// jQuery("#sg2").jqGrid('clearGridData');
		// jQuery("#sg2").GridUnload('sg2');
		if (flag == 1) {
			callback(jObject);
		} else {
			jAlert('Fee structure does not exist for the selected batch');
		}
	},
	error : function() {

	}
});
}

function getFeeStructureDescriptionForAdmission(instituteStrenghId, callback) {

	var isApplicantAdmissionSeatAllocation = $('#isApplicantAdmissionSeatAllocation').val()!=undefined?$('#isApplicantAdmissionSeatAllocation').val():false;
	if(isApplicantAdmissionSeatAllocation==true || isApplicantAdmissionSeatAllocation=='true'){
		return;
	}
	
$.ajax({
	url : 'getFeeStructureDescriptionForAdmission.json?instituteStrenghId='
			+ instituteStrenghId,
	dataType : 'json',
	beforeSend : function() {
		startCommonAjaxSpinner();
	},
	complete : function() {
		stopCommonAjaxSpinner();
	},
	async : false,
	success : function(jObject) {
		var flag = jObject["responseFlag"];
		// jQuery("#sg2").jqGrid('clearGridData');
		// jQuery("#sg2").GridUnload('sg2');
		if (flag == 1) {
			callback(jObject);
		} else {
			jAlert('Fee structure does not exist for the selected batch');
		}
	},
	error : function() {

	}
});
}

/**
 * @since 4th Jul 2012
 * @purose this function shows the invoice on the basis of studentFeeInvoice Id
 *         for the students.
 */
var array=new Array(); 
function getInvoiceDetailsById(studentFeeInvoiceId, callback) {

$
		.ajax({
			url : 'getInvoiceHeaderAjaxById.json?studentFeeInvoiceId='
					+ studentFeeInvoiceId,
			dataType : 'json',
			type : 'POST',
			beforeSend : function() {
				$('#divShowInvoiceForm').html(
						'<div class = "preview-large"></div>');
				$('#divShowInvoiceForm').find('.preview-large').addClass(
						'loading-large');
			},
			complete : function() {
				$('#divShowInvoiceForm').find('.preview-large').removeClass(
						'loading-large');
			},
			success : function(invoiceHeaderJSON) {
				// var len = invoiceHeaderJSON.length;
				// ////////alert("len: "+len);
				// if(len > 0){
				$('#divStudentListForInvoiceGeneration').hide();
				$('#divStudentInvoiceGeneration').show();
				getStudentSponsoredInvoiceForm_Next(function(boiler) {
					$('#divShowInvoiceForm').html(boiler);
				});
				// var courseId = getSelectedCourseId();
				var feeItemId = invoiceHeaderJSON.invoiceHeader[0].feeStructureId;
				var revisionNo = invoiceHeaderJSON.invoiceHeader[0].feeRevisionNo;
				$('#pTrustName').html($('p#trustName').text());
				$('#pInstituteName').html($('p#instiName').text());
				$('#pInstituteAddress').html($('p#instiAddress').text());
				$('#tdNameOfStudent').html(
						invoiceHeaderJSON.invoiceHeader[0].studentName);
				$('#tdAddress').html(
						invoiceHeaderJSON.invoiceHeader[0].studentAddress);
				$('#tdReceiptDate').html(
						invoiceHeaderJSON.invoiceHeader[0].date);
				$('#tdAdmissionLetterRefNo').html('');
				// alert(invoiceHeaderJSON.invoiceHeader[0].date);
				// var date = new Date(Date.parse());

				// var admissionDate = $.parseFormat('%d %m %y %h %m',date);
				$('#tdAdmissionDate').html(
						invoiceHeaderJSON.invoiceHeader[0].admissionDate);
				$('#tdFeeReceiptNo').html('');
				$('#tdStudentCategory').html(
						invoiceHeaderJSON.invoiceHeader[0].studentCategory);
				$('div#invoice-content')
						.find('div.studentProfileImage')
						.html(
								'<img src = "getStudentProfileImageById.json?id='
										+ invoiceHeaderJSON.invoiceHeader[0].studentId
										+ '&type=profile" height = "110px" width = "100px" alt = "No image" />');
				var studentInstituteCourseId = invoiceHeaderJSON.invoiceHeader[0].studentInstituteCourseId;
				var boiler = '<tr>'
						+ '<td style="text-align:center"><strong>Course Code</strong></td>'
						+ '<td style="text-align:center"><strong>Name of Courses</strong></td>'
						+ '<td style="text-align:center"><strong>Institute Name and Address</strong></td>'
						+ '<td style="text-align:center"><strong>Year</strong></td>'
						+ '<th>Academic Batch</th>' + '</tr>';

				// alert('boiler: '+boiler);
				boiler += '<tr><td>'
						+ invoiceHeaderJSON.invoiceHeader[0].courseName
						+ '</td>'
						+ '<td>'
						+ invoiceHeaderJSON.invoiceHeader[0].courseName
						+ '</td>'
						+ '<td>'
						+ invoiceHeaderJSON.invoiceHeader[0].instiName
						+ '<br/>'
						+ (invoiceHeaderJSON.invoiceHeader[0].instiAddress != undefined ? invoiceHeaderJSON.invoiceHeader[0].instiAddress
								: "") + '</td>' + '<td>'
						+ invoiceHeaderJSON.invoiceHeader[0].year + '</td>'
						+ '</tr>';
				// alert('boiler: '+boiler);
				$('#tblStudentInvoiceHeader').html(boiler);

				var sponsorshipOnId = invoiceHeaderJSON.invoiceHeader[0].sponsorshipOnId;
				var admissionTypeId = invoiceHeaderJSON.invoiceHeader[0].admissionTypeId;
				var isUpgraded = invoiceHeaderJSON.invoiceHeader[0].isUpgraded;
				var url ='';
				if (isUpgraded != true && sponsorshipOnId != undefined
						&& admissionTypeId != undefined) {
					url = 'getFeeInvoiceDetailsBySponsorshipOnId.json?studentCategoryId=&feeItemId='
							+ feeItemId
							+ '&studentInstituteCourseId='
							+ studentInstituteCourseId
							+ '&invoiceRevisionNo='
							+ revisionNo
							+ '&sponsorshipOnId='
							+ sponsorshipOnId
							+ '&admissionTypeId='
							+ admissionTypeId;
				} else if (isUpgraded == true && sponsorshipOnId == undefined) {
					url = 'getFeeInvoiceDetailsByAdmissionTypeId.json?studentCategoryId=&feeItemId='
							+ feeItemId
							+ '&studentInstituteCourseId='
							+ studentInstituteCourseId
							+ '&invoiceRevisionNo='
							+ revisionNo
							+ '&admissionTypeId='
							+ admissionTypeId;
				}
				else{
					
					url = 'getFeeInvoiceDetailsByAdmissionTypeId.json?studentCategoryId=&feeItemId='
							+ feeItemId
							+ '&studentInstituteCourseId='
							+ studentInstituteCourseId
							+ '&invoiceRevisionNo='
							+ revisionNo
							+ '&admissionTypeId='
							+ admissionTypeId;
				}
				$
						.ajax({
							url : url,
							dataType : 'json',
							async : false,
							beforeSend : function() {
								$('.preview-large').addClass('loading-large');
							},
							complete : function() {
								$('.preview-large')
										.removeClass('loading-large');
							},
							success : function(jArray) {
								var flag = jArray[0]["responseFlag"];
								array=jArray[1];
								if (flag == '1') {
									if (isUpgraded != true
											&& sponsorshipOnId != undefined) {
										showSponsoredInvoiceDetails(
												jArray[2]["studentFeeInvoiceId"],
												jArray[1],
												jArray[3].studentInvoiceNo);
									} else if (isUpgraded == true
											&& sponsorshipOnId == undefined) {
										showInvoiceDetailsByAdmissionTypeId(
												jArray[2]["studentFeeInvoiceId"],
												jArray[1],
												jArray[3].studentInvoiceNo);
									} else {
										showOpenInvoiceDetails(
												jArray[2]["studentFeeInvoiceId"],
												jArray[1],
												jArray[3].studentInvoiceNo);
									}
									registerAndShowInvoiceCancellationButton(jArray[2]["studentFeeInvoiceId"]);
								} else {
									jAlert(jArray[0]["responseText"], 10000);
								}
								callback();
							}
						});
			},
			error : function() {
				// jAlert("Invoice id not found!");
			}
		});
}

/*******************************************************************************
 * Name: Vimal Kr Date:June 3,2013
 */

function getBankListAjax(cmbId) {
// alert('hi');
$.ajax({
	url : 'getBankListAjax.json',
	dataType : 'json',
	type : 'GET',
	async : false,
	success : function(jArray) {
		var len = jArray.length;
		gBankArray = new Array;
		var boiler = '<option value = "0">Select</option>';
		for ( var i = 0; i < len; i++) {
			boiler += '<option value = "' + jArray[i]["bankName"] + '">'
					+ jArray[i]["bankName"] + '</option>';
			var obj = {
				name : jArray[i]["bankName"],
			};
			gBankArray.push(obj);
		}

		// boiler +='<option value ="addNew">-Add New-</option>';
		if (cmbId == undefined)
			$('.bankName').html(boiler);
		else
			$('#' + cmbId).html(boiler);
		// $('.bankName').html(boiler);

		$('#' + cmbId).typeaheadNew({
			source : substringMatcher(gBankArray),
			property : "name"
		});
	},
	error : function() {
	}
});
}
$(function() {
$('#cbBillBankList').change(function() {

	if ($('#cbBillBankList').val() == 'addNew')
		$('#bankDetailsModal').modal('show');
});

});

function addNewBankDetails() {
var bankName = $('#bankName').val();
$.ajax({
	url : 'addNewBankDetails.json',
	dataType : 'text',
	type : 'POST',
	data : {
		bankName : bankName
	},
	async : false,
	success : function(text) {
		if (text == 'Success')
			getBankListAjax();

		$('#bankDetailsModal').modal('hide');
	},
	error : function() {
	}
});
}

function bankAliesForInvoice() {
var instiCourseId = $('#cbInstiCourseId option:selected').val().split("-")[0];
$.ajax({
	url : 'BankAliesForInvoice.json',
	dataType : 'json',
	type : 'POST',
	data : {
		instiCourseId : instiCourseId
	},
	async : false,
	success : function(jArray) {
		var len = jArray.length;
		var boiler = '<option value = "0">Select</option>';
		if (len > 0) {
			for ( var i = 0; i < len; i++)
				boiler += '<option value = "' + jArray[i]["bankAlias"] + '">'
						+ jArray[i]["bankName"] + '</option>';
			$('#bankAliesCmb').html(boiler);
		} else {
			// $('select#bankAliesCmb').parent('td').html('<input type="hidden"
			// id = "bankAliesCmb"
			// value="'+jArray[i]["bankAlias"]+'">&nbsp;'+jArray[i]["bankName"]+'');
		}
	},
	error : function() {
	}
});
}

function checkForPriorityConfig(feeStructureId, callback) {
var instituteCourseId = '0';
if ($('#cbInstiCourseId').val() != undefined) {
	instituteCourseId = $('#cbInstiCourseId option:selected').val().split('-')[0];
} 
if(instituteCourseId == undefined){
	instituteCourseId = gStudentInvoiceRelatedObject.instituteCourseId;
}
if(instituteCourseId == 0 || instituteCourseId == undefined){
	instituteCourseId=instid;
}
$.ajax({
	url : 'checkForPriorityConfig.json?instituteCourseId=' + instituteCourseId,
	data : 'instituteCourseId=' + instituteCourseId + '&feeStructureId='
			+ feeStructureId,
	type : 'POST',
	dataType : 'json',
	success : function(jObject) {
		callback(jObject);
	},
	error : function() {
		jAlert('Server error: Please refresh the page and try again!!!');
	}
});
}

function deleteStudentBillDetail(studentBillId)
{
		$('#commonDialog').modal('show');
		//$('#commonDialogHeader').html('Transaction Reference:'+TUR);
		var Boiler='<table class="table table-bordered table-condensed" id="accDisable">'+
		'<td>'+
		'<label><b>Enter Reason:</b></label>'+
		'</td>'+
		'<td>'+
		'<textarea rows="5" id="reasons" style="width: 435px; height: 88px;"></textarea>'+
		'</td>'+
		'</tr>'+
		'<tr><td colspan="2" style="text-align:center"><input type="button" class="btn btn-mini btn-inverse" value="Save" onclick="deleteStudentBillDetails(\''+studentBillId+'\')"></td></tr>'+
		'</table>';
		
		$('#commonDialogBody').html(Boiler);
}


function deleteStudentBillDetails(studentBillId) {
	var reason=$('#reasons').val();
	if(reason==''){
		jAlert('Please Enter Reason for delete this Receipt ');
		return false;
	}
	jConfirm('Do you  want to delete this Receipt?','Confirmation',function(flag){
		if (flag) {
			$('#commonDialog').modal('hide');
			$.ajax({
				url : 'deleteStudentBill.json?studentBillId='+ studentBillId,
				data:{reason:reason},
				dataType : 'json',
				type : 'POST',
				beforeSend : function() {
					startCommonAjaxSpinner();
				},
				complete : function() {
					stopCommonAjaxSpinner();
				},
				success : function(jObject) {
					jAlert(jObject.msg);
					getStudentBillingDetails(function(jArray) {
						showStudentBillingDetails(jArray);
						if (jArray.length > 0) {
							var studentInvoiceId = jArray[0].studentInvoiceId;
							// showStudentRecieptPrintOption(studentInvoiceId,jArray);
						}
						setInvoiceGenerationStatus('GENERATED',jObject.studentInvoiceObject,jObject.studentId);
					});
				},
				error : function() {
					jAlert('Server error!!! Please refresh your page and try again.');
				}
			});
		}
	});
}

function showEditStudentBillDialog(studentBillId) {
$('#divStudentFeeEditDialog').modal('show');
getStudentBillingInformationByStudentBillId(studentBillId, function(jObject) {
	$(function() {
		$('#cbBillBankListEdit').change(function() {
			if ($('#cbBillBankListEdit').val() == 'addNew')
				$('#bankDetailsModal').modal('show');
		});
	});
	boiler = '<option value = "0">Select</option>'
			+ '<option value = "Cash" selected="selected">Cash</option>'
			+ '<option value = "DemandDraft">Demand Draft</option>'
			+ '<option value = "Cheque">Cheque</option>'
			+ '<option value = "NEFT">NEFT</option>'
			+ '<option value = "RTGS">RTGS</option>'
			+ '<option value = "BankChallan">Bank Challan</option>';
	$('#cbBillPayamentModeEdit').html(boiler);

	getBankListAjax('cbBillBankListEdit');
	/**
	 * Apply datepicker on admission date of the student text book
	 */
	$('#txtNextPaymentDateEdit').datepicker({
		changeMonth : true,
		changeYear : true,
		showButtonPanel : true,
		dateFormat : 'dd MM yy',
		yearRange : "-10:+10",
	});

	var paymentMode = jObject.modeOfPayment;
	if (paymentMode == 'DemandDraft') {
		renderDDDetailEntryFormEdit();
		$('#tdPaymentDetailsEntrySectionEdit').show();
		$('#cbBillBankListEdit').removeAttr('disabled');
		$('#cbBillBankBranchEdit').removeAttr('disabled');
	} else if (paymentMode == 'Cheque') {
		renderChequeDetailEntryForm();
		$('#tdPaymentDetailsEntrySectionEdit').show();
		$('#cbBillBankListEdit').removeAttr('disabled');
		$('#cbBillBankBranchEdit').removeAttr('disabled');
	} else if (paymentMode == 'NEFT') {
		renderChequeDetailEntryForm();
		$('#tdPaymentDetailsEntrySectionEdit').show();
		$('#cbBillBankListEdit').removeAttr('disabled');
		$('#cbBillBankBranchEdit').removeAttr('disabled');
	} else if (paymentMode == 'RTGS') {
		renderChequeDetailEntryForm();
		$('#tdPaymentDetailsEntrySectionEdit').show();
		$('#cbBillBankListEdit').removeAttr('disabled');
		$('#cbBillBankBranchEdit').removeAttr('disabled');
	} else if (paymentMode == 'Cash') {
		$('#tdPaymentDetailsEntrySectionEdit').hide();
		$('#cbBillBankListEdit').attr('disabled', 'disabled');
		$('#cbBillBankBranchEdit').attr('disabled', 'disabled');
	} else {
		$('#tdPaymentDetailsEntrySectionEdit').hide();
		$('#cbBillBankListEdit').attr('disabled', 'disabled');
		$('#cbBillBankBranchEdit').attr('disabled', 'disabled');
	}

	showStudentBillEditFormation(jObject);

	$('#btnEditBilling').unbind();
	$('#btnEditBilling').bind('click', function() {
		editStudentBillDetail(studentBillId);
	});
});
}

function showStudentBillEditFormation(jObject) {
$('#cbBillPayamentModeEdit').val(jObject.modeOfPayment);
$('#cbBillBankListEdit').val(jObject.bankName);
$('#cbBillBankBranchEdit').val(jObject.bankBranch);
$('#txtNextPaymentDateEdit').val(jObject.nextPaymentDate);
var paymentMode = jObject.modeOfPayment;
if (paymentMode == 'DemandDraft') {
	$('#tdDemandDraftNoEdit').val(jObject.chequeDDNo);
	$('#tdDemandDateEdit').val(jObject.chequeDDDate);
} else if (paymentMode == 'Cheque') {
	$('#tdChequeNoEdit').val(jObject.chequeDDNo);
	$('#tdChequeDateEdit').val(jObject.chequeDDDate);
} else if (paymentMode == 'NEFT') {
	$('#tdChequeNoEdit').val(jObject.chequeDDNo);
	$('#tdChequeDateEdit').val(jObject.chequeDDDate);
} else if (paymentMode == 'RTGS') {
	$('#tdChequeNoEdit').val(jObject.chequeDDNo);
	$('#tdChequeDateEdit').val(jObject.chequeDDDate);
}
}

function getStudentBillingInformationByStudentBillId(studentBillId, callback) {
$.ajax({
	url : 'getStudentBillingInformationByStudentBillId.json',
	dataType : 'json',
	data : 'studentBillId=' + studentBillId,
	beforeSend : function() {

	},
	complete : function() {

	},
	success : function(jObject) {
		callback(jObject);
	},
	error : function() {

	}
});
}

function editStudentBillDetail(studentBillId) {
jConfirm(
		'Are you sure?',
		'Confirmation',
		function(flag) {
			if (flag) {
				$
						.ajax({
							url : 'editStudentBill.json?studentBillId='
									+ studentBillId,
							dataType : 'json',
							data : $('#frmStudentBillingEditing').serialize(),
							type : 'POST',
							success : function(jObject) {
								jAlert('Saved Successfully!');
								getStudentBillingDetails(function(jArray) {
									showStudentBillingDetails(jArray);
									if (jArray.length > 0) {
										var studentInvoiceId = jArray[0].studentInvoiceId;
										// showStudentRecieptPrintOption(studentInvoiceId,jArray);
									}
								});
							},
							error : function() {
								jAlert('Server error!!! Please refresh your page and try again.');
							}
						});
			}
		});
}

/**
 * @author Vimal
 * @since 4th June 2012
 */
function renderChequeDetailEntryFormEdit() {
// tdPaymentDetailsEntrySection
var boiler = '<table class = "table table-condensed table-bordered">'
		+ '<tr>'
		+ '<th width = "20%">Challan No: </th>'
		+ '<td><input type = "text" name="chequeDDNo" id = "tdChequeNoEdit"></td>'
		+ '</tr>'
		+ '<tr>'
		+ '<th width = "20%">Date: </th>'
		+ '<td><input type = "text" name="chequeDDDate" id = "tdChequeDateEdit" readonly="true"></td>'
		+ '</tr>' + '</table>';
$('#tdPaymentDetailsEntrySectionEdit').html(boiler);
$("#tdChequeDateEdit").datepicker({
	dateFormat : 'yy-mm-dd',
	showWeek : true,
	changeMonth : true,
	changeYear : true,
	yearRange : "-60:+0"

});

}
/**
 * @author Vimal
 * @since 4th June 2012
 */
function renderDDDetailEntryFormEdit() {
// tdPaymentDetailsEntrySection
var boiler = '<table class = "table table-condensed table-bordered">'
		+ '<tr>'
		+ '<th width = "20%">DD No: </th>'
		+ '<td><input type = "text" name="chequeDDNo" id = "tdDemandDraftNoEdit"></td>'
		+ '</tr>'
		+ '<tr>'
		+ '<th width = "20%">Date: </th>'
		+ '<td><input type = "text" name="chequeDDDate" id = "tdDemandDateEdit" readonly="true"></td>'
		+ '</tr>' + '</table>';
$('#tdPaymentDetailsEntrySectionEdit').html(boiler);
$("#tdDemandDateEdit").datepicker({
	dateFormat : 'yy-mm-dd',
	showWeek : true,
	changeMonth : true,
	changeYear : true,
	yearRange : "-60:+0",
});
}

function renderPaymentDetailsEdit() {
// alert('Hi');
$
		.ajax({
			url : 'getMoneyDenominationList.json',
			dataType : 'json',
			success : function(jArray) {
				denominationIdArray = [];
				var boiler = '<table class = "table table-bordered table-condensed">'
						+ '<tr><td colspan = "3">'
						+ '<div class = "alert alert-info"><strong>Please select denomination and no of total currency of that denomination</strong></div>'
						+ '</td></tr>'
						+ '<tr>'
						+ '<th>Denomination</th>'
						+ '<th>No of currency</th>'
						+ '<th>Total</th>'
						+ '</tr>';
				for ( var i = 0; i < jArray.length; i++) {
					denominationIdArray.push(jArray[i]["denominationId"]);
					boiler += '<tr>'
							+ '<td id="denomination-'
							+ jArray[i]["denominationId"]
							+ '">'
							+ jArray[i]["name"]
							+ '&nbsp;&nbsp;&nbsp; X &nbsp;</td>'
							+ '<td style="text-align:center"><input align="center" value="0" type="text" id="qty-'
							+ jArray[i]["denominationId"]
							+ '" onblur="calculateDenominationAmount('
							+ jArray[i]["denominationId"]
							+ ')" class = ""></td>'
							+ '<td><label id="total-'
							+ jArray[i]["denominationId"]
							+ '" class= "alert alert-info subtotal">0</label></td>'
							+ '</tr>';
				}
				boiler += '<tr><th colspan="2">Total</th><th id="finalTotal"></th></tr>'
						+ '</table>';
				$('#denominationBody').html(boiler);
			},
			error : function() {
				return undefined;
			}
		});
var paymentMode = $('#cbBillPayamentModeEdit').val();
if (paymentMode == 'DemandDraft') {
	renderDDDetailEntryFormEdit();
	$('#tdPaymentDetailsEntrySectionEdit').show();
	$('#cbBillBankListEdit').removeAttr('disabled');
	$('#cbBillBankBranchEdit').removeAttr('disabled');
} else if (paymentMode == 'Cheque') {
	renderChequeDetailEntryFormEdit();
	$('#tdPaymentDetailsEntrySectionEdit').show();
	$('#cbBillBankListEdit').removeAttr('disabled');
	$('#cbBillBankBranchEdit').removeAttr('disabled');
} else if (paymentMode == 'Cash') {
	$('#divShowDenominationModal').css({
		width : '40%',
		'margin-left' : function() {
			return -($(this).width() / 2);
		},
	}).modal('show');
	$('#tdPaymentDetailsEntrySectionEdit').hide();
	$('#cbBillBankListEdit').attr('disabled', 'disabled');
	$('#cbBillBankBranchEdit').attr('disabled', 'disabled');
} else {
	$('#tdPaymentDetailsEntrySectionEdit').hide();
	$('#cbBillBankListEdit').attr('disabled', 'disabled');
	$('#cbBillBankBranchEdit').attr('disabled', 'disabled');
}
}

function getFeeStructureItemList(feeStructureId, callback) {
$.ajax({
	url : 'getFeeStructureItemList.json',
	data : 'feeStructureId=' + feeStructureId,
	dataType : 'json',
	async : false,
	beforeSend : function() {
		startCommonAjaxSpinner();
	},
	complete : function() {
		stopCommonAjaxSpinner();
	},
	success : function(jArray) {
		callback(jArray);
	},
	error : function() {

	}
});
}

function showFeePrioritySavingDialog() {
$.alerts._hide();
// var instCourseId =
// $('#txtFeeStructureDescription').data('instituteCourseId');
$('#divFeeItemHeadPriority').modal('show');
$("script[src='scripts/fee/feeItemPriority.js']").remove();
$.getScript("scripts/fee/feeItemPriority.js");
setTimeout(function() {
	$('.btn_submitPriority').unbind();
	$('.btn_submitPriority').bind('click', function() {
		submitFeeHeadTallyAlias('0');
		$('#divFeeItemHeadPriority').modal('hide');
	});
	configureFeeHeadPriorityList('0', function() {
		$('#submitFeeHeadAlias').remove();
	});
}, 1000);

}

function sortDropDownListByText(selectId) {
var foption = $('#' + selectId + ' option:first');
var soptions = $('#' + selectId + ' option:not(:first)').sort(function(a, b) {
	return a.text == b.text ? 0 : a.text < b.text ? -1 : 1;
});
$('#' + selectId).html(soptions).prepend(foption);

};

function chequeBouns(financePolicy,billNo,chequeDDDate) {
	
	$('#commonDialog').modal('show');
	$('#commonDialogHeader').html(billNo);
	
	var boiler='<table class="table table-bordered table-condensed">'+
	'<tbody>'+
	'<tr>'+
	'<td>Please Select Date</td>'+
	'<td>'+
	'<input id="settleDate" type="text">'+
	'</td>'+
	'</tr>'+
	'<tr>'+
	'<tr>'+
	'<td>Reasons for Bounce <b style="color:red">*</b></td>'+
	'<td><textarea id="reasonforBounce" placeholder="Enter valid reason for for bounce"></textarea></td>'+
	'</tr>'+
	'<td colspan="3">'+
	'<input class="btn btn-mini btn-inverse" type="button" style="margin-left:420px" data-dismiss="modal" onclick="chequeBouns1(\''+financePolicy+'\',\''+billNo+'\');" value="Bounce">'+
	'</td>'+
	'</tr>'+
	'</tbody>'+
	'</table>';
	
	$('#commonDialogBody').html(boiler);
	
	/*
	$('#settleDate').datepicker({
		changeMonth : true,
		changeYear : true,
		showButtonPanel : true,
		dateFormat : 'dd MM yy',
		yearRange : "-10:+10",
		altFormat : "yy-mm-dd"
	});*/
	$("#settleDate").datepicker({
		dateFormat:"M dd,yy",
		showWeek: true,
		changeMonth: true,
		changeYear: true,
		yearRange : "-60:+10",
		
	});
	var Month=chequeDDDate.split(' ')[0];
	var months=chequeDDDate.split(' ')[1];
	var yrar=chequeDDDate.split(' ')[2];
	
	var dates=Month+" "+months+""+yrar
	var sysDate = new Date();
	//$('#settleDate').datepicker("option", "minDate", dates);
	//$('#settleDate').datepicker("option", "maxDate", sysDate);
	//$('#settleDate').datepicker('option','maxDate',chequeDDDate);

}
function chequeBouns1(policyId,receiptNo){
	var BounceDate=$('#settleDate').val();
	var reasone = $('#reasonforBounce').val();
	if(reasone.trim()==""){
		jAlert("please enter valid reason for bounce !!!");
		return false;
	}
	//return ; 
	jConfirm("Do you really want to bounce this cheque/DD ?", "Confirm", function(ans) {
		if(ans){
			$.ajax({
				url : 'bounceChequeForBankReconciliationNew.json',
				data : {
					policyId :policyId,
					BounceDate:BounceDate,
					reasone:reasone,
					receiptNo:receiptNo
				},
				type :'POST',
				dataType : 'json',
				async : false,
				beforeSend : function() {
					startCommonAjaxSpinner();
				},
				complete : function() {
					stopCommonAjaxSpinner();
				},
				success : function(jArray) {
					if (jArray[0]["msg"] == 'Saved Successfully') {
						jAlert("Successfully Revert", "Success");
						showStudentBillingDetails(undefined);
					}else{
						jAlert("Something went wrong, Please try after some time","Error");
						showStudentBillingDetails(undefined);
					}
				},
				error : function() {
                        jAlert("Something went wrong, Please try after some time","Error");
				}
			});
		}
	});
}

function chequeRevert(studentbillChequeId) {

$.ajax({
	url : 'revertreverseChequeBounceStudentFee.json',
	data : 'studentbillChequeId=' + studentbillChequeId,
	dataType : 'json',
	async : false,
	beforeSend : function() {
		startCommonAjaxSpinner();
	},
	complete : function() {
		stopCommonAjaxSpinner();
	},
	success : function(jArray) {
		jAlert("Entries Reversed", "Success");
		showStudentBillingDetails(undefined);
	},
	error : function() {

	}
});
}

function reversePaymentDetail(studentBillId) {
// alert("reversePaymentDetail==="+studentBillId);
jConfirm("Do you really want to Revert Bill Entry", "Confirm", function(ans) {
	if(ans){
		$.ajax({
			url : 'reversePaymentDetail.json',
			data : 'studentBillId=' + studentBillId,
			dataType : 'json',
			async : false,
			beforeSend : function() {
				startCommonAjaxSpinner();
			},
			complete : function() {
				stopCommonAjaxSpinner();
			},
			success : function(jArray) {
				if(jArray!=null){
					if(jArray[0].response == '0'){
						jAlert("Entries Reversed","Success");
						toRefreshReverseEntry();
					}
						
					else if(jArray[0].response == '1')
						jAlert("Reverse Order is not proper","Success");
					else if(jArray[0].response == '2')
						jAlert("Bills is already reversed ","Success");
				}
				//showStudentHostelBillingDetails(undefined);
			},
			error : function() {

			}
		});
}

});
}
function getTaxAccToUniverseId(feeItemHeadUniverseIdEdit){
	if($('#taxCheck').is(':checked')){
		$('#taxAmtTd').show();
		var feeItemHeadUniverseId = $('#cmbFeeParticulars').val();
		if(feeItemHeadUniverseId=="-1"){
			feeItemHeadUniverseId = feeItemHeadUniverseIdEdit;
		}
		$.ajax({
			url:'fetchTaxAccToUniverseId.json',
			data:{
				feeItemHeadUniverseId:feeItemHeadUniverseId
			},
			dataType:'json',
			async:false,
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray)
			{
				var boiler = '<option value="0">Select</option>';
				if(jArray.length>0){
					for(var i=0; i<jArray.length; i++)
						boiler += '<option  value='+jArray[i]["accountHeadId"]+'>'+jArray[i]["accountName"]+'</option>';
				}
				$('#cmbTaxAmount').html(boiler);
				$('#cmbTaxAmount1').html(boiler);
			},
			error:function(){
			}
		});
	}else
		$('#taxAmtTd').hide();
}
function lockFeeItem(feeItemId) 
{
	$.ajax({
		url : 'lockFeeItem.json?feeItemHead=' + feeItemId,
		dataType : 'text',
		success : function(jArray) {
			if (jArray == 'Locked Successfully') {
				jAlert(jArray);
				getFeeStructureItem();
			} else {
				jAlert(jArray);
			}
		}
	});
}

function getyear()
{
	var today =new Date(); 
	var year=	today.getFullYear();
	var stYear = eval(year - 15);
	var toYear = eval(year + 10);
	var boiler='<option value="0">Select</option>';
	for(var i=stYear;i<=toYear;i++)
	{
		boiler+='<option value="'+i+'">'+i+'-'+eval(i+1)+'</option>';
	}
	
	$('#yearId').html(boiler);
	convertComboToSearchable('#yearId');
}

function uploadusingExcelofyeardown(){
	$('#uploadExcelModal').modal('show');
	var boiler ='<table class="table table-bordered"><tbody>'+
	//'<tr><th>Academic Year</th><td colspan="2"><select style="margin-top" class="" id="yearId"><option value="0">Select</option></select></td></tr>'+
	'<tr><td style="width:20%;"><strong>File to upload</strong></td>'+
	'<td style="width:60%;" id="idattachmentbar">'+
	'<div class="preview"></div>'+
	'<div class="btn btn-info" style = "width:165px;height:20px">'+
	'Upload excel sheet'+
	'<input style = "margin-top:-40px;margin-left:-10px;opacity:0;" type="file" name="fileData" id="flFileData"></div><br><br>'+
	'<div class = "alert alert-info">'+
	'<i class = "icon-hand-right"></i>&nbsp;&nbsp;.xls, .xlsx files only<br />'+
	'<i class = "icon-hand-right"></i>&nbsp;&nbsp; Maximum file size limit &nbsp;&nbsp;<strong id = "fileSizeAllowed">5</strong>&nbsp;MB<br />'+
//	'<i class = "icon-hand-right"></i>&nbsp;&nbsp;<b> Enter YES in IS_PRIMARY (if parent group)&nbsp;&nbsp;<b><br>'+
	//'<i class = "icon-hand-right"></i>&nbsp;&nbsp; Date in excel sheet should be &nbsp;&nbsp;<strong id = "fileSizeAllowed">DD MMM,YYYY format (e.g 22 May,1993)<br />'+
	'</div></td>'+
	'<td style="width: 20%;"><div class="login" style="vertical-align: top;"><input type="button" class = "btn btn-inverse btn-mini  " style="vertical-align: top;" value="Download template" onclick="downloadJournalListFormatofyrardown()" title = "format of excel sheet for employee import" /></div></td>'+
	'</tr>'+
	'<tr><td colspan="3" align="center">'+
	'<div class="responsebar">'+
	'</div>'+
	'</td>'+
	'</tr>'+
	'</tbody>'+
	'</table>';
	$('#duploadExcelModalBody').html(boiler);
	uploadexcelofyeardownstudents();
	//getyear();
	
}
function downloadJournalListFormatofyrardown()
{
	var instituteCourseId=$('#cbInstiCourseId option:selected').val().split('-')[0];
	if(instituteCourseId==undefined && instituteCourseId=='0' || instituteCourseId=='' || instituteCourseId==0){
		jAlert('Please Select '+juno.labelByCustomer('l.ProgramDepartment')); 
		return false;
	}
	var fromYear=$('#cbInstiCourseId').data('fromyear');
	if(fromYear==undefined || fromYear==''){
		jAlert('current year fee structure not found.');
				return false;
	}
	
	var toYear=eval(fromYear+1);
	window.open('downloadledgeruploadExcelFormatofresetinvoices.json?instituteCourseId='+instituteCourseId+'&fromYear='+fromYear+'&toYear'+toYear);
}

function uploadexcelofyeardownstudents(){
	var instituteCourseId=$('#cbInstiCourseId option:selected').val().split('-')[0];
	if(instituteCourseId==undefined && instituteCourseId=='0' || instituteCourseId=='' || instituteCourseId==0){
		jAlert('Please Select '+juno.labelByCustomer('l.ProgramDepartment')); 
		return false;
	}
	var fromYear=$('#cbInstiCourseId').data('fromyear');
	if(fromYear==undefined || fromYear==''){
		jAlert('current year fee structure not found.');
				return false;
	}
	/*if(fromYear==undefined && fromYear=='0' || fromYear=='' || fromYear==0){
		jAlert('Please Select Academic year'); 
		return false;
	}*/
	
	var toYear=eval(fromYear+1);
	
	new AjaxUpload('flFileData', {
		action : 'uploadstudentListofrevertInvoices.json',
		name : 'fileData',
		size : AllowedFileSize.DOCUMENT_UPLOAD,
		dataType:'json',
		//data : {instituteCourseId:instituteCourseId,fromYear:fromYear,toYear:toYear},
		onSubmit : function(file, extension) {
			if ($.inArray(extension.toString().toLowerCase(), gExtensionArray) != -1) {
				$('div.preview').addClass('loading');
				this.setData({
					'instituteCourseId':instituteCourseId,
					'fromYear':fromYear,
					'toYear':toYear,
					'fileSize' : AllowedFileSize.DOCUMENT_UPLOAD
				});
				return true;
			} else {
				jAlert('File type is not valid!');
				return false;
			}
		},
		onComplete : function(file, response) {

			jAlert(juno.labelByCustomer('l.isInvoceToFeesLabel')+' reverted successfully !!!');
		}
		
	});
}

function configurationofpaymentmode(){
	$('#configurationofpaymentmodeMdl').modal('show');
	$.ajax({
		url:'programListByRoleForAnnouncement.json?linkURL='+ window.location.toString().split('_')[1],
		dataType:'json',
		type:'GET',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			var boiler='';
			boiler+='<table class = "table table-bordered table-condensed">'+
			'<tr><th>Sr No</th><th>'+juno.labelByCustomer('l.ProgramDepartment')+' Name</th><th>Online Payment</th><th>Bank Challan</th><th>Installment</th><th>Partial Payment</th>';
			for(var i=0;i<jArray.length;i++){
				boiler += '<tr class="claspaymentconfiguration"><td style="display:none;" class="courseId">'+jArray[i]["instituteCourseId"]+'</td><td>'+eval(i+1)+'</td><td>'+jArray[i]["courseName"]+'</td>'+
				'<td><input type="checkbox" value="onlinepayment" class="paymentmode" id="'+jArray[i]["courseId"]+'_onlinepayment"></td><td><input type="checkbox" value="bankchallan" class="paymentmode" id="'+jArray[i]["courseId"]+'_bankchallan"></td>'+
				'<td><input type="checkbox" value="Installment" class="paymentmode" id="'+jArray[i]["courseId"]+'_Installment"></td><td><input type="checkbox" value="partialpayment" class="paymentmode" id="'+jArray[i]["courseId"]+'_partialpayment"></td>';
			}
			boiler +='<tr><td colspan="6" style="text-align:center"><input type="button" value="Save" class="btn btn-mini btn-inverse" onclick="savepaymentconfiguration();"></td></tr>'
			$('#configurationofpaymentmodeBody').html(boiler);
			
			
			for(var i=0;i<jArray.length;i++){
				if(jArray[i]["isonlinepayment"]=="YES"){
					$('#'+jArray[i]["courseId"]+'_onlinepayment').attr('checked',true);
				}
				if(jArray[i]["isbankchallan"]=="YES"){
					$('#'+jArray[i]["courseId"]+'_bankchallan').attr('checked',true);
				}
				if(jArray[i]["isinstallment"]=="YES"){
					$('#'+jArray[i]["courseId"]+'_Installment').attr('checked',true);
				}
				if(jArray[i]["isparpayment"]=="YES"){
					$('#'+jArray[i]["courseId"]+'_partialpayment').attr('checked',true);
				}
			}
		}
	});
}
function savepaymentconfiguration()
{
	
	var savepayment='';
	$('.claspaymentconfiguration').each(function(){
		var courseId=$(this).find('.courseId').html()==undefined || $(this).find('.courseId').html()==""?"-1":$(this).find('.courseId').html();
		var paymentmode='';
		var flag=false;
		$(this).find('.paymentmode:visible').each(function(){
			if ($(this).is(':checked')){
				flag=true;
				paymentmode+=$(this).val()+'~';
			}
		});
		if(flag==false){
			paymentmode+='aa'+'~';
		}
		paymentmode = paymentmode.substring(0,paymentmode.length -1);
		savepayment+=courseId+'@'+paymentmode+'#';
	});
	savepayment = savepayment.substring(0,savepayment.length -1);

	if(savepayment.length>0){
		$.ajax({
			url:'Savepaymentconfiguration.json',
			dataType:'text',
			data:{savepayment:savepayment.toString()},
			type:'POST',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jObject){
				jAlert("Saved Successfully");
				$('#configurationofpaymentmodeMdl').modal('hide');
			},
			error:function(){

			}
		});
	}
}
function printAdmissionReceiptStudent(studentBillId) {
    getReceiptwisePaymentInformationForPrinting(
            studentBillId,
            function(jObject) {
                var instituteName = jObject.instituteName+'<br>'+jObject['instituteAddress'];
                var instituteName1 = $('#instituteName').val()+'<br>'+jObject['instituteAddress'];
                var receiptNo = jObject['receiptNo'];
                var currDate = jObject['currDate'];
                var billGeneratedDate = jObject['billGeneratedDate'];
                var studentName = jObject['studentName'];
                var studentUID = jObject['studentUID'];
                if (studentUID == undefined) {
                    studentUID = '-';
                }
                var studclass = jObject['class'];
                var particularArray = jObject['particularArray'];
                var receiptArray = jObject['receiptArray'];
                var generatedBy = jObject['generatedBy'];
                var remark = jObject['remark'];
                var note = jObject['note'];
                if (remark == '' || remark == undefined) {
                    remark = 'Interim fee. Final fee would be finalized by the S.S.Samiti';
                }
                var instId = jObject['instituteId'];
                if(instituteName=="" || instituteName==null || instituteName==undefined){
                    instituteName=jObject['instituteName']+'<br>'+jObject['instituteAddress'];
                    instituteName1=jObject['instituteName'];
                }
                var totalAmount = 0;
                var payment = '';
                var colspan="2";
                var colspan1="3";
                if($('#customerHelper').val() == "IMT_GAZIABAD"){
                    colspan="3";
                    colspan1="4";
                }
                var studentRollNo = ($('#customerHelper').val() == "IMT_NAGPUR" || $('#customerHelper').val() == "IMT_GAZIABAD" ? ('<tr><td><span class="size14 fontBold">Roll No.</span></th><td colspan='+colspan+'><span class="size14 fontBold">'+jObject.rollNo+'</span></td></tr>') : '');
                var stdDetail = '<tr>' + '<td colspan='+colspan1+'>' + '<b>'
                        + '<div style="display:inline-block;">'+($('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD" ? 'Dept. / Branch : ' : ''+juno.labelByCustomer('l.ProgramDepartment')+':')+' '
                        + studclass + '</div>' + '</b>' + '</td>' + '</tr>';
                
                if (receiptNo != undefined)
                    if(!receiptNo.includes('/'))
                        receiptNo = receiptNo.split('/')[0];
                    else{    
                    receiptNo = receiptNo.split('/')[0] + "/"
                            + receiptNo.split('/')[1] + "/" + '<strong>'
                            + receiptNo.split('/')[2] + '</strong>';
                    }
                for ( var i = 0; i < receiptArray.length; i++) {
                    payment += '</tr>'
                        + '<td style="width:81%;">'
                        + receiptArray[i].paidBy
                        + '</td>'
                        + '<td style="text-align:right;width:19%;">'
                        + formatAmount(parseFloat(receiptArray[i].amount)
                                .toFixed(2)) + '</td>' + '</tr>';

                }

                payment=payment.replace('null','');

                payment=payment.replace('null','');


                if (payment != null || payment != '') {
                    payment = '<tr>'
                            + '<td colspan='+colspan1+' style="font-size:9px;">'
                            + '<table cellspacing="0" cellpadding="0" class="table3" style="width:100%;">'
                            + payment + '</table>' + '</td>' + '</tr>';
                }
                var boiler = '<div style="width:100%;text-align:center;font-size: 10px; '+($('#customerHelper').val() != undefined
                        && ($('#customerHelper').val() == "IMT_NAGPUR" || $('#customerHelper').val() == "IMT_GAZIABAD") || $('#customerHelper').val() == "INDIRA_PUNE" ? 'display:none;' : '')+'" class="printDiv">'
                        + '<strong>'
                        + $('#subjectTo').val()
                        + '</strong>'
                        + '</div>'
                        + '<div style="width:100%;font-family: Cambria;">'
                        + '<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">';
                if ($('#customerHelper').val() != undefined
                        && $('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD")
                    boiler += '<img height="46px" src="getInstituteLogo.json?instituteId='+instId+'">';
                boiler += '</div>'
                        + '<div style="width:60%;display:inline-block;text-align:center;vertical-align:middle;font-size: 13px;">';
                if ($('#customerHelper').val() != undefined
                        && $('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD")
                    boiler += '<b>' + instituteName + '</b>';
                else{
                    if($('#customerHelper').val() == "IMT_GAZIABAD")
                        boiler += '<img height="45px" src="img/imtg_final_logo.jpg">';
                    else
                        boiler += '<img height="45px" src="img/imtn_final_logo.jpg">';
                }
                boiler += '</div>'
                        + '<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">';
                if ($('#customerHelper').val() != undefined
                        && $('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD" && $('#customerHelper').val() !="INDIRA_PUNE")
                    boiler += '<img height="46px" src="getInstituteLogo.json?instituteId='+instId+'">';
                boiler += '</div>'
                        + '</div><br>'
                        +

                        '<table class="table table-bordered table2" cellspacing="0" cellpadding="0" id="tblPrintIncomeResceipt" >';
                        /*
                         * '<tr>'+ '<th colspan="3"><center><div><img
                         * height="36px" src="src="getInstituteLogo.json?instituteId='+instId+'""></div><b>'+instituteName+'</b><br><b>Receipts
                         * <span id="spnCopyName"></span></b></center></th>'+ '</tr>'+
                         */
                
                        boiler+='<tr>';
                            if($('#customerHelper').val() == "IMT_GAZIABAD"){
                                colspan="3";
                                boiler+='<th colspan="4"><center><b> FEE RECEIPT / BILL OF SUPPLY</b></center></th>';
                            }else{
                                boiler+='<th colspan="3"><center><b>RECEIPT</b></center></th>';
                            }
                            boiler+= '<tr>'
                        + '<td><strong>Receipt No. </strong></td><td colspan='+colspan+'><span class="size14"> '
                        + receiptNo
                        + ' </span><span style="float:right;" >'
                        + billGeneratedDate
                        + '</span></td>'
                        + '</tr>'
                        + '<tr>'
                        + '<td><strong>Received from </strong></td><td colspan='+colspan+' class="size14 fontBold">'
                        + '<span class="size14"> ' + studentName+'';
                        if($('#customerHelper').val() != "INDIRA_PUNE"){
                            boiler +='</span><span style="float:right;" >UID: ' + studentUID+'';
                        }
                            boiler += '</span></td>' + '</tr>'+ studentRollNo + stdDetail + '</tr>';
                        
                        if($('#customerHelper').val()!=undefined && $('#customerHelper').val()=="IMT_GAZIABAD"){
                            boiler +='<tr><td><strong>Account Name</strong></td><td  colspan='+colspan+'>IMT, GAZIABAD</td></tr><tr><td><strong>Account Number</strong></td><td colspan='+colspan+'>6770020000251</td></tr><tr><td><strong>GSTIN </strong></td><td colspan='+colspan+'>09AAATL1391H1ZK</td></tr>';
                        }
                        if($('#customerHelper').val()!=undefined && $('#customerHelper').val()=="IMT_GAZIABAD"){
                            boiler += '<tr><th style="width:10%;">Sr no.</th>'
                                + '<th style="width:60%;">Account Head</th>'
                                + '<th style="width:10%;">SAC CODE</th>'
                                + '<th style="width:20%;">Amount In Rs.</th>' + '</tr>';    
                            for ( var k = 0; k < particularArray.length; k++) {
                                boiler += '</tr><td style="text-align:center">' + eval(k + 1)
                                + '</td>';

                                if (particularArray[k]['isRefundable'])
                                    boiler += '<td style="">'
                                        + particularArray[k]['orgFeeItemHeadName']
                                + '</td>'; // boiler+='<td
                                // style="">'+particularArray[k]['orgFeeItemHeadName']+'(
                                // Refundable )</td>';
                                else
                                    boiler += '<td style="">'
                                        + particularArray[k]['orgFeeItemHeadName']
                                + '</td>';
                                
                                boiler += '<td style="">999241</td>';

                                boiler += '<td style="text-align:right">'
                                    + commaFormatted(Math.round(
                                            parseFloat(particularArray[k]['totalAmount']))
                                            .toFixed(2)) + '</td></tr>';

                                totalAmount = totalAmount
                                + eval(particularArray[k]['totalAmount']);

                            }
                        }else{
                            boiler += '<tr><th style="width:17%;">Sr no.</th>'
                                + '<th style="width:63%;">Account Head</th>'
                                + '<th style="width:20%;">Amount In Rs.</th>' + '</tr>';
                            for ( var k = 0; k < particularArray.length; k++) {
                                boiler += '</tr><td style="text-align:center">' + eval(k + 1)
                                + '</td>';

                                if (particularArray[k]['isRefundable'])
                                    boiler += '<td style="">'
                                        + particularArray[k]['orgFeeItemHeadName']
                                + '</td>'; // boiler+='<td
                                // style="">'+particularArray[k]['orgFeeItemHeadName']+'(
                                // Refundable )</td>';
                                else
                                    boiler += '<td style="">'
                                        + particularArray[k]['orgFeeItemHeadName']
                                + '</td>';

                                boiler += '<td style="text-align:right">'
                                    + commaFormatted(Math.round(
                                            parseFloat(particularArray[k]['totalAmount']))
                                            .toFixed(2)) + '</td></tr>';

                                totalAmount = totalAmount
                                + eval(particularArray[k]['totalAmount']);

                            }
                        }
                        
                amountInWord = (toWords(eval(totalAmount)) + ' Only.');
                var advancePaidAmt = '';
                if(jObject['advancePaidAmount'] != undefined && jObject['advancePaidAmount'] != ''){
                    advancePaidAmt = '</tr><td colspan='+colspan+'>ADVANCE PAID AGAINST NEXT INSTALLMENT</td><td style="text-align:right;">'+formatAmount(parseFloat(jObject['advancePaidAmount']).toFixed(2)) + '/-</td></tr>';
                }
                boiler += '<tr>'
                        + '<td><strong>Amount in word </strong></td>'
                        + '<td colspan='+colspan+'> Rupees '
                        + amountInWord
                        + ' </td>'
                        + '</tr>'
                        + '<tr>'
                        + '<td colspan='+colspan+' style="text-align:right"><b>Total(In Rs.)</b></td>'
                        + '<td style="text-align:right;" class="fontBold">'
                        //+ formatAmount(parseFloat(totalAmount).toFixed(2))
                        +commaFormatted(Math.round(parseFloat(totalAmount)).toFixed(2))
                        + '/-</td>' + '</tr>';
                boiler += '<tr>'
                        + advancePaidAmt
                        + payment
                        + '<tr style="'+($('#customerHelper').val() != "IMT_NAGPUR" && $('#customerHelper').val() != "IMT_GAZIABAD" && $('#customerHelper').val() != "INDIRA_PUNE" && $('#customerHelper').val() != "GC_UNIVERSITY" ? "" : "display:none;")+'">'
                        + '<td colspan='+colspan1+'>'
                        + remark
                        + '</td>'
                        + '</tr>'
                        + '<tr>'
                        if($('#customerHelper').val() == "IMT_GAZIABAD" || $('#customerHelper').val() == "IMT_NAGPUR" || $('#customerHelper').val() == "IMT_HYDERABAD"){
                            boiler += '<td colspan="2" style="text-align:center;" class="fontBold size10"><strong>Computer generated receipt and no signature required</td><td class="fontBold size10"><strong>Generated At:<br>'+jObject['generatedat']+'</strong></td>' + '</tr>' ;
                        }else if($('#customerHelper').val() == "GC_UNIVERSITY"){
							boiler += '<td colspan="3" style="text-align:right;" class="fontBold size10">'+
											'<strong>For '+ instituteName + ' <br><br>Printed By : ' + generatedBy+ '</strong>'+
									  '</td>' + 
									 '</tr>' ;
						}else{
						
                            boiler += '<td colspan="3" style="text-align:right;" class="fontBold size10"><strong>For '
                                + instituteName + ' <br><br>Generated By : ' + generatedBy
                                + '</strong></td>' + '</tr>' ;
                        }
                        /*
                         * '<tr>'+ '<td colspan="3" style="font-weight:bold;font-style:italic">Provisional
                         * fee & Subject to orders of Honorable High Court & Supreme
                         * Court</td>'+ '</tr>'+
                         */
                        
                        if($('#customerHelper').val() == "INDIRA_PUNE"){
                            boiler +='<tr><td td colspan='+colspan1+'>Note:'+note+'</td></tr>';
                        }
                            boiler +='</table><br>';
                    var boilerPrint ='';
                        boilerPrint += '<div style="height:24.6cm;">'
                        + '<div style="height:35%;">'
                        + boiler
                        + '</div>'
                        + '</div>';
                    

                var myboiler = '<html><meta charset="utf-8" /><head>'
                        + '<style type="text/css">'+
                        '.page_break {'+
                        '      page-break-before: always;'+
                        '    }'+

                        '@media print  and (width: 21cm) and (height: 29.7cm) {'
                        + '@page {'
                        + '     margin: 3cm;'
                        +

                        '  }'
                        + 'body{ background-color:#FFFFFF; background-image:none; color:#000000; }'
                        + '.ad{ display:none;}'
                        + '.HeaderSection'
                        + '{'
                        + 'display:none;'
                        + '}'
                        + '.FooterSection'
                        + '{'
                        + 'display:none;'
                        + '}'
                        + '.leftbar{ display:none;}'
                        + '.contentarea{ width:100%;}'
                        + '}'
                        + 'table.table2 a:link    {         color: #666;        font-weight: bold;        text-decoration: none;     }    .table2 a:visited    {        color: #999999;        font-weight: bold;        text-decoration: none;    }    .table2 a:active, .table2 a:hover    {        color: #bd5a35;        text-decoration: underline;    }    /* .table-bordered {        -moz-border-bottom-colors: none;        -moz-border-left-colors: none;        -moz-border-right-colors: none;        -moz-border-top-colors: none;        border-collapse: separate;        border-color: #DDDDDD #DDDDDD #DDDDDD -moz-use-text-color;        border-image: none;        border-radius: 4px 4px 4px 4px;        border-style: solid solid solid none;        border-width: 1px 1px 1px 0;    }    .table {        margin-bottom: 18px;        width: 100%;    }    table {        border-collapse: collapse;        border-spacing: 0;    } */    .table2    {        width:100%;        font-family: COURIER;        color: Black;        font-size: 12px;        text-shadow: 1px 1px 0px #fff;        border: #000 1px solid;        -moz-border-radius: 3px;        -webkit-border-radius: 3px;        border-radius: 3px;        -moz-box-shadow: 0 1px 2px #d1d1d1;        -webkit-box-shadow: 0 1px 2px #d1d1d1;        box-shadow: 0 1px 2px #d1d1d1;        border-spacing: 0;    }    .table2 tr th:first-child    {        text-align: left;        padding-left: 10px;        border-left: 0;        text-align: center;    }    .table2 th    {        border-top: 1px solid #000;        border-bottom: 1px solid #000;        border-left: 1px solid #000;        text-align: center;        height: 15px;        font-weight: bold;        background: #bfbfbf;        /*background: -webkit-gradient(linear, left top, left bottom, from(#ededed), to(#ebebeb));        background: -moz-linear-gradient(top,  #ededed,  #ebebeb); */    }    .table2 th:first-child    {        text-align: left; /*padding-left:20px;*/    }    .table2tr:first-child th:first-child    {        -moz-border-radius-topleft: 3px;        -webkit-border-top-left-radius: 3px;        border-top-left-radius: 3px;    }    .table2 tr:first-child th:last-child    {        -moz-border-radius-topright: 3px;        -webkit-border-top-right-radius: 3px;        border-top-right-radius: 3px;    }    .table2 tr    {        text-align: left;        padding-left: 1px;    }    .table2 tr td:first-child    {        text-align: left;        padding-left: 10px;        border-left: 0;    }    .table2 tr td    {        height: 10px;        border-top: 1px solid #ffffff;        border-bottom: 1px solid #000;        border-left: 1px solid #000;        /* border-right: 1px solid #000; */                        /* background: #fafafa;        background: -webkit-gradient(linear, left top, left bottom, from(#fbfbfb), to(#fafafa));        background: -moz-linear-gradient(top,  #fbfbfb,  #fafafa); */    }    .table2 tr.even td    {        background: #f6f6f6;        background: -webkit-gradient(linear, left top, left bottom, from(#f8f8f8), to(#f6f6f6));        background: -moz-linear-gradient(top,  #f8f8f8,  #f6f6f6);    }    .table2 tr:last-child td    {        border-bottom: 0;    }    .table2 tr:last-child td:first-child    {        -moz-border-radius-bottomleft: 3px;        -webkit-border-bottom-left-radius: 3px;        border-bottom-left-radius: 3px;    }    .table2 tr:last-child td:last-child    {        -moz-border-radius-bottomright: 3px;        -webkit-border-bottom-right-radius: 3px;        border-bottom-right-radius: 3px;    }    .table2 tr:hover td    {        /* background: #f2f2f2;        background: -webkit-gradient(linear, left top, left bottom, from(#f2f2f2), to(#f0f0f0));        background: -moz-linear-gradient(top,  #f2f2f2,  #f0f0f0); */    }'
                        + 'table.table3 { /* width:100%; */ font-family: COURIER; color: Black; font-size: 12px; text-shadow: 1px 1px 0px #fff; /* border: #000 1px solid; -moz-border-radius: 3px; -webkit-border-radius: 3px; border-radius: 3px; */ /* -moz-box-shadow: 0 1px 2px #d1d1d1; -webkit-box-shadow: 0 1px 2px #d1d1d1; box-shadow: 0 1px 2px #d1d1d1; */ } .printDiv { font-family: COURIER; color: Black; font-size: 12px; text-shadow: 1px 1px 0px #fff; } .printingdiv { border :solid thin; } .size14 { font-size: 14px; } .fontBold { font-weight: bold; } .size10 { font-size: 10px; } .sepAmount{ font-weight: bold; background-color:#eeeeee; } .list { margin-left: 80px; } .landscape { width: 100%; height: 100%; margin: 0% 0% 0% 0%; filter: progid:DXImageTransform.Microsoft.BasicImage(Rotation=1); } #nonPrintable{display:none;} .nonPrintable{display:none;} .pageBreakBefore {page-break-before:always;} .pageBreakAfter {page-break-after:always;} .pagebreakAvoid tr {page-break-inside: avoid;} .hideQuotationHeadingCls{ display:none; }'
                        + '</style>'
                        + '<link rel="stylesheet" href="css/print.css" rel="stylesheet" media="print" />'
                        + '</head><body>';
                myboiler += boilerPrint;
                myboiler += '</body></html>';
                var printWin = window
                        .open('', '',
                                'left=0,top=0,width=1,height=1,toolbar=0,scrollbars=2,status=0');
                printWin.document.write(myboiler);
                printWin.document.close();
                printWin.focus();
                printWin.print();
                printWin.close();
    });
}

function sendMialRecieptDetailToParent() {
	var studentId = undefined;
	
	try {
		studentId = getSelectedStudentId2();
	} catch (e) {

	}
	if (studentId == undefined) {
		studentId = gStudentInvoiceRelatedObject.studentId;
	}
	
	$.ajax({
		url : 'sendMailRecieptDetailToParentMail.json',
		data:{
			studentId:studentId
		},
		dataType : 'text',
		async : false,
		junoSpinner:true,
		success : function(jArray) {
			
		},
		error : function() { 
			getCustomAlertMessage("alert_error");
		}
	});
	
	
}

function editStudentBillNarration(billId){
var desc=$('#descId').text();

var boiler=`<table class="table table-bordered table-condensed" id="">
			<tr><th>Previous Narration :</th><td>${desc}<th></tr>
			<tr><th>update Here</th><td><textarea id="narrEditId" rows="4" cols="80" style="width: 351px;" onkeyup="shohideSvaeBtn()"></textarea></td></tr>
			</table>`;
			 var foot=`<input type="button" class="btn btn-mini btn-success" style="display:none;" id="updateBtn" value="Submit" onclick="updatenarrationInStudentBill(${billId});">`;
		
			juno.modal({
				 id:"narrEditModelId",
                 body:boiler,             
				 width:'600px',
			     height: '150px', 
				 footer: foot  
         });

}

function shohideSvaeBtn(){
	var textVal=$('#narrEditId').val();
	if(textVal!='')
		$('#updateBtn').show();
	else
	   $('#updateBtn').hide();
}

function updatenarrationInStudentBill(billId){
	var textVal=$('#narrEditId').val();
	$.ajax({
			url : 'updatenarrationInStudentBill.json',
			dataType : 'text',
			type : 'POST',
			data:{
				billId:billId,
				textVal:textVal
			},
			async : false,
			junoSpinner:true,
			success : function(Msg) {
				if(Msg=="true"){
					jAlert("saved successfully");
				}else{
					jAlert("saved Failed","Error");
				}
				
			},
			error : function() {
				jAlert("Something went wrong, Please try after some time","Error");
			}
		});
}

function editStudentFeeInstallment(studFeeInstallId,amount,studentFeeInvoiceId,insNo,insDate){
	
var totalInAmt=eval($('#totalOfInstallmentID').text());
var grandtotal=$('.grandTotal').text();
var remainingAmt=eval(grandtotal-totalInAmt);

var boiler=`<span style="display:none:color:red" id="txtAmtErrorId"></span>
			<table class="table table-bordered table-condensed" id="">
			<tr><th>Installment No :</th><td>${insNo}</td></tr>
			<tr><th>Installment Date :</th><td>${insDate}</td></tr>
			<tr><th>Previous Amount :</th><td class="gems_currency">${amount}</td></tr>
			<tr><th>Remaining Installment Amount :</th><td class="gems_currency" id="remainTxtId">${remainingAmt}</td></tr>
			<tr><th>Amount</th><td><input type="text" style="text-align:right" id="txtAmountInstallId" onkeyup="showInstallhideSvaeBtn(${amount})"></td></tr>
			</table>`;
			 var foot=`<input type="button" class="btn btn-mini btn-success" style="display:none;" id="updateInstallBtn" value="Submit" onclick="updateStudInstallmentId(${studFeeInstallId},${amount},${studentFeeInvoiceId});">`;
		
			juno.modal({
				 id:"installmentPopuplId",
                 body:boiler,             
				 width:'600px',
			     height: '150px', 
				 footer: foot  
         });

}


function showInstallhideSvaeBtn(amount){
	var textVal=eval($('#txtAmountInstallId').val());
	var grandtotal=eval($('.grandTotal').text());
	var instalmenttotal=eval($('#totalOfInstallmentID').text());
	var remain=eval(grandtotal)-((eval(instalmenttotal)-eval(amount))+eval(textVal));//eval(remainTotal)-eval(textVal);
	
	if(textVal!='' || textVal!=undefined){
		$('#remainTxtId').text(remain);
		$('#updateInstallBtn').show();
	}else{
		$('#remainTxtId').text(0.0);
		 $('#updateInstallBtn').hide();
		}
}

function updateStudInstallmentId(installmentId,originalAmt,studentFeeInvoiceId){
	var textVal=$('#txtAmountInstallId').val();
	var totalInAmt=eval($('#totalOfInstallmentID').text());
	
	var totalAmt=(eval(totalInAmt)-eval(originalAmt))+eval(textVal);
	var grandtotal=$('.grandTotal').text();
	
	var flag=true;
	if(grandtotal<totalAmt){
		$('#txtAmtErrorId').show();
		$('#txtAmtErrorId').html('<b style="color:red">Installment Total is Greater than Grand Total</b>');
		flag=false;
		return false;
	}
	if(flag){
	$.ajax({
			url : 'updateStudInstallmentIdAmount.json',
			dataType : 'text',
			type : 'POST',
			data:{
				installmentId:installmentId,
				textVal:textVal
			},
			async : false,
			junoSpinner:true,
			success : function(Msg) {
				if(Msg=="true"){
					getStudentFeeInstallmentDetails(studentFeeInvoiceId);
					$('#installmentPopuplId').modal('hide');
					jAlert("update successfully");
				}else{
					jAlert("saved Failed","Error");
				}
				
			},
			error : function() {
				jAlert("Something went wrong, Please try after some time","Error");
			}
		});
		}else{
			jAlert("Please update correct calculation","Error");
		}

}

function mapToOtherFeeStructure(studentBillId,instituteCourseId,manualAccountHeadId,BillNo,receiptdate,taxDetail,installment,nextPaymentDate,studentId)
{
	
	$('#commonDialog').modal('show');
	var studentname=$('#tdNameOfStudent').html();
	$('#commonDialogHeader').html('Student Name:'+studentname);
	var boiler = '<table class="table table-bordered table-condensed">'+
	'<tr><td>Please Select Date</td><td colspan="3"><input type="text" id="settleDate"/ ></td></tr>'+
	'<tr><td>Please Select Fee Structure </td><td colspan="3"><select id="feestructure"  onchange="">/td></tr>';
	
	boiler+='<tr><td colspan="5" style="text-align:center"><input type="button" value="Map"  onclick="mapBillToOtherFeeStructure('+studentBillId+','+instituteCourseId+','+manualAccountHeadId+',\''+BillNo+ '\',\''+receiptdate+'\',\''+taxDetail+'\',\''+installment+'\',\''+nextPaymentDate+'\')" class="btn btn-mini btn-inverse"></td></tr>';

	boiler+='</table>';
	$('#commonDialogBody').html(boiler);
	$('#settleDate').datepicker({
		dateFormat:"M dd,yy",
		autoclose:true,
		maxDate: 0
	});
	FeeStructureDetails(studentId);
	$('#settleDate').val(receiptdate);
	$('#settleDate').attr('disabled',true);
}

function mapBillToOtherFeeStructure(studentBillId,instituteCourseId,manualAccountHeadId,billNo,receiptdate,Taxdetails,installment,nextPaymentDate)
{
	
	var userId=$('#userId').val();
	var feeStructureId= $('#feestructure option:selected').val();
	var feeStructureName= $('#feestructure option:selected').text();
	if(feeStructureId==0 || feeStructureId==undefined || feeStructureId==''){
		jAlert('Please select fee Structure');
		return false;
	}
	
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	var dateOfAdmission = $('#txtAdmissionDateStudent').val();
	
	console.log(Taxdetails);
	var array = new Array();
	var paymentMode='';
	$('.PaymentDetailArr'+studentBillId).each(function(){
		 amount=$(this).find('td').eq(0).text();
	     paymentMode=$(this).find('td').eq(1).text();
		var bankName=$(this).find('td').eq(3).text();
		var branch=$(this).find('td').eq(4).text();
		var chequeDDNo1=$(this).find('td').eq(2).text();
		var chequeDDNo='';
		var chequeDDDate='';
		if(chequeDDNo!=''){
			  chequeDDNo=chequeDDNo1.split(' (')[0];
			  splitstr=chequeDDNo1.split(' (')[1];
			  chequeDDDate=splitstr.replace(')','');
		}
	
		if (paymentMode != '0' && paymentMode != '') {
					var temp = '';
					
					if (paymentMode == 'Cash') {
						temp = '{' + '\"paymentMode\":\"' + paymentMode + '\",'
								+ '\"amount\":\"' + amount + '\",'
								+ '\"bankName\":\"\",' + '\"chequeDDNo\":\"\",'
								+ '\"chequeDDDate\":\"\",' + '\"branch\":\"\"'
								+ '}';
					} else {
						temp = '{' + '\"paymentMode\":\"' + paymentMode + '\",'
								+ '\"amount\":\"' + amount + '\",'
								+ '\"bankName\":\"' + bankName + '\",'
								+ '\"chequeDDNo\":\"' + chequeDDNo + '\",'
								+ '\"chequeDDDate\":\"' + chequeDDDate + '\",'
								+ '\"branch\":\"' + branch + '\"' + '}';
					}
					array.push(temp);
				}
			});
	array = '[' + array.join(',') + ']';
	jConfirm('Are you sure you want to map this '+billNo+' to the this Fee Structure '+feeStructureName,'', function(r) {
	if (r) {
	
		$.ajax({
			url:'saveBillingInformationToServer.json',
			data:{
				studentBillId : studentBillId,
				feeInvoiceId : feeStructureId,
				accountHeadId:manualAccountHeadId,
			    array:array,
				billNoOld:billNo,
				userId:userId,
				instituteCourseId:instituteCourseId,
				paymentMode:paymentMode,
				receiptDate:receiptdate,
				feeItemId:feeItemId,
				Taxdetails:Taxdetails,
				dateOfAdmission:dateOfAdmission,
				installmentNo : installment,
				nextPaymentDate : nextPaymentDate
				},
			dataType:'json',
			type:'POST',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(responseJArray){
               var flag = responseJArray.responseFlag;
				if (flag.toString() == '1') {
					showSuccessMessage("Bill successfully map with "
							+ feeStructureName, 10000);
					getStudentBillingDetails(function(billJArray) {
						showStudentBillingDetails(billJArray);
					});
				} else {
					showErrorMessage("Bill mapping failed! "
							+ responseJArray.responseText, 20000);
					try {
						callback();
					} catch (e) {

					}
				}
			
			$('#commonDialog').modal('hide');
			},error:function(){

			}
		});
	  }
	});
}

function configurationOfFeesHead(){
	var feesHeadArrays=new Array();
	$('#configurationofFeesHeadMdl').modal('show');
	var financePolicyId=$('#cbInstiCourseId option:selected').attr("faspolicy");
	/*if($('#customerHelper').val() == "KURUKSHETRA_UNIVERSITY" ) {
		financePolicyId=1;
	} if($('#customerHelper').val() == "RAMAIAH_UNIVERSITY" ) {
		financePolicyId=4;
	}*/
	
	$.ajax({
		url:'getAllFeesHead.json?financePolicyId='+ financePolicyId,
		dataType:'json',
		type:'GET',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			var boiler='';
			boiler+='<fieldset class="custom-fieldset" style="width:775px;"><legend> Fees Head</legend>'+
					'<table class="table table-bordered table-condensed">'+
			'<tr><th>Check All &nbsp;&nbsp;<br><input type="checkbox" class="chkAllFeeHead" onclick="checkedAllFeeHead();"></th><th>Sr No.</th><th>Fees Head</th><th>Deposit Fees &nbsp;&nbsp;<input type="checkbox" class="chkAllDepositeFeeHead" onclick="checkedAllDepositFeeHead();"></th><th>Refundable Fees &nbsp;&nbsp;<input type="checkbox" class="chkAllRefundableFeeHead" onclick="checkedAllRefundableFeeHead();"></th><th style="width:85px;">Time Unit</th><th>Priority</th><th>Display Name</th>';
			for(var i=0;i<jArray.length;i++){
				boiler += '<tr class="checkedConfigurFeesHead">'+
						'<td><input type="checkbox" style="text-align:center;"  value="chkFeeHead" class="chkFeeHead" id="'+jArray[i]["feeItemHeadUniveseId"]+'_checkFeeHead"></td>'+
						'<td>'+eval(i+1)+'</td><td>'+jArray[i]["feeHeadName"]+'</td>'+
						'<td style="display:none;" class="feeItemHeadUniveseId">'+jArray[i]["feeItemHeadUniveseId"]+'</td>'+
						'<td style="text-align:center;width:75px;"><input  type="checkbox"  value="depositFee" class="feeHeadMode depositFeeHead" id="'+jArray[i]["feeItemHeadUniveseId"]+'_depositFee" onclick="chkCommonFeeHeadThroughDeposite(this);"></td>'+
						'<td style="text-align:center;width:75px;"><input type="checkbox"   value="refundable" class="feeHeadMode refundableFeeHead" id="'+jArray[i]["feeItemHeadUniveseId"]+'_refundable" onclick="chkCommonFeeHeadThroughRefundable(this);"></td>'+
						'<td ><select id="'+jArray[i]["feeItemHeadUniveseId"]+'_oneTimeFees" class="feeHeadModeCombo" style="width:125px;">'+
						'<option value="OneTime">One Time</option>'+
						'<option value="Yearly">Yearly</option>'+
						'<option value="Monthly">Monthly</option>'+
						'<option value="Daily">Daily</option>'+
						'</select></td>'+
						'<td style="width:95px;"><input type="text"  style="width:50px" class="validnum txtpriority" value="'+parseInt(jArray[i]["priority"])+'"></td>'+
						'<td><textarea type="text"  class="textDisplayName" id="'+jArray[i]["feeItemHeadUniveseId"]+'_displayName" ></textarea></td></tr>';
			}
			boiler +='<tr><td colspan="8" style="text-align:center"><input type="button" value="Save" class="btn btn-mini btn-inverse" onclick="saveCheckedConfigurFeesHead();"></td></tr></table></fieldset>';
			boiler +='<div><fieldset class="custom-fieldset"><legend> Selected Fees Head</legend><div id="checkedFeesHeadId" style="text-align:left;flex-wrap: wrap;"></div>';
			$('#configurationofFeesHeadBody').html(boiler);
			var selectedFeeHead="";
			var cnt=1;
			for(var i=0;i<jArray.length;i++){
				if(jArray[i]["depositFee"]=="Yes"){
					$('#'+jArray[i]["feeItemHeadUniveseId"]+'_depositFee').attr('checked',true);
					$('#'+jArray[i]["feeItemHeadUniveseId"]+'_checkFeeHead').attr('checked',true);
					feesHeadArrays.push(jArray[i]["feeHeadName"]);
					selectedFeeHead+='<span class="label label-inverse"><b>'+eval(cnt++)+'.'+jArray[i]["feeHeadName"]+'<b></span>&nbsp&nbsp';
					if(cnt%5==0)
						selectedFeeHead+='<br>';
				}
				if(jArray[i]["refundable"]=="Yes"){
					if($.inArray(jArray[i]["feeHeadName"],feesHeadArrays)==-1){
						feesHeadArrays.push(jArray[i]["feeHeadName"]);
						selectedFeeHead+='<span class="label label-inverse"><b>'+eval(cnt++)+'.'+jArray[i]["feeHeadName"]+'<b></span>&nbsp&nbsp';
						if(cnt%5==0)
							selectedFeeHead+='<br>';					
					}
					$('#'+jArray[i]["feeItemHeadUniveseId"]+'_refundable').attr('checked',true);
					$('#'+jArray[i]["feeItemHeadUniveseId"]+'_checkFeeHead').attr('checked',true);
				}
				$('#'+jArray[i]["feeItemHeadUniveseId"]+'_oneTimeFees').val(jArray[i]["oneTime"]);
				var displayname=jArray[i]["displayName"];
				if(jArray[i]["displayName"]==""){
					displayname=jArray[i]["feeHeadName"];
					}
				$('#'+jArray[i]["feeItemHeadUniveseId"]+'_displayName').val(displayname);
			}
			selectedFeeHead+='</fieldset></div>';
			$('#checkedFeesHeadId').html(selectedFeeHead);
			$('.validnum').numeric();
		}
	});
}
function chkCommonFeeHeadThroughDeposite(ele) {
	if($('.depositFeeHead').is(':checked')){
		$(ele).closest('tr').find('td').eq(0).find('.chkFeeHead').attr('checked',true);
	}else {
		$(ele).closest('tr').find('td').eq(0).find('.chkFeeHead').attr('checked',false);
	}
}
function chkCommonFeeHeadThroughRefundable(ele) {
	if($('.refundableFeeHead').is(':checked')){
		$(ele).closest('tr').find('td').eq(0).find('.chkFeeHead').attr('checked',true);
	}else {
		$(ele).closest('tr').find('td').eq(0).find('.chkFeeHead').attr('checked',false);
	}
}
function checkedAllFeeHead()
{
	if($('.chkAllFeeHead').is(':checked')){
		$('.chkFeeHead').attr('checked',true);
		//$('.feeHeadMode').attr('checked',true);
	}
	else {
		$('.chkFeeHead').attr('checked',false);
		//$('.feeHeadMode').attr('checked',false);
	}
}
function checkedAllDepositFeeHead() {
	if($('.chkAllDepositeFeeHead').is(':checked')){
		$('.depositFeeHead').attr('checked',true);
		$('.chkFeeHead').attr('checked',true);
	}
	else {
		$('.depositFeeHead').attr('checked',false);
		$('.chkFeeHead').attr('checked',false);
	}
	
}
function checkedAllRefundableFeeHead() {
	if($('.chkAllRefundableFeeHead').is(':checked')){
		$('.refundableFeeHead').attr('checked',true);
		$('.chkFeeHead').attr('checked',true);
	}
	else {
		$('.refundableFeeHead').attr('checked',false);
		$('.chkFeeHead').attr('checked',false);
	}
}
function saveCheckedConfigurFeesHead()
{
	var saveFeeHeads='';
	$('.checkedConfigurFeesHead').each(function(){
		var feeItemHeadUniveseId=$(this).find('.feeItemHeadUniveseId').html()==undefined || $(this).find('.feeItemHeadUniveseId').html()==""?"-1":$(this).find('.feeItemHeadUniveseId').html();
		var oneTime=$(this).find('.feeHeadModeCombo').val();
		var displayName=$(this).find('.textDisplayName').val();
		var priority=$(this).find('.txtpriority').val();
		var feeHeadMode='';
		if(isNaN(priority)||priority==""){
			priority=0;
		}
		var flag=false;
		$(this).find('.feeHeadMode').each(function(){
			if ($(this).is(':checked')){
				flag=true;
				feeHeadMode+=$(this).val()+'~';
			}
		});
		if(flag==false){
			feeHeadMode+='aa'+'~';
		}
		feeHeadMode = feeHeadMode.substring(0,feeHeadMode.length -1);
		saveFeeHeads+=feeItemHeadUniveseId+'@'+oneTime+'@'+displayName+'@'+feeHeadMode+'@'+priority+'#';
	});
	saveFeeHeads = saveFeeHeads.substring(0,saveFeeHeads.length -1);

	if(saveFeeHeads.length>0){
		
		$.ajax({
			url:'SaveFeesHeadconfiguration.json',
			dataType:'text',
			data:{saveFeeHeads:saveFeeHeads.toString()},
			type:'POST',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jObject){
				jAlert("Saved Successfully");
				$('#configurationofFeesHeadMdl').modal('hide');
			},
			error:function(){

			}
		});
	}
}
function getstudentspaymentattchments(billId,tableClass) {
    
    var boiler = "";
    if(tableClass==undefined)tableClass="StudentBill";
    boiler += `<div class="card"><table class="table table-bordered table-condensed "><thead></thead>
             <tr><td><div id="studentPaymentDetailDocDiv"></div></td></tr>
             </table></div>`;
    juno.modal({
        id: "studentPaymentuploadedDocModel",
        header: 'Uploaded Document',
        body: boiler,
        width: '550px',
        height: '150px'
    });
    $('#studentPaymentuploadedDocModel .modal-footer').hide();
    $.ajax({
        url:'getStudentPaymentAttchmentByBillId.json',
        dataType:'json',
        data:{
			billId:billId,
        	tableClass:tableClass
        },
        type:'POST',
        beforeSend: function() {
            startCommonAjaxSpinner();
        },
        complete: function() {
            stopCommonAjaxSpinner();
        },
        success:function(jArray){
            var docBoiler = '';
            for(var i = 0;i<jArray.length;i++) {
                docBoiler = $.DmsViewDocuments({
                    data:jArray[i].docArr, 
                    isCreator:false,
                    viewFullScreen:true
                });
            }
            $('#studentPaymentDetailDocDiv').html(docBoiler);
            $( "a[title*='Preview']" ).hide();
        },
        error:function(){
            
        

        }
    });
    
}
function onChangeShoWAppDate(){

	 if($('#feeMultiplicationFactor').prop('checked')){
	   $('#applLabelId').show();
	   $('#txtapplicationDate').show();
	   $('#txtMultifactor').show();
	   
	}else{
		$('#txtapplicationDate').val('');
		$('#applLabelId').hide();
		$('#txtapplicationDate').hide();
		 $('#txtMultifactor').hide();
	}
	
}
function checkEditDeleteAuthorityForInvoice() {
    jAlert('You doesn\'t have Edit Invoice Authority');
}

function getProgramList() {
	if ($('#cmbCampus').val() == undefined && window.g_reqParaObj?.icsId == undefined) {
		var ProgramType = $('input[name="programType"]:checked').val() != undefined ? $('input[name="programType"]:checked').val() : "";
		var boiler = '<option value="0">Select</option>';
		$.ajax({
			url: 'programListByRoleForAnnouncement.json',
			dataType: 'json',
			data:{
				linkURL:window.location.toString().split('_')[1],
				ProgramType:ProgramType
			},
			type: 'GET',
			async: false,
			junoSpinner: true,
			success: function(jArray) {
				for (var i = 0; i < jArray.length; i++) {
					var faspolicy = jArray[i]["financepolicy"];
					if (jArray[i]["instCourseId"] == $('#instituteCourseId').val()) {
						boiler += '<option selecte="selected" value = "' + jArray[i]["instituteCourseId"] + '" feeRes="' + jArray[i]["feeRest"] + '" courseId = "' + jArray[i]["courseId"] + '" couseType = "' + jArray[i]["couseType"] + '" subCourseType="' + jArray[i]["subCourseType"] + '" isGenerateRandomNumber="' + jArray[i]["isGenerateRandomNumber"] + '" instituteId="' + jArray[i]["instituteId"] + '" courseNameOnly="' + jArray[i]["courseNameOnly"] + '" faspolicy="' + faspolicy + '">' + jArray[i]["courseName"] + '</option>';
					} else {
						boiler += '<option  value = "' + jArray[i]["instituteCourseId"] + '" feeRes="' + jArray[i]["feeRest"] + '" courseId = "' + jArray[i]["courseId"] + '" couseType = "' + jArray[i]["couseType"] + '" subCourseType="' + jArray[i]["subCourseType"] + '" isGenerateRandomNumber="' + jArray[i]["isGenerateRandomNumber"] + '" instituteId="' + jArray[i]["instituteId"] + '" courseNameOnly="' + jArray[i]["courseNameOnly"] + '">' + jArray[i]["courseName"] + '</option>';
					}
					if (jArray[i]["instCourseId"] == undefined) {
						var instituteCourseId = jArray[i]["instituteCourseId"];
						if (instituteCourseId.toString().indexOf("-") != -1)
							allInstituteCourseDetailArr.push((jArray[i]["instituteCourseId"]).split('-')[0]);
						else
							allInstituteCourseDetailArr.push(jArray[i]["instituteCourseId"]); 
					}
				}
				$('#cbInstiCourseId').html(boiler);
				convertComboToSearchable('#cbInstiCourseId');
				$('#cbInstiCourseIds').html(boiler);
				convertComboToSearchable('#cbInstiCourseIds');
				$('#cbInstiCourseId1').html(boiler);
				convertComboToSearchable('#cbInstiCourseId1');
				$('#cbInstiCourseIdss').html(boiler);
				convertComboToSearchable('#cbInstiCourseIdss');

				$('#cbInstiCourseId').data('allInstituteCourseDetailArr', allInstituteCourseDetailArr);
				$('#cbInstiCourseIds').data('allInstituteCourseDetailArr', allInstituteCourseDetailArr);
				$('#cbInstiCourseId :nth(1)').attr("selected", "selected").trigger('change');
				$('#cbInstiCourseIds :nth(1)').attr("selected", "selected").trigger('change');
				$('#cbInstiCourseIdss').data('allInstituteCourseDetailArr', allInstituteCourseDetailArr);
				$('#cbInstiCourseId1 :nth(1)').attr("selected", "selected").trigger('change');

				boilerTmppppp = boiler;
				$('#valueOfProgram').val(boiler);
				setTimeout(function() {
					$('#cbInstiCourseId').trigger('change');
				}, 40);

				try {
					autoReloadStudentSubjectAllocation();
				} catch (e) { }
				programListByRoleForAnnouncement = jArray;
			}, error: function() {
				getCustomAlertMessage("alert_error");
			}
		});
	} else {

		//Student Course allocations and Employee C Allocation
		var cmbBoiler = `<option selecte="selected" value="${window.g_reqParaObj?.instituteCourseId}" feeres="false" courseid="${window.g_reqParaObj?.courseId}" cousetype="${window.g_reqParaObj?.courseType}" subcoursetype="${window.g_reqParaObj?.courseType}" isgeneraterandomnumber="false" instituteid="${window.g_reqParaObj?.instituteId}" coursenameonly="MBA">ISBS - MBA - MBA</option>`;
		$('#cbInstiCourseId').html(cmbBoiler);

		var cmbSemBoiler = `<option selecte="selected" value='${window.g_reqParaObj?.batchSemCapId}$${window.g_reqParaObj?.acadBatch}$${window.g_reqParaObj?.pattern}$${window.g_reqParaObj?.pattern}$${window.g_reqParaObj?.semId}$${window.g_reqParaObj?.icsId}'>${window.g_reqParaObj?.semName} ${window.g_reqParaObj?.acadBatch}</option>`;
		$('#semesterBatchId').html(cmbSemBoiler);

		if (window.g_reqParaObj?.dashboardFlg != undefined && window.g_reqParaObj?.dashboardFlg == 'iframeIU') {
			//MANAGE Student UI
			var studentHtml = `<option selecte="selected" semesterbatchid="${window.g_reqParaObj?.batchSemCapId}" value="${window.g_reqParaObj?.icsId}-${window.g_reqParaObj?.syllabusId}" academicyear="${window.g_reqParaObj?.acadBatch}">${window.g_reqParaObj?.semName}(${window.g_reqParaObj?.acadBatch})</option>`;
			$('#cbAcademicBatch').html(studentHtml);
			$('#btnSubmit').trigger('click');
			$('.cls_programmeSelection').hide();
		} else {
			// Student Course allocations and Employee C Allocation
			var studentHtml = `<option selecte="selected" value='${window.g_reqParaObj?.acadBatch}$${window.g_reqParaObj?.semId}$${window.g_reqParaObj?.icsId}'>${window.g_reqParaObj?.semName}(${window.g_reqParaObj?.acadBatch})</option>`;
			$('#cbAcademicBatch').html(studentHtml);
		}

		$('#btnGetSubjectAllocationPlan').trigger('click'); 
		$('#tblOuterFrame').hide();
		$('.cls_schedule').hide();

		//Student Course allocations
		$('#cbAcademicBatch').trigger('change')
		$('#programmAndBatchTr').hide();
		//$('#breadcrumb').html(`<h1 style="margin-bottom: 15px;"><b>${window.g_reqParaObj?.breadInfo}</b></h1>`);
		$('#SubmitBtn').removeClass('btn-mini')
		$('#SubmitBtn').addClass('btn-primary')
	}
}

function studentAdvanceAdjustment(billId,billNo,amount,desc){
	
	  $.ajax({
        url:'getAdvanceFeesHeadsByBillId.json',
        dataType:'json',
        data:{
			billId:billId
        },
        type:'POST',
        beforeSend: function() {
            startCommonAjaxSpinner();
        },
        complete: function() {
            stopCommonAjaxSpinner();
        },
        success:function(jArray){
			var boiler =`<span style="float:right"><b>Total Amount: <span class="gems_currency">${amount}</span></b></span>`
            boiler += `<table class="table table-bordered table-condensed ">
            				<tr><thead>
            				<th>Sr No.</th>
            				<th>Account Head Name</th>
            				<th>Amount</th>
            				</thead></tr>`;
            for(var i = 0;i<jArray.length;i++) {
               boiler+=`<tr class="adjustmentCls" accountHeadId ="${jArray[i]['accountHeadId']}" >
               			<td style="text-align:right;">${eval(i+1)}</td>
               			<td>${jArray[i]['accountName']}</td>
               			<td style="text-align:right;"><input class="adjustAmt numeric" type="text" style="text-align:right;" onkeyup="calculateAdvanceBillAdjustmentAmount(${amount},this)" id="txtAmount-${jArray[i]['accountHeadId']}"></td>
               			</tr>`;
            }
            boiler+=`<tr><td style="text-align:center;" colspan="4"><a class="btn btn-success btn-mini" onclick="saveAdvanceBillAdjustment(${billId},${amount})"><i class=""></i> <b>Save</b></a></td></tr>
            		</table><br>
            		<span style="float:right"><b>Remaining Amount :<span id="remainingAmt"></b></span>`
            
			juno.modal({
				id: "studentAdvBillSettlementModel",
				header: 'Advance Bill Settlement of Bill No :'+billNo,
				body: boiler,
				width: '750px'
			});
            $('.numeric').numeric();
            calculateAdvanceBillAdjustmentAmount(amount);
        },
        error:function(){
        }
    });
}

function calculateAdvanceBillAdjustmentAmount(amount,ele){
	var adjustAmount = 0
	$('.adjustAmt').each(function(){
		adjustAmount+=eval($(this).val()!=""?$(this).val():0)
	})
	$('#remainingAmt').text(eval(amount) - eval(adjustAmount));
	if(adjustAmount>amount){
		jAlert("The total amount should be less than bill amount !");
		$('#remainingAmt').text("0");
		$(ele).val(0);
	}
}

function saveAdvanceBillAdjustment(billId,billAmount){
	var totalSum = 0;
	var adjustmentDetailArr = new Array();
	$('.adjustmentCls').each(function(){
		var accountHeadId = $(this).closest('tr').attr('accountHeadId');
		var amount = $('#txtAmount-'+accountHeadId).val()!='' ? $('#txtAmount-'+accountHeadId).val():0;
		
		adjustmentDetailArr.push(accountHeadId+"_"+amount);
		totalSum+=eval(amount);
	});
	
	if(billAmount>totalSum || billAmount<totalSum){
		jAlert("The total sum of ajustment amount should not match with bill amount !");
		return false;
	}
	
	$.ajax({
        url:'saveStudentAdvanceBillAdjustmentDetails.json',
        dataType:'json',
        data:{
			billId:billId,
			adjustmentDetailArr:adjustmentDetailArr.toString()
        },
        type:'POST',
        beforeSend: function() {
            startCommonAjaxSpinner();
        },
        complete: function() {
            stopCommonAjaxSpinner();
        },
        success:function(jArray){
			if(jArray.error=="false"){
				jAlert("Bill Adjust Successfully");
				$('#studentAdvBillSettlementModel').modal('hide');
			}else{
				jAlert("Something went wrong, Please try after some time","Error");
			}
				
        },
        error:function(){
        }
    });
}

function getCurrencyCodeByAdmissionType(admissionTypeId, Obj) {
	let admissionTypeArray = gAdmissionTypeArray==undefined ? new Array():gAdmissionTypeArray;
	let currCode = admissionTypeArray.find(o => o.admissionTypeId === admissionTypeId)?.currencyCode;
	return (currCode!=undefined ? currCode :'')
}

function recalculatePaymentDetail(studentBillId,instituteCourseId,studInstiCourSemBatchId,billNo){
	
jConfirm('Are you sure you want to recalculate this '+billNo ,'', function(r) {
	if (r) {
		
		$.ajax({
	        url:'recalculateStudentBills.json',
	        dataType:'text',
	        data:{
				billId:studentBillId,
				instituteCourseId:instituteCourseId,
				studInstiCourSemBatchId:studInstiCourSemBatchId
	        },
	        type:'POST',
	        beforeSend: function() {
	            startCommonAjaxSpinner();
	        },
	        complete: function() {
	            stopCommonAjaxSpinner();
	        },
	        success:function(msg){
				if(msg=="success"){
					jAlert("Bill Recalculate Successfully");
				}else{
					jAlert("Something went wrong, Please try after some time","Error");
				}
					
	        },
	        error:function(){
	        }
	    });
 		 }
	});
}

function installmentDtConfiguration(){
        let instNo = $('#cmbInstallment option:selected').val();
        if(instNo!=0){
                $('#installmentDtTr').css('display','');
        }else{
                $('#installmentDtTr').css('display','none');
        }
}

