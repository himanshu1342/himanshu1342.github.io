/**
 * @since 23 APR 13 
 */ 
var gRoomname= "";
var gRoomType="";
var gOccupantInvoiceRelatedObject = undefined;
var tempId='';
var globalSource = 0; 

$(function(){
    if($('#customerHelper').val() =="MIT") {
        $('#txtStudentSearchBarInvoiceHostel').data('isEditDeleteAuth',false);
    }else {
        $('#txtStudentSearchBarInvoiceHostel').data('isEditDeleteAuth',true);
    }
	$('#otherReceiptModal').modal({
		backdrop: 'static',
		keyboard: false,
		show: false
	}).css({
		width: '500px',
		'margin-left': function () {
			return -($(this).width() / 2);
		}
	});
	
	$('#divRoomTypeSpecifyOptionDialog').modal({
		show:false,
	}).css({
		width:'500px',
		'margin-left':function(){
			return -($(this).width()/2);
		},
	});
	$('#divStudentInvoiceNew').find('input[name=" "]').click(function(){
		var val = $(this).val();
		//alert(val);
		if(val == 'Yes'){
			validateStudentAdmissionProfile();
		} else {
			$('#divShowSponsorshipChoiceOption').find('.btnproceedToOccupantInvoiceGeneration').removeAttr('disabled');
		}
	});

	//getRenewalDetailPolicy();

	$(document).ready(function() {
		
		var role = $('#hdnUserRole').val();
        var url = "populateStudentSearchListByRenewalDetailId.json";
        if(role=="hosteladmin" && $('#customerIdentificationObj').val() == 'KURUKSHETRA_UNIVERSITY')
            url ="populateStudentSearchListByRenewalDetailId.json";	
		
		$("#searchingImg1").hide();
		// use this hash to cache search results
		window.query_student_list_cache = {};
		$('#txtStudentSearchBarInvoiceHostel').typeaheadNew({
			source : function(typeahead,query) {
				var renewalDetailPolicyId = $('#cmbPolicies').val();
				// if in cache use cached value, if don't wanto use cache remove this if statement
				if (query_student_list_cache[query+'-'+renewalDetailPolicyId]) {
					typeahead.process(query_student_list_cache[query+'-'+renewalDetailPolicyId]);
					return;
				}
				if (typeof searching != "undefined") {
					clearTimeout(searching);
					typeahead.process([]);
				}
				searching = setTimeout(function() {
					if(query.trim() != ''){
						$.ajax({
							//populateStudentSearchListByRenewalDetailId
							url:url, // "populateStudentSearchListByRenewalDetailIdForHostel.json?renewalDetailPolicyId="+renewalDetailPolicyId,
							data:{q:query,renewalDetailPolicyId:renewalDetailPolicyId,linkURL:window.location.toString().split('_')[1]},
							dataType : 'json',
							beforeSend: function() {
								$("#searchingImg1").show();
							},
							complete: function() {
								$("#searchingImg1").hide();
							},
							success: function(data){
								query_student_list_cache[query+'-'+renewalDetailPolicyId] = data;
								typeahead.process(data);
							},
						});						
					}
				}, 400);
			},
			highlighter: function(item) {
				var searchBoiler = '<table class="searchResultTable" style="width:320px;"><tr><td class="image" height="40px" width="40px" rowspan="3"><img src="' + item.imageUrl + '" /></td><td class="data">' + item.name + '</td></tr><tr><td class="data">' + item.Desc+'</td></tr></tr><tr><td class="data">' + item.contactNo+'</td></tr></table>';
				return(searchBoiler);
			},
			limit: 5,
			property: "name",
			onselect:function(item){
				//alert('HI I M called');
				getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(item.studentBatchId);
				$('#txtStudentSearchBarInvoiceHostel').attr('studentBatchId',item.studentBatchId);
			}
		});
	});

});


var gStudentBatchId = 0;
function getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(studentBatchId,callBack){
	gStudentBatchId=studentBatchId;
	$.ajax({
		url:'getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId.json',
		data:'studentBatchId='+studentBatchId,
		dataType:'json',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			if(jArray.length == 2){
				showHostelStudentOverallFeeDueReportForInvoiceByStudentBatchId(jArray);
			}		
			try{
				callBack(true);
			}catch(e){}
		}
	});
}

var g_financePolicyId=0;
var g_instituteCourseStrengthId=0;
var g_instituteCourseId=0;
var g_TotalFeesReceivable=0;
var gStudentListJsonArray=[];
var studentName="";
var studentId=0;
	
function showHostelStudentOverallFeeDueReportForInvoiceByStudentBatchId(jArray,callBack){
	var feeStructureJArray = jArray[0];
	var studentListJsonArray = jArray[1];
	gStudentListJsonArray = jArray;
	var boiler = '';
	$('.studentFeeInviceListDetail').show();
	var occupantId = '';
	
	var instituteCourseStrengthId=0;
	var instituteCourseId=0;
	var hostelPlanId=0;
	var hostelPolicyId=0;
	
	var invoiceId=0;
	var cancelReason="";
	occupantId = 0;
	globalSource = 0;
	g_TotalFeesReceivable =0;
	studentName="";
	studentId=0;
	var hostelName ='';
	var floorName ='';
	var roomName = '';
	var roomType = '';
	
	if(studentListJsonArray.length > 0){
		tempId ='';
		occupantId = studentListJsonArray[0].occupantId;
		studentId=studentListJsonArray[0].student;
		instituteCourseStrengthId=studentListJsonArray[0].instituteCourseStrengthId;
		studentName=studentListJsonArray[0].name;
		instituteCourseId=studentListJsonArray[0].instituteCourseId;
		globalSource = occupantId;
		g_financePolicyId = studentListJsonArray[0].financePolicyId;
		g_instituteCourseStrengthId =  studentListJsonArray[0].instituteCourseStrengthId;
		g_instituteCourseId=studentListJsonArray[0].instituteCourseId;
		 if($('#customerHelper').val() =="MIT") {
             checkEditDeleteAuthorityForFinance(g_financePolicyId);
         }
		var studentName = '<strong>'+studentListJsonArray[0].name+'</strong>';
		var courseName  = studentListJsonArray[0].coourseName!=undefined?studentListJsonArray[0].coourseName:"";
		var courseYearName  = studentListJsonArray[0].courseYearName!=undefined?studentListJsonArray[0].courseYearName:"";

		for (var k = 0; k < studentListJsonArray.length; k++) {
			if (studentListJsonArray[k]["planFlag"] != undefined && studentListJsonArray[k]["planFlag"] == "Current") {
				hostelPolicyId = studentListJsonArray[k].hostelPolicyId;
				hostelPlanId = studentListJsonArray[k].hostelPlanId;
				invoiceId = studentListJsonArray[k].studentFeeInvoiceId;
				cancelReason = studentListJsonArray[k].cancelReason;
				hostelName = studentListJsonArray[k].hostelName != undefined ? studentListJsonArray[k].hostelName : "Not-Allocated";
				floorName = studentListJsonArray[k].floorName != undefined ? studentListJsonArray[k].floorName : "Not-Allocated";
				roomName = studentListJsonArray[k].roomName != undefined ? studentListJsonArray[k].roomName : "Not-Allocated";
				gRoomname = studentListJsonArray[k].roomName != undefined ? studentListJsonArray[k].roomName : "Not-Allocated";
				roomType = studentListJsonArray[k].infraTypeName != undefined ? studentListJsonArray[k].infraTypeName : "Not-Allocated";
				gRoomType = studentListJsonArray[k].infraTypeName != undefined ? studentListJsonArray[k].infraTypeName : "Not-Allocated";
			}
		}
		
		boiler += '<table class="table table-condensed table-bordered studentPersonalInformation span5">'+
	    '<tr>'+
	        '<td rowspan="6" width="120px"><div class = "thumbnail studentProfileImage"></div></td>'+
	        '<th style="text-align:left">Name</th><td>'+studentName+'</td></tr>'+
	        '<tr><th style="text-align:left">Dept / Year</th><td>'+courseName+' / '+courseYearName+'</td></tr>'+
	        '<td style = "display:none;" class="occupantId">'+occupantId+'</td>'+
			'<td style = "display:none;" class="instituteCourseStrengthId"></td>'+
	    '</tr>'+
	    '<tr>'+
	        '<th style="text-align:left">Hostel&nbsp;&nbsp;/&nbsp;&nbsp;Floor&nbsp;&nbsp;/&nbsp;&nbsp;Room</th><td>'+
	        hostelName+'&nbsp;&nbsp;/&nbsp;&nbsp;'+floorName+'&nbsp;&nbsp;/&nbsp;&nbsp;'+roomName+
	        '</td></tr>'+
	        '<tr><th style="text-align:left">Room Type</th><td class="studentRoomType">'+roomType+'</td></tr>';
		if($('#customerHelper').val()=="MANDSAUR")
			boiler +='<tr><th style="text-align:left">Enrollment No.</th><td>'+studentListJsonArray[0].enrollmentNo+'</td></tr>';
			
	    boiler +='</tr>'+
	    '<tr><td colspan="4" style="color:red">'+cancelReason+'</td></tr>'+
	 /*   '<tr>'+
	    	'<td colspan="5" style="text-align:right;">'+
	    		'<input type="button" class="btn btn-mini btn-inverse btn-cancelOccupant" value="Hostel Admission Cancellation">&nbsp;&nbsp;'+
	    	'</td>'+
	    '</tr>'+*/
	    
	    '</table><hr style="padding:0px;margin-bottom:5px">';
		$('#divStudentInformation').html(boiler);
		$('.studentProfileImage').html('<img src="getStudentProfileImageById.json?id='+studentId+'&type=profile" class = "img-polaroid" height = "100px" width = "100px" alt = "No image">');
		
		/*$('.btn-cancelOccupant').click(function(){
			configureStudentCancelationDetail(jArray);
		});*/
		//showAdmissionCancellationForm(studentListJsonArray[0].studentId,studentListJsonArray[0].instituteCourseStrengthId);
	} else {
		$('#divStudentInformation').html('<div class="alert alert-error"><strong>Sorry!! No Student found found</strong></div>');
	}
	/** Student Fee Structure Details */

	$('#divStudentFeeDueInformation').html('');
	if(feeStructureJArray.length > 0){
		//var boiler =  '';
		for(var i = 0 ; i < feeStructureJArray.length ; i++){
			boiler ='<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>';
			if($('#financeOnBuilding').val()=='true'){
				boiler +='<div style="margin-top:-14px">'+
						 '<input type="button"  value="Make Payment" class="btn btn-success btn-mini" onclick="MakePaymentOfflineMainHostelPolicyWise('+studentId+','+instituteCourseId+');getAdvancePaymentOptionForHostel();">';
			}else{
				boiler +='<div style="margin-top:-14px">'+
						 '<input type="button"  value="Make Payment" class="btn btn-success btn-mini" onclick="MakePaymentOfflineMainHostel('+studentId+','+instituteCourseId+');getAdvancePaymentOptionForHostel();">';
			}
			//if(isTestEnv){
				boiler+='&nbsp;&nbsp;<input type="button" class="btn btn-danger btn-mini btn-refundBtn" value="Refund" style="float:center;" onclick="makeRefundOfHostelAdmission('+studentId+','+instituteCourseId+','+feeStructureJArray[i].studentFeeInvoiceId+')">'+
				'&nbsp;&nbsp;<input type="button" class="btn btn-danger btn-mini" style="float:center;" value="Adjustment Entry" onclick="showStudentAdjustmentHostel('+studentId+',0,'+instituteCourseId+');">';
			//}
			
			boiler+='&nbsp;&nbsp;<input type="button" class="btn btn-danger btn-mini" style="float:center;" value="Advance Fees" onclick="advanceFeesDetail('+studentId+');">';
			
			boiler+='</div><br><br><table class="table table-bordered table-condensed"  style="margin-top:-14px"><tr><th>'+
			'Fee Structure Name</th><th>Hostel Name</th><th>Room Type</th><th>Fee Structure Year</th><th class="gems_currency_label">Total   Fees  </th>'+
			'<th class="gems_currency_label">Paid   Amount  </th>';
			if($('#customerHelper').val()=="MIT"){
					boiler+='<th class="gems_currency_label">Concession</th>';
			}else{
					boiler+='<th class="gems_currency_label">Concession/Scholarship/Government Liability  </th>';
			}
			boiler+='<th class="gems_currency_label">Student Receivable</th><th class="gems_currency_label">Student Payable</th>'+
			'<th>Generate Invoice</th>';
			boiler+='</tr><tbody id="invoicedetails"></tbody>';
			boiler+='<tr><th colspan="4">Total</th> <td id="StudentPayable" style="text-align:right;" class="gems_currency"></td><td id="StudentPaid" style="text-align:right;" class="gems_currency"></td><td id="Concession" style="text-align:right;" class="gems_currency"><td id="Remaining" style="text-align:right;" class="gems_currency"></td></td><td id="studentPayable123" style="text-align:right;" class="gems_currency"></td>'+
			'</td><td>';
			 $('#divStudentFeeDueInformation').html(boiler);
			 for(var i = 0 ; i < feeStructureJArray.length ; i++){
				var	tempId = 'trFeeStructureId-'+feeStructureJArray[i].feeItemId+''+occupantId;
					var isCurrent =	feeStructureJArray[i].isCurrent;

				 var a='invoicedate'+i;
				 boiler='<tr id="'+tempId+'" ><td id="Feename">'+feeStructureJArray[i].feeStructureName+'</td>';
				 boiler+='<td class="buildingName_'+feeStructureJArray[i].feeItemId+'"></td>';
				 boiler+='<td class="roomName_'+feeStructureJArray[i].feeItemId+'"></td>';
				 boiler+='<td id="feeyear">'+feeStructureJArray[i].fromDate+' - '+feeStructureJArray[i].toDate+'</td>';
				 boiler+='<td  style="text-align:right;" class="StudentPayable  StudentPayable_'+feeStructureJArray[i].feeItemId+' gems_currency">0.00</td>';
				 boiler+='<td style="text-align:right;" class="StudentPaid StudentPaid_'+feeStructureJArray[i].feeItemId+' gems_currency">0.00</td>';
				 boiler+='<td style="text-align:right;" class="Concession Concession_'+feeStructureJArray[i].feeItemId+' gems_currency">0.00</td>';
				 boiler+='<td style="text-align:right;" class="Remaining gems_currency  Remaining_'+feeStructureJArray[i].feeItemId+' " >0.00</td>';
				 boiler+='<td style="text-align:right;" class="studentPayable123 gems_currency  studentPayable123_'+feeStructureJArray[i].feeItemId+' payable_'+feeStructureJArray[i].studentFeeInvoiceId+' ">0.00</td>'+
				 '<td><input type="button" value="Generate Invoice" class="btn btn-mini btn-inverse" onclick="redirectToInvoiceFunctionForHostel(\'trFeeStructureId-'+feeStructureJArray[i].feeItemId+''+occupantId+'\',\''+feeStructureJArray[i].hostelPlanId+'\',\''+isCurrent+'\');"></td>';
				 $('#invoicedetails').append(boiler);
				 $('#'+tempId).data('feeStructureObject',feeStructureJArray[i]);
			 }


		}
	} else {
		$('#divStudentFeeDueInformation').html('<div class="alert alert-error"><strong>Sorry!! No Fee structure found</strong></div>');
	}

	if(studentListJsonArray.length > 0){
		//var feeInvoiceObjectArray = 	studentListJsonArray[0].feeStructureIdList;
		var totstudentPayable=0.0;
		var totconcessionAmount=0.0;
		var totStudentPaid=0.0;
		var totRemaining=0.0;
		var totstudentPayable123=0.0;

		
		for(var k = 0; k < studentListJsonArray.length ; k++){
			
			var feeInvoiceObjectArray = 	studentListJsonArray[k].feeStructureIdList;
		
		for(var j = 0; j < feeInvoiceObjectArray.length ; j++){
			//var isCurrent =			feeInvoiceObjectArray[j].isCurrent;
			var feeStructureId=			feeInvoiceObjectArray[j].feeStructureId;
			var studentFeeInvoiceId=	feeInvoiceObjectArray[j].studentFeeInvoiceId;
			var invoicestatus=			feeInvoiceObjectArray[j].invoicestatus;
			var feePaymentStatus=		feeInvoiceObjectArray[j].feePaymentStatus;
			var totPayableAmt=			feeInvoiceObjectArray[j].totalPayableAmount;
			var paid=					feeInvoiceObjectArray[j].paidAmount;
			var fromStudentRecievable=	feeInvoiceObjectArray[j].fromStudentRecievable;
			var toStudentPayable=		feeInvoiceObjectArray[j].toStudentPayable;
			
			var concessionAmount = feeInvoiceObjectArray[j].concessionAmount;
			
			$('.StudentPayable_'+feeStructureId).html(totPayableAmt);
			totstudentPayable+=eval(totPayableAmt);
			$('.StudentPaid_'+feeStructureId).html(paid);
			totStudentPaid+=eval(paid);
			
			$('.Concession_'+feeStructureId).html(concessionAmount);
			totconcessionAmount+=eval(concessionAmount);
			
			$('.Remaining_'+feeStructureId).html(fromStudentRecievable);
			totRemaining+=eval(fromStudentRecievable);
			$('.studentPayable123_'+feeStructureId).html(toStudentPayable);
			totstudentPayable123+=eval(toStudentPayable);
			
			$('.buildingName_'+feeStructureId).html(feeInvoiceObjectArray[j].roomDetails);
			$('.roomName_'+feeStructureId).html(feeInvoiceObjectArray[j].infraTypeName);
			
			g_TotalFeesReceivable += eval(fromStudentRecievable); 
		}
		}
		
		$('#StudentPayable').html(totstudentPayable);
		$('#StudentPaid').html(totStudentPaid);	
		$('#Remaining').html(totRemaining);
		$('#Concession').html(totconcessionAmount);
		$('#studentPayable123').html(totstudentPayable123);
		
		applyGemsPlugins();
		
	getStudentReceivableAndPayableDetailsForInvoice(jArray,studentId,instituteCourseStrengthId,hostelPolicyId,hostelPlanId,studentName,invoiceId,instituteCourseId,occupantId,totRemaining,totstudentPayable123);

	}
	try{
		callBack(true);
	}catch(e){}
}


function checkForInvoiceExistanceOfOccupant(occupantId,feeStructureId, isCurrent,callback) {
	$.ajax({
		url:'checkForInvoiceExistanceOfOccupant.json',
		dataType:'json',
		data:'occupantId='+occupantId+'&feeStructureId='+feeStructureId,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jObject){
			try{
				callback(jObject);
			}catch(e){

			}
		}
	});
}
	
function getInvoiceRelatedInformationByOccupantId(occupantId, hostelPlanId, isCurrent){
	if( occupantId != undefined && occupantId != ''){
		getOccupantPersonalInfoByOccupantId(occupantId,function(occupantObj){
			$('#hpReceiptHeading').val(occupantObj.policyHeader);
			gOccupantInvoiceRelatedObject = occupantObj;
			feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
			$('#txtFeeStructureDescription').data('instituteCourseId',occupantObj.instituteCourseId);
			occupantId = gOccupantInvoiceRelatedObject.occupantId;
			checkForInvoiceExistanceOfOccupant(occupantId,feeStructureId,isCurrent,function(jObject){
				if(jObject.responseFlag == 1) { /**Invoice generated case */ //&& !jObject.restructureRequested
					gOccupantInvoiceRelatedObject.buildingId = jObject.infraBuildingId !=undefined ? jObject.infraBuildingId : 0;
					if(jObject.infraTypeId == undefined){
						proceedToOccupantInvoiceGeneration(null, null, undefined,hostelPlanId, isCurrent);
					} else {
						proceedToOccupantInvoiceGeneration(jObject.infraTypeId,jObject.infraTypeName, undefined, hostelPlanId, isCurrent);
					}
				} else {
					if(jObject.restructureRequested){
						$('.restructureMsg').show();
					} else {
						$('.restructureMsg').hide();
					}
					
					if(isCurrent=="true")
						showRoomTypeSpecifyOptionDialog(hostelPlanId, isCurrent);
				}
			});
		});
	} else {
		jAlert('Invalid occupantId Id!!!');
		//$('#divStudentCancellationList').show();
	}
}

function showRoomTypeSpecifyOptionDialog(hostelPlanId, isCurrent, callType) {
	if(callType==undefined || callType =='undefined')
		callType ='';
	
	try{
		$('.wizard > .content').css({'min-height':'90em'});
		$('.feeFixationSetupWizard').find('.content').css({'overflow':'auto'});
	}catch(e){}
	var studentName;
	var occupantId;
	var admissionDate;
	var course;
	var gender;
	var	roomTypeName;
	var	roomTypeId;
	var studentId;
	var studentInstituteCourseId;
	var feeStructureId = '0';
	var instituteStrengthId = '';
	var isNri='';
	
	studentName = gOccupantInvoiceRelatedObject.firstName +' '+gOccupantInvoiceRelatedObject.lastName;
	occupantId = gOccupantInvoiceRelatedObject.occupantId;
	category = gOccupantInvoiceRelatedObject.studentCategory;
	admissionDate =  gOccupantInvoiceRelatedObject.admissionDate;
	course = gOccupantInvoiceRelatedObject.courseName;
	gender = gOccupantInvoiceRelatedObject.gender;
	roomTypeName = gOccupantInvoiceRelatedObject.infraType;
	roomTypeId = gOccupantInvoiceRelatedObject.infraTypeId;
	studentInstituteCourseId = gOccupantInvoiceRelatedObject.studentInstituteCourseId;
	studentId = gOccupantInvoiceRelatedObject.studentId;
	isNri = gOccupantInvoiceRelatedObject.isNri;
	if(isNri){
		isNri="Yes";
	}else
		isNri="No";
	if($('#cbAcademicBatch').val() != undefined){
		instituteStrengthId = $('#cbAcademicBatch').val().split('-')[0];
	} else {
		instituteStrengthId = undefined;
	}
	if(instituteStrengthId == undefined){
		instituteStrengthId = gOccupantInvoiceRelatedObject.instituteCourseStrengthId;
	}

	feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
	//alert('feeStructureId: '+feeStructureId);
	if(feeStructureId == '0' || feeStructureId == 0 || feeStructureId == undefined){
		feeStructureId = '0';
	}
	$('.studentName').html(studentName);
	$('.studentProfileImage').html('<img src="getStudentProfileImageById.json?id='+studentId+'&type=profile" class = "img-polaroid" height = "110px" width = "100px" alt = "No image">');
	var boiler = 
		'<table class = "table table-bordered table-condensed">'+
		'<tr>'+
		'<th style = "text-align:left">Name</th><td>'+studentName+'</td>'+
		'</tr>'+
		'<tr>'+
		'<th style = "text-align:left">Gender</th><td><span class="studentGender">'+gender+'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href = "javascript:void(0)" style = "color:#0088CC;" onclick = "showSpecifyStudentGender()">Specify gender</a></span></td>'+
		'</tr>'+
		'<tr>'+
		'<th style = "text-align:left">Is NRI</th><td>'+isNri+'</td>'+
		'</tr>'+
		'<tr>'+
		'<th style = "text-align:left"> Course</th><td>'+course+'</td>'+
		'</tr>'+
		'<tr>'+
		'<th style = "text-align:left">Admission date</th><td>'+admissionDate+'</td>'+
		'</tr>';
		if($('#financeOnBuilding').val()=="true"){
			boiler +='<tr id="trHostel">'+
						'<th style = "text-align:left">Hostel</th>\
						 <td><select id="infraBuildingId"><option value="0">Select</option></td>\
					  </tr>\
					  <tr>\
					  	 <th style = "text-align:left">Room Type</th>\
					  	 <td><select id="hostelRoomTypeId"><option value="0">Select</option></td>\
					  </tr>';
		}else{
			boiler += '<tr id="trRoomType">'+
						'<th style = "text-align:left">Room Type</th>\
						 <td><span class="studentRoomType">'+roomTypeName+'</span><span class="studentAdmissionTypeChangeLink">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href = "javascript:void(0)" style = "color:#0088CC;" onclick = "showSpecifyAdmissionTypeDialogByOccupantId(\''+occupantId+'\')">Change</a><div class="preview-bar" style="float:right;margin-top:4px;"></div></span></td>\
					   </tr>';
		}
	boiler +='</table>';
	$('.studentHostelInformation').html(boiler);
	$('#divRoomTypeSpecifyOptionDialog').modal('show');
	$('#divRoomTypeSpecifyOptionDialog').css({
		width: '600px', 'margin-left': function() {
			return -($(this).width() / 2);
		},
	});
	$('#allocate').modal('hide');
	if($('#financeOnBuilding').val()=="true")
		getInfraBuildingList(gOccupantInvoiceRelatedObject.instituteCourseId);
	validateOccupantInvoiceGeneration();
	$('#infraBuildingId').change(function(){
		let buildingId = $('#infraBuildingId option:selected').val();
		gOccupantInvoiceRelatedObject.buildingId =buildingId;
		getInfrastructureTypeByBuildingDetails(buildingId);
	});
	$('#hostelRoomTypeId').change(function(){
		let infraTypeName = $('#hostelRoomTypeId option:selected').text();
		let infraTypeId = $('#hostelRoomTypeId option:selected').val();
		gOccupantInvoiceRelatedObject.infraTypeName = infraTypeName;
		gOccupantInvoiceRelatedObject.infraTypeId = infraTypeId;
		validateOccupantInvoiceGeneration();
	});
	$('.btnProceedToStudentHostelInvoiceGeneration').unbind();
	$('.btnProceedToStudentHostelInvoiceGeneration').bind('click',function(){
		if(validateOccupantInvoiceGeneration()){
			$('.btnProceedToStudentHostelInvoiceGeneration').attr('disabled','disabled');
			$('#divRoomTypeSpecifyOptionDialog').modal('hide');
			if(callType=='hostel'){
				$('#divReceiptHeader').hide();
				$('#divStudentFeeDueInformation').hide();
				$('#divStudentHostelFeeDueInformation').hide();
				$('#btnStudentInvoiceCancel').hide();
			//	$('.btn-cancelOccupant').hide();
				$('#divReceiptHeader').hide();
				$('#tdFeeReceiptFor').hide();
				}	
			proceedToOccupantInvoiceGeneration(gOccupantInvoiceRelatedObject.infraTypeId,gOccupantInvoiceRelatedObject.infraTypeId,undefined,hostelPlanId, isCurrent, function(){
				checkForInvoiceExistanceOfOccupant(occupantId,feeStructureId,isCurrent,function(jObject){
					if(callType=='hostel'){
						$('#divReceiptHeader').hide();
						$('#divStudentFeeDueInformation').hide();
						$('#divStudentHostelFeeDueInformation').hide();
						$('#btnStudentInvoiceCancel').hide();
						//$('.btn-cancelOccupant').hide();
						$('#divReceiptHeader').hide();
						$('#tdFeeReceiptFor').hide();
						}	
					if(jObject.restructureRequested != undefined && jObject.restructureRequested){
						deleteAndReDistributeBillDetailByStudentInvoiceIdHostel(jObject.studentFeeInvoiceId,function(){
							getHostelStudentBillingDetails(function(jArray){
								showStudentHostelBillingDetails(jArray,function(flag){
									if(callType=='hostel'){
										$('#divReceiptHeader').hide();
										$('#divStudentFeeDueInformation').hide();
										$('#divStudentHostelFeeDueInformation').hide();
										$('#btnStudentInvoiceCancel').hide();
									//	$('.btn-cancelOccupant').hide();
										$('#divReceiptHeader').hide();
										$('#tdFeeReceiptFor').hide();
										}	
								});
								
							});
						});
					}
				});
				$('#divRoomTypeSpecifyOptionDialog').modal('hide');
				$('.btnProceedToStudentHostelInvoiceGeneration').removeAttr('disabled');
			});
		}
	});
	
}

function getInfraBuildingList(instituteCourseId){
	var shorts = {   
			infraDetailId:0,
			buildingName:1
	};
	let boiler = '<option value="0">Select</option>';
	$.ajax({
		url:'getInfraBuildingListByInstituteCourseId.json',
		data:{
			instituteCourseId:instituteCourseId
		},
		dataType:'json',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jObj){
			let jArray = jObj['Data'];
			jArray.forEach(function(jObj, i) {
				boiler += '<option value="' + jObj[shorts.infraDetailId] + '">' + jObj[shorts.buildingName] + '</option>';
			});
			$('#infraBuildingId').html(boiler);
			convertComboToSearchable('#infraBuildingId');
		}
	});
}

function getInfrastructureTypeByBuildingDetails(buildingId){
	var shorts = {   
			infraTypeId:0,
			infraTypeName:1
	};
	let boiler = '<option value="0">Select</option>';
	$.ajax({
		url:'getInfrastructureTypeByBuildingDetails.json',
		data:{
			buildingId:buildingId
		},
		dataType:'json',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jObj){
			let jArray = jObj['Data'];
			jArray.forEach(function(jObj, i) {
				boiler += '<option value="' + jObj[shorts.infraTypeId] + '">' + jObj[shorts.infraTypeName] + '</option>';
			});
			$('#hostelRoomTypeId').html(boiler);
			convertComboToSearchable('#hostelRoomTypeId');
		}
	});
}
function validateOccupantInvoiceGeneration(){
	if(gOccupantInvoiceRelatedObject.gender == undefined || gOccupantInvoiceRelatedObject.gender == ''){
		$('.btnProceedToStudentHostelInvoiceGeneration').attr('disabled','disabled');
		jAlert('Please specify gender');
		return false;
	} 
	
	if(gOccupantInvoiceRelatedObject.infraTypeId == undefined || gOccupantInvoiceRelatedObject.infraTypeId == ''){
		$('.btnProceedToStudentHostelInvoiceGeneration').attr('disabled','disabled');
		jAlert('Please specify room type');
		return false;
	} 
	$('.btnProceedToStudentHostelInvoiceGeneration').removeAttr('disabled');
	return true;
}
function setHostelInvoiceGenerationStatus(status,invoiceObject,occupantId){
	
	if(occupantId == undefined){
		occupantId = '';
	}
	try{
		$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.Invoicestatus').text(status);
		if(invoiceObject != undefined) {
			if(status == 'GENERATED'){
				//alert("invoiceObject.amountPayable: "+invoiceObject.amountPayable);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.totPayableAmt').text(invoiceObject.amountPayable);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.fromStudentRecievable').text(invoiceObject.fromStudentRecievable);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.toStudentPayable').text(invoiceObject.toStudentPayable);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.feePaymentStatus').text(invoiceObject.feePaymentStatus);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.paid').text(invoiceObject.paid);	
			} else {
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.Invoicestatus').text(status);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.totPayableAmt').text(invoiceObject.amountPayable);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.fromStudentRecievable').text(invoiceObject.fromStudentRecievable);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.toStudentPayable').text('-');
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.feePaymentStatus').text(invoiceObject.feePaymentStatus);
				$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.paid').text(invoiceObject.paid);
			}
		} else {
			$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.totPayableAmt').text('-');
			$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.feePaymentStatus').text('-');
			$('#trFeeStructureId-'+invoiceObject.feeStructureId+''+occupantId).find('.paid').text('-');
		}			
	}catch(e){
		//alert(e);
	}
	//}
}

function proceedToOccupantInvoiceGeneration(infraTypeId,infraTypeName,showBillingDetails,hostelPlanId, isCurrent, callback) {
	//var response = '';
	//alert("qqq"+isCurrent)
	var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');

	$('#divStudentListForInvoiceGeneration').hide();
	$('#divStudentInvoiceGeneration').show();
	$('#divShowSponsorshipChoiceOption').modal('hide');
	showStudentHostelInvoiceForm(isCurrent, function(boiler){
		$('#divShowInvoiceForm').html(boiler);
		var currentTime = new Date();
		$('#studentInvoiceCancellationDate2').datepicker({
				inline: true,
				dateFormat:'M dd,yy',
				changeMonth: true,
				changeYear:true,
				yearRange:"-80:+0",
				firstDay: 1,
				maxDate: currentTime
		});
		$("#studentInvoiceCancellationDate2").datepicker('setDate', currentTime);
	});
	occupantId = gOccupantInvoiceRelatedObject.occupantId;

	//alert('infraTypeId: '+infraTypeId);
	if(infraTypeId != undefined && infraTypeId != ''){
		checkFeeDiscountConfigurationByInfraTypeId(occupantId,feeStructureId,infraTypeId,isCurrent,function(flag){
		//alert(flag);
			if(flag == true){
				//alert(studentInstituteCourseId);
				//alert("aaa"+hostelPlanId)
				getAndShowFeeInvoiceDetailsByInfraTypeId(infraTypeId,occupantId, hostelPlanId,undefined,isCurrent,function(invoiceObject){
					
					/** Binding Editable event for the invoice  */
					$('.linkEditFeeInvoice').bind('click',function(){
						showEditableHostelInvoice(invoiceObject.studentFeeInvoiceId);
					});
					$('.linkResetFeeInvoice').bind('click',function(){
						resetDefaultStudentHostelInvoice(invoiceObject.studentFeeInvoiceId);
					});
					if(showBillingDetails == undefined || showBillingDetails){
						getHostelStudentBillingDetails(function(jArray){
							showStudentHostelBillingDetails(jArray);
						});
						try{
							callback(invoiceObject);
						}catch(e){}
					} else {
						try{
							callback(invoiceObject);
						}catch(e){}
					}
					
				});
			} else {
				getHostelOpenInvoiceDetails(occupantId, hostelPlanId, isCurrent, function(invoiceObject){
				//	alert("hostelPlanId3=="+hostelPlanId)
					setHostelInvoiceGenerationStatus('GENERATED',invoiceObject,occupantId);
					getHostelStudentBillingDetails(function(jArray){
						showStudentHostelBillingDetails(jArray);
						/** Binding Editable event for the invoice  */
						$('.linkEditFeeInvoice').bind('click',function(){
							showEditableHostelInvoice(invoiceObject.studentFeeInvoiceId);
						});
						$('.linkResetFeeInvoice').bind('click',function(){
							resetDefaultStudentHostelInvoice(invoiceObject.studentFeeInvoiceId);
						});

						if(jArray.length > 0){
							var studentInvoiceId = jArray[0].studentInvoiceId;
							showStudentRecieptPrintOption(studentInvoiceId,jArray);
						}
						try{
							callback(invoiceObject);
						}catch(e){}
					});
				});
			}
		});
	} else {
		getHostelOpenInvoiceDetails(occupantId,hostelPlanId, isCurrent, function(invoiceObject){
			setHostelInvoiceGenerationStatus('GENERATED',invoiceObject,occupantId);
			//alert("bbb"+hostelPlanId)
			/** Binding Editable event for the invoice  */
			$('.linkEditFeeInvoice').bind('click',function(){
				showEditableHostelInvoice(invoiceObject.studentFeeInvoiceId);
			});
			$('.linkResetFeeInvoice').bind('click',function(){
				resetDefaultStudentHostelInvoice(invoiceObject.studentFeeInvoiceId);
			});
			getHostelStudentBillingDetails(function(jArray){
				showStudentHostelBillingDetails(jArray);
				if(jArray.length > 0){
					var studentInvoiceId = jArray[0].studentInvoiceId;
					showStudentRecieptPrintOption(studentInvoiceId,jArray);
				}
				try{
					callback();
				}catch(e){}
			});
		});
	}
}

function checkFeeDiscountConfigurationByInfraTypeId(occupantId,feeStructureId,infraTypeId,isCurrent,callback){
	$.ajax({
		url:'checkFeeDiscountConfigurationByInfraTypeId.json',
		dataType:'json',
		data:'feeStructureId='+feeStructureId+'&infraTypeId='+infraTypeId+'&occupantId='+occupantId,
		success:function(response){
			try{
				callback(response);
			}catch(e){alert(e);}
		}
	});
}

/**
 * @since 29th May 2012
 * @purose this function generate the invoice for a student for particular fee head structure id and
 * 			also get all details fee invoice details 
 */
function getHostelOpenInvoiceDetails(occupantId,hostelPlanId, isCurrent ,callback) {
	var studentCategoryId = ''; // UN-USED
	var courseId = '';// UN-USED
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	var revisionNo = getFeeStructureRevision();
	//alert("hostelPlanId2=="+hostelPlanId)
	getOccupantInvoiceHeader(occupantId, hostelPlanId,isCurrent, function(invoiceHeaderJSON){
		$('#pTrustName').html($('p#trustName').text());
		$('#pInstituteName').html($('p#instiName').text());
		$('#pInstituteAddress').html($('p#instiAddress').text());
		$('#tdNameOfStudent').html(invoiceHeaderJSON.invoiceHeader[0].studentName);
		$('#tdAddress').html(invoiceHeaderJSON.invoiceHeader[0].studentAddress);
		//alert("22222"+invoiceHeaderJSON.invoiceHeader[0].date);
		$('#tdReceiptDate').html(invoiceHeaderJSON.invoiceHeader[0].date);
		$('#tdAdmissionLetterRefNo').html('');
		//////alert(invoiceHeaderJSON.invoiceHeader[0].date);
		//var date = new Date(Date.parse());

		//var admissionDate = $.parseFormat('%d %m %y %h %m',date);
		//alert("invoiceHeaderJSON.invoiceHeader[0].allocationDate:::::::::"+invoiceHeaderJSON.invoiceHeader[0].allocationDate);
		$('#tdAdmissionDate').html(invoiceHeaderJSON.invoiceHeader[0].allocationDate);
		$('#tdFeeReceiptNo').html('');
		$('#tdStudentCategory').html(invoiceHeaderJSON.invoiceHeader[0].studentCategory);
		$('div#invoice-content').find('div.studentProfileImage').html('<img src = "getStudentProfileImageById.json?id='+invoiceHeaderJSON.invoiceHeader[0].studentId+'&type=profile" height = "110px" width = "100px" alt = "No image" />');
		studentInstituteCourseId = invoiceHeaderJSON.invoiceHeader[0].studentInstituteCourseId;
		var boiler = '<tr>'+
		'<th>Hostel Name</th>'+
		'<th>Room No &amp Type.</th>'+
		'<th>Room Type</th>'+
		'<th>Institute Name and Address</th>'+
		'<th>Academic Batch</th>'+
		'</tr>';

		//alert('boiler: '+boiler);
		boiler += 
			'<tr>'+
			'<td>'+invoiceHeaderJSON.invoiceHeader[0].courseName+'</td>'+
			'<td>'+invoiceHeaderJSON.invoiceHeader[0].courseName+'</td>'+
			'<td>'+invoiceHeaderJSON.invoiceHeader[0].instiName+'<br/>'+(invoiceHeaderJSON.invoiceHeader[0].instiAddress != undefined?invoiceHeaderJSON.invoiceHeader[0].instiAddress:"")+'</td>'+
			'<td>'+invoiceHeaderJSON.invoiceHeader[0].year+'</td>'+
			'</tr>';
		//////alert('boiler: '+boiler);
		$('#tblStudentInvoiceHeader').html(boiler);
		if(studentCategoryId != '0'){ // if not selected
			$.ajax({
				url:'getFeeInvoiceDetailsOpenForOccupant.json?studentCategoryId='+studentCategoryId+'&courseId='+courseId+'&feeItemId='+feeItemId+'&studentInstituteCourseId='+studentInstituteCourseId+'&invoiceRevisionNo='+revisionNo+'&occupantId='+occupantId,
				dataType:'json',
				async:false,
				beforeSend:function(){
					$('.preview-large').addClass('loading-large');
				},
				complete:function(){
					$('.preview-large').removeClass('loading-large');
				},
				success:function(jArray){
					var flag = jArray[0].responseFlag;
					if(flag == 1){
						showHostelOpenInvoiceDetails(jArray[2]["studentFeeInvoiceId"],jArray[1],jArray[3].studentInvoiceNo);
						registerAndShowHostelInvoiceCancellationButton(jArray[2], hostelPlanId, isCurrent);
						//$('.studentAdmissionCategoryNameChangeLink').hide();
					} else {
						unregisterAndHideHostelInvoiceCancellationButton(jArray[2]);
						jAlert(jArray[0]["responseText"],10000);
						//$('.studentAdmissionCategoryNameChangeLink').show();
					}
					try{
						callback(jArray[2],jArray[1]);
					}catch(e){}
				},
				error:function(){

				}
			});
		}
	});
}

function showHostelOpenInvoiceDetails(invoiceId,feeItemArray,invoiceNo) {
	$('#invoicePrintControl').show();/**Showing the print buttons*/
	$('#tdFeeInvoiceNo').html(invoiceNo);
	$('#tdFeeInvoiceNo').html(invoiceNo);
	$('#tdFeeInvoiceBarcodeNo').html(invoiceNo);
	////alert('Hi------------');
	getBarcode(invoiceNo,'tdFeeInvoiceBarcodeNo');
	//getBarcode(invoiceNo,'tdFeeInvoiceBarcodeNo1');
	////alert('Hi------------123123');
	setStudentInvoiceId(invoiceId);
	var len = feeItemArray.length;
	var totalPayableAmount = 0.0;
	var boiler = '';
	boiler = '<tr>'+
	'<td style = "width:10px">S.No.</th>'+
	'<td style = "width:300px;text-align:center"><strong>Particulars</strong></td>'+
	'<td style = "width:100px;text-align:center" class="gems_currency_label"><strong>Amount</strong></td>'+
	'<td style = "width:100px;text-align:center"><strong>Social Welfare</strong></td>'+
	'<td style = "width:100px;text-align:center"><strong>Desc/Remark</strong></td>'+
	'<td style = "text-align:center" class="gems_currency_label"><strong>Student payable amount</strong></td>'+
	'</tr>';

	var cnt = 0;
	for(var i = 0; i < len; i++) {
		var bAmount = 0.0;
		bAmount = parseFloat(feeItemArray[i]["unitPrice"]);
		/*if(isNaN(discount))
			discount = 0.0;
		if(isNaN(bAmount))
			bAmount = 0.0;*/
		//var discountAmount = (bAmount * discount)/100.0; /**@purpose: calculation of discount amount after deducting the discount amount from basic amount*/
		//var discountAmount = feeItemArray[i]["discount"];
		var description = feeItemArray[i]["description"];
		if(description == undefined)
			description = '';
		var amountPayable = parseFloat(feeItemArray[i]["totalAmount"]).toFixed(2);
		totalPayableAmount = parseFloat(totalPayableAmount) + parseFloat(amountPayable);
		if(feeItemArray[i]["subFeeItemArray"].length > 0){
			boiler += 
				'<tr>'+
				'<td>'+(++cnt)+'</td>'+
				'<td><strong>'+feeItemArray[i]["orgFeeItemHeadName"]+'</strong></td>'+
				'<td></td>'+
				'<td></td>'+
				'<td></td>'+
				'<td></td>'+
				'</tr>';
			var subFeeItemArray = feeItemArray[i]["subFeeItemArray"];
			for(var j = 0 ; j < subFeeItemArray.length > 0 ; j++) {
				boiler += 
					'<tr>'+
					'<td></td>'+
					'<td style="padding-left:30px">'+ feeItemArray[i]["orgFeeItemHeadName"]+'</td>'+
					'<td class="gems_currency">'+bAmount+'</td>'+
					'<td style = "text-align:center">-</td>'+
					'<td style = "text-align:right">'+description+'</td>'+
					'<td class="gems_currency">'+amountPayable+'</td>'+
					'</tr>';
			}
		} else {
			boiler += 
				'<tr  class="invoiceDetail" id="particular-'+feeItemArray[i].feeItemId+'">'+
				'<td>'+(++cnt)+'</td>'+
				'<td class="feeItemId" feeItemId="'+feeItemArray[i].feeItemId+'"><strong>'+feeItemArray[i]["orgFeeItemHeadName"]+'</strong></td>'+
				'<td class="gems_currency">'+bAmount+'</td>'+
				'<td style = "text-align:center">-</td>'+
				'<td style = "text-align:left" class="desc">'+description+'&nbsp;</td>'+
				'<td class="amount gems_currency">'+amountPayable+'</td>'+
				'</tr>';
		}

	}
	boiler += 
		'<tr>'+
		'<td colspan = "5" style = "text-align:right"><strong>Grand Total<strong></td>'+
		'<td style="width: 100px;text-align:right"><strong class="grandTotal">'+commaFormatted(parseFloat(totalPayableAmount).toFixed(2))+
		'<strong></td>'+
		'</tr>';
	$('#tblStudentInvoiceDetails').html(boiler);
	setStudentPayableAmount(parseFloat(totalPayableAmount).toFixed(2));
}


function showInvoiceDetailsByInfraTypeId(invoiceId,feeItemArray,invoiceNo) {
	$('#invoicePrintControl').show();/**Showing the print buttons*/
	$('#tdFeeInvoiceNo').html(invoiceNo);
	$('#tdFeeInvoiceNo').html(invoiceNo);
	$('#tdFeeInvoiceBarcodeNo').html(invoiceNo);
	getBarcode(invoiceNo,'tdFeeInvoiceBarcodeNo');
	//getBarcode(invoiceNo,'tdFeeInvoiceBarcodeNo1');
	setStudentInvoiceId(invoiceId);
	var len = feeItemArray.length;
	var totalPayableAmount = 0.0;
	var boiler = '';
	boiler = '<tr>'+
	'<td style = "width:10px">S.No.</th>'+
	'<td style = "width:300px;text-align:center"><strong>Particulars</strong></td>'+ //<input type="hidden" id ="timeUnitHidden">
	'<td style = "width:100px;text-align:center" class="gems_currency_label"><strong>Amount</strong></td>'+
	//'<td style = "width:100px;text-align:center"><strong>Social Welfare</strong></td>'+
	'<td style = "width:100px;text-align:center"><strong>Desc/Remark</strong></td>'+
	'<td style = "text-align:center" class="gems_currency_label"><strong>Student payable amount</strong></td>'+
	'</tr>';

	var cnt = 0;
	//var calculatedTimeUnit = 0;
	//var smallerTimeUnit = 0;
	for(var i = 0; i < len; i++) {
		
		/*var timeUnit = feeItemArray[i]["timeUnit"];
		if(timeUnit=="Yearly")
			smallerTimeUnit = 3;
		else if(timeUnit=="Monthly")
			smallerTimeUnit = 2;
		else if(timeUnit=="Daily")
			smallerTimeUnit = 1;
		if(calculatedTimeUnit>smallerTimeUnit && calculatedTimeUnit!=0)
			calculatedTimeUnit = smallerTimeUnit;
		else if(calculatedTimeUnit==0)
			calculatedTimeUnit = smallerTimeUnit;*/
		
		var bAmount = 0.0;
		bAmount = parseFloat(feeItemArray[i]["unitPrice"]);
		var amountPayable = parseFloat(feeItemArray[i]["totalAmount"]).toFixed(2);
		var description = feeItemArray[i]["description"];
		if(description == undefined)
			description = '';
		totalPayableAmount = parseFloat(totalPayableAmount) + parseFloat((amountPayable));
		if(feeItemArray[i]["subFeeItemArray"].length > 0){
			boiler += 
				'<tr>'+
				'<td>'+(++cnt)+'</td>'+
				'<td><strong>'+feeItemArray[i]["orgFeeItemHeadName"]+'</strong></td>'+
				'<td></td>'+
				'<td></td>'+
				'<td></td>'+
				'<td></td>'+
				'</tr>';
			var subFeeItemArray = feeItemArray[i]["subFeeItemArray"];
			for(var j = 0 ; j < subFeeItemArray.length > 0 ; j++) {
				bAmount = 0.0;
				bAmount = parseFloat(feeItemArray[i]["unitPrice"]);
				amountPayable = subFeeItemArray[i]["totalAmount"];
				boiler += 
					'<tr>'+
					'<td></td>'+
					'<td style="padding-left:30px">'+ subFeeItemArray[i]["orgFeeItemHeadName"]+'</td>'+
					'<td class="gems_currency">'+bAmount+'</td>'+
					//'<td style = "text-align:right">-</td>'+
					'<td style = "text-align:left">'+description+'</td>'+
					'<td class="gems_currency">'+amountPayable+'</td>'+
					'</tr>';
			}
		} else {
			boiler += 
				'<tr  class="invoiceDetail" id="particular-'+feeItemArray[i].feeItemId+'">'+
				'<td>'+(++cnt)+'</td>'+
				'<td class="feeItemId" feeItemId="'+feeItemArray[i].feeItemId+'"><strong>'+feeItemArray[i]["orgFeeItemHeadName"]+'</strong></td>'+
				'<td class="gems_currency">'+bAmount+'</td>'+
				//'<td style = "text-align:center">-</td>'+
				'<td style = "text-align:left" class="desc">'+description+'&nbsp;</td>'+
				'<td class="amount gems_currency">'+amountPayable+'</td>'+
				'</tr>';
		}

	}

	boiler += 
		'<tr>'+
		'<td colspan = "4" style = "text-align:right"><strong>Grand Total<strong></td>'+
		'<td style="width: 100px;text-align:right;"><strong class="grandTotal">'+commaFormatted(parseFloat(totalPayableAmount).toFixed(2))+
		'<strong></td>'+
		'</tr>';
	$('#tblStudentInvoiceDetails').html(boiler);
	
	/*if(calculatedTimeUnit=="1")
		calculatedTimeUnit="Daily";
	 else if(calculatedTimeUnit=="2")
		calculatedTimeUnit="Monthly";
	else if(calculatedTimeUnit=="3")
		calculatedTimeUnit="Yearly";
	
	$('#timeUnitHidden').val(calculatedTimeUnit);*/
	setStudentPayableAmount(parseFloat(totalPayableAmount).toFixed(2));
}


/**
 * k
 * @since 29th May 2012
 * @purose this function generate the invoice for a student for particular fee head structure id and
 * 			also get all details fee invoice details 
 */
function getAndShowFeeInvoiceDetailsByInfraTypeId(infraTypeId,occupantId, hostelPlanId,studentFeeInvoiceId,isCurrent,callback) {
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	let buildingId = gOccupantInvoiceRelatedObject.buildingId !=undefined ? gOccupantInvoiceRelatedObject.buildingId :0;
	var occRoomArray = gStudentListJsonArray[1];
	//getOccupantInvoiceHeader(occupantId, hostelPlanId ,isCurrent,function(invoiceHeaderJSON){
		var roomName =	"";
		var hostelName ="";
		var invoiceGenDate='';
		var allocatedFromDate='';
		var infraType = '';
		var instituteName = '';
		var courseYearName = '';
		var academicBatch = '';
		var studentName = '';
		for(var i=0;i<occRoomArray.length;i++){
			if(occRoomArray[i]["hostelPlanId"]==hostelPlanId){
			
				roomName = occRoomArray[i]["roomName"];
				hostelName = occRoomArray[i]["hostelName"];
				invoiceGenDate = occRoomArray[i]["invoiceGenDate"];
				allocatedFromDate = occRoomArray[i]["allocatedFromDate"];
				infraType = occRoomArray[i]["infraTypeName"];
				instituteName = occRoomArray[i]["instituteName"];
				courseYearName = occRoomArray[i]["courseYearName"];
				academicBatch = occRoomArray[i]["academicBatch"];
				studentName = occRoomArray[i]["name"];
			}
		}
		
		$('.studentName').html(studentName);
		$('#tdNameOfStudent').html(studentName);
		$('#tdAddress').html('');
		//alert("22222"+invoiceHeaderJSON.invoiceHeader[0].date);
		$('#tdReceiptDate').html(invoiceGenDate);
		//$('#tdAdmissionLetterRefNo').html('');
		//alert("invoiceHeaderJSON.invoiceHeader[0].allocationDate:::::::::"+invoiceHeaderJSON.invoiceHeader[0].allocationDate);
		$('#tdAdmissionDate').html(allocatedFromDate);
		//$('#tdFeeReceiptNo').html('');
		$('#tdOccupantRoomType').html(infraType);
		//$('#tdStudentCategory').html(invoiceHeaderJSON.invoiceHeader[0].studentCategory);
		$('div#invoice-content').find('div.studentProfileImage').html('<img src = "getStudentProfileImageById.json?id='+studentId+'&type=profile" height = "110px" width = "100px" alt = "No image" />');
		var boiler = '<tr>'+
		'<th style="text-align:center"><strong>Hostel Name</strong></th>'+
		'<th style="text-align:center"><strong>Room No</strong></th>'+
		//'<th style="text-align:center"><strong>Room Type</strong></th>'+
		'<th style="text-align:center"><strong>Institute Name</strong></th>'+
		'<th style="text-align:center"><strong>Academic Batch</strong></th>'+
		'</tr>';
		
		boiler += 
			'<tr><td>'+hostelName+'</td>'+
			'<td>'+roomName+'</td>'+
			'<td>'+instituteName+'</td>'+
			'<td>'+academicBatch+'</td>'+
			'</tr>';
		//alert('boiler: '+boiler);
		$('#tblStudentInvoiceHeader').html(boiler);


		if(infraTypeId != '0' && infraTypeId != undefined) { // if not selected
			$.ajax({
				url:'getFeeInvoiceDetailsByInfraTypeId.json',
				dataType:'json',
				data:{feeItemId:feeItemId,occupantId:occupantId,infraTypeId:infraTypeId,studentFeeInvoiceId:studentFeeInvoiceId,hostelPlanId:hostelPlanId,buildingId:buildingId},
				async:false,
				beforeSend:function(){
					$('.preview-large').addClass('loading-large');
				},
				complete:function(){
					$('.preview-large').removeClass('loading-large');
				},
				success:function(jArray){
					//alert("success");
					var flag = jArray[0]["responseFlag"];
					if(flag == '1'){
						showInvoiceDetailsByInfraTypeId(jArray[2]["studentFeeInvoiceId"],jArray[1],jArray[3].studentInvoiceNo);
						setHostelInvoiceGenerationStatus('GENERATED',jArray[2],occupantId);
						/****** Activating the Invoice cancel button *******/
						registerAndShowHostelInvoiceCancellationButton(jArray[2],hostelPlanId, isCurrent);
						//$('.studentAdmissionCategoryNameChangeLink').hide();
						$('#divRoomTypeSpecifyOptionDialog').modal('hide') 

					} else {
						jAlert(jArray[0]["responseText"],10000);
						//$('.studentAdmissionCategoryNameChangeLink').show();
					}
					$('#btnStudentInvoiceCancel').data('FeeItemArray',jArray[1]);
					$('#btnStudentInvoiceCancel').data('studentFeeInvoiceId',jArray[2]["studentFeeInvoiceId"]);
					try{
						callback(jArray[2],jArray[1]);
					}catch(e){}
				},
				error:function(){

				}
			});
		}

	//});
}

function getFeeInvoiceDetailsByInfraTypeId(feeStructureId,infraTypeId,occupantId,academicStudentFeeInvoiceId,callback){
	$.ajax({
		url:'getFeeInvoiceDetailsByInfraTypeId.json',
		dataType:'json',
		data:{feeItemId:feeStructureId,occupantId:occupantId,infraTypeId:infraTypeId,studentFeeInvoiceId:academicStudentFeeInvoiceId},
		async:false,
		/*beforeSend:function(){
			$('.preview-large').addClass('loading-large');
		},
		complete:function(){
			$('.preview-large').removeClass('loading-large');
		},*/
		success:function(jArray){
			//alert("success");
			var flag = jArray[0]["responseFlag"];
			$('#btnStudentInvoiceCancel').data('FeeItemArray',jArray[1]);
			$('#btnStudentInvoiceCancel').data('studentFeeInvoiceId',academicStudentFeeInvoiceId);
			/*if(flag == '1'){
				showInvoiceDetailsByInfraTypeId(jArray[2]["studentFeeInvoiceId"],jArray[1],jArray[3].studentInvoiceNo);
				setHostelInvoiceGenerationStatus('GENERATED',jArray[2],invoiceHeaderJSON.invoiceHeader[0].occupantId);
				*//****** Activating the Invoice cancel button *******//*
				registerAndShowHostelInvoiceCancellationButton(jArray[2]["studentFeeInvoiceId"]);
				//$('.studentAdmissionCategoryNameChangeLink').hide();

			} else {
				jAlert(jArray[0]["responseText"],10000);
				//$('.studentAdmissionCategoryNameChangeLink').show();
			}*/
			try{
				callback(jArray[2],jArray[1]);
			}catch(e){}
		},
		error:function(){

		}
	});
}

function deleteOccupantBillEntry(studentBillId) {
	jConfirm('Are you sure delete this receipt?','Confirmation',function(flag){
		if(flag){
			confirmtoDeleteReceipt(studentBillId);
		}
	});
}
function confirmtoDeleteReceipt(studentBillId) {
	var reason=$('#reasons').val();
	if(reason==''){
		jAlert('Please Enter Reason for delete this Receipt ');
		return false;
	}
	$.ajax({
		url:'deleteOccupantBillEntry.json',
		data:{
			studentBillId:studentBillId,
			reason:reason
		},
		dataType:'json',
		type:'POST',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jObject){
			jAlert('Deleted Successfully!');
			getHostelStudentBillingDetails(function(jArray){
				showStudentHostelBillingDetails(jArray);
				setHostelInvoiceGenerationStatus('GENERATED',jObject.studentInvoiceObject,jObject.occupantId);
			});
		},error:function(){
			jAlert('Server error!!! Please refresh your page and try again.');
		}
	});
} 

function cancelHostelInvoiceGenerationProcess(invoiceObject, hostelPlanId, isCurrent){
	var studentFeeInvoiceId = invoiceObject.studentFeeInvoiceId;
	cancelHostelInvoiceGenerationProcessCheckPoint(studentFeeInvoiceId,function(jObject){
		var boiler = '';
		if(jObject.errorFlag == 0){
			boiler = 
				'<p style = "color:red">Are you sure to delete this invoice permanently?</p>';
			jConfirm(boiler,'Confirm',function(flag){
				if(flag){
					deleteStudentHostelFeeInvoice(studentFeeInvoiceId,function(responseJObject){
						//getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(gStudentBatchId);
						$('.restructureMsg').hide();
						setHostelInvoiceGenerationStatus('NOT-GENERATED',undefined,responseJObject.occupantId);
						showRoomTypeSpecifyOptionDialog(hostelPlanId, isCurrent);
						$('#divStudentListForInvoiceGeneration').show();
						$('#divStudentInvoiceGeneration').hide();
					});
				}
			});
		} else if(jObject.errorFlag == 1){
			boiler = 
				'<p>Bill(s) are already been generated against this invoice. So the invoice cannot be deleted.'+
					'<br>But this invoice can be restructured&nbsp;&nbsp;/&nbsp;&nbsp;reconfigured.'+
					'</p><p style = "color:red">Are you sure to restructure this invoice?</p>';
			jConfirm(boiler,'Confirm',function(flag){
				if(flag) {
					$('#divShowSponsorshipChoiceOption').find('.studentAdmissionCategoryNameChangeLink').show();
					$('#divShowSponsorshipChoiceOption').find('.studentAdmissionTypeChangeLink').show();
					marksOccupantInvoiceAsRestructured(studentFeeInvoiceId,function(){
						setHostelInvoiceGenerationStatus('NOT-GENERATED',invoiceObject,invoiceObject.occupantId);
						$('.restructureMsg').show();
						showRoomTypeSpecifyOptionDialog(hostelPlanId, isCurrent);
						$('#divStudentListForInvoiceGeneration').show();
						$('#divStudentInvoiceGeneration').hide();
					});
				}
			});
		} else if(jObject.errorFlag == 2){
			boiler = 
				'<p style = "color:red">Sorry, This invoice does not exist!!!</p>';
			jAlert(boiler,'message');
		}
	});
}

function marksOccupantInvoiceAsRestructured(studentFeeInvoiceId,callback){
	$.ajax({
		url:'marksStudentInvoiceAsRestructured.json',
		dataType:'text',
		type:'POST',
		data:'studentFeeInvoiceId='+studentFeeInvoiceId,
		success:function(){
			callback();
		},error:function(){

		}
	});
}

function cancelHostelInvoiceGenerationProcessCheckPoint(studentFeeInvoiceId,callback){
	$.ajax({
		url:'cancelHostelInvoiceGenerationProcessCheckPoint.json',
		dataType:'json',
		data:{studentFeeInvoiceId:studentFeeInvoiceId},
		beforeSend:function(){
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jObject){
			callback(jObject);
		}
	});
}
function deleteStudentHostelFeeInvoice(studentFeeInvoiceId,callback){
	$.ajax({
		url:'deleteStudentHostelFeeInvoice.json',
		dataType:'json',
		type:'POST',
		data:{studentFeeInvoiceId:studentFeeInvoiceId},
		success:function(jObject){
			callback(jObject);
		}
	});
}

function registerAndShowHostelInvoiceCancellationButton(invoiceObject, hostelPlanId, isCurrent){
	//alert("studentFeeInvoiceId: "+studentFeeInvoiceId);
	$('#btnStudentInvoiceCancel').find('input').click(function(){
		cancelHostelInvoiceGenerationProcess(invoiceObject, hostelPlanId, isCurrent);
	});
	$('#btnStudentInvoiceCancel').show();
}

function deleteAndReDistributeBillDetailByStudentInvoiceIdHostel(studentFeeInvoiceId,callback){
	$.ajax({
		url:'deleteAndReDistributeBillDetailByStudentInvoiceIdHostel.json',
		dataType:'json',
		type:'POST',
		data:{studentFeeInvoiceId:studentFeeInvoiceId},
		success:function(){
			callback();
		},error:function(){

		}
	});
}

function unregisterAndHideHostelInvoiceCancellationButton(studentFeeInvoiceId){
	$('#btnStudentInvoiceCancel').find('input').unbind();
	$('#btnStudentInvoiceCancel').hide();
}



/**
 * checkStudentBillPayment returns jObject{response:PAID/UN_PAID,fees:paidFees}
 * @param studentFeeInvoiceId
 * @param studentId
 * @param callback
 */
function checkStudentBillPayment(studentFeeInvoiceId,studentId,callback){
	$.ajax({
		url:'checkStudentBillPayment.json',
		data:'studentFeeInvoiceId='+studentFeeInvoiceId+'&studentId='+studentId,
		dataType:'json',
		beforeSend:function(){
			$('#divAdmissionCancellationArea').find('.preview-bar').addClass('loading-bar');
		},
		complete:function(){
			$('#divAdmissionCancellationArea').find('.preview-bar').removeClass('loading-bar');
		},
		success:function(jObject){
			//alert('Hi');
			callback(jObject);
		},error:function(){
			jAlert('Server error: Please refresh the page!!!');
		}
	});
}

function showStudentRecieptPrintOption(studentFeeInvoiceId,jArray){
	//getHostelStudentBillingDetails(function(jArray){
	if(jArray.length > 0) {
		var paidAmount = getStudentPaidAmount();
		var payableAmount = getStudentPayableAmount();
		//alert(paidAmount + ', '+payableAmount);
		if(paidAmount >= payableAmount){
			var boiler = 
				'<div class="well" style="padding:5px;margin-top:20px;">'+
				'<div class="alert alert-info" style="color:#1d5987;font-weight:bold;font-size:12px;">Print detailed receipt</div>'+
				'<table class = "table">'+
				'<tr>'+
				//'<td width="10%"><label style="width:50px"><input type="radio" value="PDF" id="printPDF" name="recieptPrint" checked="checked">&nbsp;&nbsp;PDF</label></td>'+
				'<td width="10%"><label style="width:100px"><input type="radio" value="PDF" id="printHC"  name="recieptPrint">&nbsp;&nbsp;Hard copy</label></td>'+
				'<td><label><input type="checkbox" checked="true" name="OfficeCopy" id="chkOfficeCopy" value="OfficeCopy">&nbsp;&nbsp;Office copy</label></td>'+
				'<td><label><input type="checkbox" checked="true" name="StudentCopy" id="chkStudentCopy" value="StudentCopy">&nbsp;&nbsp;Student copy</label></td></tr>'+
				'<td><label><input type="checkbox" checked="true" name="Printlogo" id="chkPrintLogo" value="PrintLogo">&nbsp;&nbsp;Print logo</label></td></tr>'+
				'<tr>'+
				'<td colspan="5">'+
				//'<input type = "button" class = "btn btn-inverse btn-mini" value = "PRINT ALL" id = "btnPrintStudentReciept" onclick="printStudentRecieptPDF(\''+studentFeeInvoiceId+'\')">&nbsp&nbsp'+
				'<input type = "button" class = "btn btn-inverse btn-mini" value = "PRINT(only selected)" id = "btnPrintStudentReciept" onclick="showPaidFeeItemListForPrint(\''+studentFeeInvoiceId+'\')"></td>'+
				'</td>'+
				'</tr>'+
				'</table>'+
				'</div>';
			$('#divStudentBillingInformationArea').append(boiler);
		} else {
			var boiler = 
				'<div class="well" style="padding:5px;margin-top:20px;">'+
				'<div class="alert alert-info" style="color:#1d5987;font-weight:bold;font-size:10px;"><i class="icon-warning-sign"></i>&nbsp;&nbsp;Student fee payment should be clear for detailed receipt printing!</div>'+
				'</div>';
			$('#divStudentBillingInformationArea').append(boiler);
		}
	} else {
		var boiler = 
			'<div class="well" style="padding:5px;margin-top:20px;">'+
			'<div class="alert alert-info" style="color:#1d5987;font-weight:bold;font-size:10px;"><i class="icon-warning-sign"></i>&nbsp;&nbsp;Student fee payment should be clear for detailed receipt printing!</div>'+
			'</div>';
		$('#divStudentBillingInformationArea').append(boiler);
	}
	//});
}

function printStudentRecieptPDF(studentFeeInvoiceId){
	/*String invoiceType = request.getParameter("invoiceType");*//**OPEN/SPONSORED/UPGRADED *//*
	var hasStudentCopy = request.getParameter("hasStudentCopy");*//**TRUE/FALSE *//*
	var hasOfficeCopy = request.getParameter("hasOfficeCopy");*//**TRUE/FALSE */
	var invoiceType = 'OPEN';
	var hasOfficeCopy = 'TRUE';
	var hasStudentCopy = 'TRUE';
	var hasBankCopy = 'TRUE';
	var hasGEFCopy = 'TRUE';
	
	var printLogo = 'TRUE';
	if(!$('#chkPrintLogo').is(':checked')){
		printLogo = 'FALSE';
	}
	if(!$('#chkOfficeCopy').is(':checked')){
		hasOfficeCopy = 'FALSE'; 
	}
	if(!$('#chkStudentCopy').is(':checked')){
		hasStudentCopy = 'FALSE'; 
	}
	if(!$('#chkBankCopy').is(':checked')){
		hasBankCopy = 'FALSE'; 
	}
	if(!$('#chkGEFCopy').is(':checked')){
		hasGEFCopy = 'FALSE'; 
	}
	if(hasStudentCopy == 'FALSE' && hasOfficeCopy == 'FALSE' && hasBankCopy == 'FALSE' && hasGEFCopy == 'FALSE'){
		jAlert('Please select at least one copy of receipt!','error');
	} else {
		window.location.replace('printStudentRecieptPDF.json?studentFeeInvoiceId='+studentFeeInvoiceId+'&hasStudentCopy='+hasStudentCopy+'&hasOfficeCopy='+hasOfficeCopy+'&invoiceType='+invoiceType+'&printLogo='+printLogo+'&hasBankCopy='+hasBankCopy+'&hasGEFCopy='+hasGEFCopy);
	}
}

function printPaymentWiseStudentReceipt(studentBillId,billSerialNo){
	/*String invoiceType = request.getParameter("invoiceType");*//**OPEN/SPONSORED/UPGRADED *//*
	var hasStudentCopy = request.getParameter("hasStudentCopy");*//**TRUE/FALSE *//*
	var hasOfficeCopy = request.getParameter("hasOfficeCopy");*//**TRUE/FALSE */
	var invoiceType = 'OPEN';
	var hasOfficeCopy = 'TRUE';
	var hasStudentCopy = 'TRUE';
	var hasBankCopy = 'TRUE';
	var hasGEFCopy = 'TRUE';
	var printLogo = 'TRUE';

	if(!$('#chkOfficeCopy'+billSerialNo+'').is(':checked')) {
		hasOfficeCopy = 'FALSE'; 
	}
	if(!$('#chkStudentCopy'+billSerialNo+'').is(':checked')) {
		hasStudentCopy = 'FALSE'; 
	}
	if(!$('#chkPrintLogo'+billSerialNo+'').is(':checked')){
		printLogo = 'FALSE';
	}
	if(!$('#chkBankCopy'+billSerialNo+'').is(':checked')){
		hasBankCopy = 'FALSE'; 
	}
	if(!$('#chkGEFCopy'+billSerialNo+'').is(':checked')){
		hasGEFCopy = 'FALSE'; 
	}
	if(hasStudentCopy == 'FALSE' && hasOfficeCopy == 'FALSE' && hasBankCopy == 'FALSE' && hasGEFCopy == 'FALSE'){
		jAlert('Please select at least one copy of receipt!','error');
	} else {
		window.location.replace('printPaymentWiseStudentReceiptPDF.json?studentBillId='+studentBillId+'&hasStudentCopy='+hasStudentCopy+'&hasOfficeCopy='+hasOfficeCopy+'&invoiceType='+invoiceType+'&printLogo='+printLogo+'&printType=Original'+'&hasBankCopy='+hasBankCopy+'&hasGEFCopy='+hasGEFCopy);
	}
}

function printPaymentWiseStudentReceiptHorizontalHostel(studentBillId,billSerialNo,printType){
	/*String invoiceType = request.getParameter("invoiceType");*//**OPEN/SPONSORED/UPGRADED *//*
	var hasStudentCopy = request.getParameter("hasStudentCopy");*//**TRUE/FALSE *//*
	var hasOfficeCopy = request.getParameter("hasOfficeCopy");*//**TRUE/FALSE */
	var invoiceType = 'OPEN';
	var hasOfficeCopy = 'TRUE';
	var hasStudentCopy = 'TRUE';
	var hasBankCopy = 'TRUE';
	var hasGEFCopy = 'TRUE';
	var printLogo = 'TRUE';

	if(!$('#chkOfficeCopy'+billSerialNo+'').is(':checked')) {
		hasOfficeCopy = 'FALSE'; 
	}
	if(!$('#chkStudentCopy'+billSerialNo+'').is(':checked')) {
		hasStudentCopy = 'FALSE'; 
	}
	if(!$('#chkPrintLogo'+billSerialNo+'').is(':checked')){
		printLogo = 'FALSE';
	}
	if(!$('#chkBankCopy'+billSerialNo+'').is(':checked')){
		hasBankCopy = 'FALSE'; 
	}
	if(!$('#chkGEFCopy'+billSerialNo+'').is(':checked')){
		hasGEFCopy = 'FALSE'; 
	}
	if(hasStudentCopy == 'FALSE' && hasOfficeCopy == 'FALSE' && hasBankCopy == 'FALSE' && hasGEFCopy == 'FALSE'){
		jAlert('Please select at least one copy of receipt!','error');
	} else {
		window.location.replace('printPaymentWiseStudentReceiptPDFHorizontal.json?studentBillId='+studentBillId+'&hasStudentCopy='+hasStudentCopy+'&hasOfficeCopy='+hasOfficeCopy+'&invoiceType='+invoiceType+'&printLogo='+printLogo+'&printType='+printType+'&hasBankCopy='+hasBankCopy+'&hasGEFCopy='+hasGEFCopy);
	}
}

function calculateDenominationAmount(denominationId)
{
	var currency = parseFloat($('#denomination-'+denominationId).text());
	var qty = parseFloat($('#qty-'+denominationId).val());
	var subTotal = parseFloat(currency) * parseFloat(qty);
	var total = 0;
	$('#total-'+denominationId).text(subTotal);

	$('.subtotal').each(function(){
		if($(this).text()!=undefined)
			total = parseFloat(total) + parseFloat($(this).text());
	});
	$('#finalTotal').text(total);
}



function saveDenominationValues()
{
	denominationQtyArray = new Array();
	for(var i=0;i<denominationIdArray.length;i++)
	{
		denominationQtyArray.push(parseInt($('#qty-'+denominationIdArray[i]).val()));
	}
}


function checkAndGetCategoryReservationListByAdmissionTypeId(studentBatchId,admissionTypeId,callback){
	$.ajax({
		url:'checkAndGetCategoryReservationListByAdmissionTypeId.json',
		dataType:'json',
		data:'studentBatchId='+studentBatchId+'&admissionTypeId='+admissionTypeId,
		success:function(jObject){
			callback(jObject);
		},error:function(){
			jAlert('Server error: Please refresh the page and try again!!!');
		}

	});
}

function checkAndGetCategoryReservationListByAdmissionTypeIdAndStudentId(studentId,admissionTypeId,callback){
	$.ajax({
		url:'checkAndGetCategoryReservationListByAdmissionTypeIdAndStudentId.json',
		dataType:'json',
		data:'studentId='+studentId+'&admissionTypeId='+admissionTypeId,
		success:function(jObject){
			callback(jObject);
		},error:function(){
			jAlert('Server error: Please refresh the page and try again!!!');
		}

	});
}



function getFeeItemsForPrintingReciept(studentInvoiceId){
	$.ajax({
		url:'getFeeItemsForPrintingReciept.htm',
		dataType:'json',
		data:'studentFeesInvoiceId='+studentFeesInvoiceId,
		success:function(jArray){
			callback(jArray);
		},error:function(){
			jAlert('Server error: Please refresh the page and try again!!!');
		}
	});
}

function getPaidFeeItemList(studentFeeInvoiceId,callback){
	$.ajax({
		url:'getPaidFeeItemList.json',
		dataType:'json',
		type:'POST',
		data:'studentFeeInvoiceId='+studentFeeInvoiceId,
		beforeSend:function(){
			$('#divFeeItemListForPrinting').html('<div class="preview-large"></div>');
			$('#divFeeItemListForPrinting').find('.preview-large').addClass('loading-large');
		},complete:function(){
			$('#divFeeItemListForPrinting').find('.preview-large').removeClass('loading-large');
		},
		success:function(jArray){
			try{
				callback(jArray);
			}catch(e){alert(e);}
		},error:function(){
			jAlert('Server error! Please refresh the page and try again.');
		}
	});
}

function showPaidFeeItemListForPrint(studentFeeInvoiceId){
	$('#divShowFeeItemListForPrintingDialog').modal('show');
	getPaidFeeItemList(studentFeeInvoiceId,function(jArray){
		var boiler = '<table class="table table-bordered table-condensed table-paidFeeItemList">';
		boiler += '<thead>';
		boiler += '<tr>';
		boiler += '<th><input type="checkbox" id = "chkSelectAll" onclick="selectAllCheckBox()"></th>';
		boiler += '<th>Sr.No.</th>';
		boiler += '<th>Particular</th>';
		boiler += '<th>Amount(in Rs.)</th>';
		boiler += '<th>Bill No.</th>';
		boiler += '<th style="text-align:center"><input type ="button" class="btn btn-inverse btn-mini" value="Print(only checked)" onclick = "printFeeItemWiseOnlyChecked()"></th>';
		boiler += '</tr>';
		boiler += '</thead><tbody id="tblPaidFeeItemListBody">';
		boiler += '</tbody></table>';
		$('#divFeeItemListForPrinting').html(boiler);
		for(var i = 0 ; i < jArray.length ; i++) {
			boiler = '<tr id="trPaidFeeItemRow-'+i+'" class="paidFeeItemRow">';
			boiler += '<td><input type="checkbox" id = "" name="paidFeeItem" ></td>';
			boiler += '<td>'+(i+1)+'</td>';
			boiler += '<th>'+jArray[i].feeItemName+'</th>';
			boiler += '<td style="text-align:right">'+jArray[i].amount+'</td>';
			boiler += '<td>'+jArray[i].studentBillNo+'</td>';
			boiler += '<td style="text-align:center"><input type ="button" class="btn btn-inverse btn-mini" value="Print" onclick = "printFeeItemWise(\''+studentFeeInvoiceId+'\',\''+jArray[i].feeItemId+'\',\''+jArray[i].amount+'\',\''+jArray[i].studentBillId+'\')"></td>';
			boiler += '</tr>';
			$('#tblPaidFeeItemListBody').append(boiler);
			$('#trPaidFeeItemRow-'+i+'').data('studentFeeInvoiceId',studentFeeInvoiceId);
			$('#trPaidFeeItemRow-'+i+'').data('feeItemId',jArray[i].feeItemId);
			$('#trPaidFeeItemRow-'+i+'').data('amount',jArray[i].amount);
			$('#trPaidFeeItemRow-'+i+'').data('studentBillId',jArray[i].studentBillId);
		}

	});
}

function printFeeItemWise(studentFeeInvoiceId,feeItemId,amount,studentBillId){
	/*String invoiceType = request.getParameter("invoiceType");*//**OPEN/SPONSORED/UPGRADED *//*
	var hasStudentCopy = request.getParameter("hasStudentCopy");*//**TRUE/FALSE *//*
	var hasOfficeCopy = request.getParameter("hasOfficeCopy");*//**TRUE/FALSE */
	var hasOfficeCopy = 'TRUE';
	var hasStudentCopy = 'TRUE';
	var printLogo = 'TRUE';
	if(!$('#chkPrintLogo').is(':checked')){
		printLogo = 'FALSE';
	}
	if(!$('#chkOfficeCopy').is(':checked')){
		hasOfficeCopy = 'FALSE'; 
	}
	if(!$('#chkStudentCopy').is(':checked')){
		hasStudentCopy = 'FALSE'; 
	}

	var feeItemsArray = new Array();
	feeItemsArray.push(feeItemId+"~"+amount);
	if(hasStudentCopy == 'FALSE' && hasOfficeCopy == 'FALSE'){
		jAlert('Please select at least one copy of receipt!','error');
	} else {
		window.location.replace('printStudentRecieptPDFFeeItemWise.json?studentFeeInvoiceId='+studentFeeInvoiceId+
				'&hasStudentCopy='+hasStudentCopy+
				'&hasOfficeCopy='+hasOfficeCopy+
				'&feeItemId='+feeItemsArray+
				'&studentBillDetailIds='+studentBillId+
				'&printLogo='+printLogo
		);
	}	
}



function printFeeItemWiseOnlyChecked(){
	var feeItemsArray = new Array();
	var studentBillArray = new Array();
	var studentFeeInvoiceId = 0;
	$(".table-paidFeeItemList").find('.paidFeeItemRow').each(function(){
		if($(this).find('input[name="paidFeeItem"]').is(":checked")){
			var feeItemId = $(this).data('feeItemId');
			var studentBillId = $(this).data('studentBillId');
			var amount = $(this).data('amount');
			studentFeeInvoiceId =  $(this).data('studentFeeInvoiceId');
			if(studentBillArray.indexOf(studentBillId) == -1){
				studentBillArray.push(studentBillId);
			}
			feeItemsArray.push(feeItemId+"~"+amount);
		}
	});
	if(feeItemsArray.length > 0 ){
		/*String invoiceType = request.getParameter("invoiceType");*//**OPEN/SPONSORED/UPGRADED *//*
		var hasStudentCopy = request.getParameter("hasStudentCopy");*//**TRUE/FALSE *//*
		var hasOfficeCopy = request.getParameter("hasOfficeCopy");*//**TRUE/FALSE */
		var hasOfficeCopy = 'TRUE';
		var hasStudentCopy = 'TRUE';
		var printLogo = 'TRUE';
		if(!$('#chkPrintLogo').is(':checked')){
			printLogo = 'FALSE';
		}
		if(!$('#chkOfficeCopy').is(':checked')){
			hasOfficeCopy = 'FALSE'; 
		}
		if(!$('#chkStudentCopy').is(':checked')){
			hasStudentCopy = 'FALSE'; 
		}



		if(hasStudentCopy == 'FALSE' && hasOfficeCopy == 'FALSE'){
			jAlert('Please select at least one copy of receipt!','error');
		} else {
			window.location.replace('printStudentRecieptPDFFeeItemWise.json?studentFeeInvoiceId='+studentFeeInvoiceId+
					'&hasStudentCopy='+hasStudentCopy+
					'&hasOfficeCopy='+hasOfficeCopy+
					'&feeItemId='+feeItemsArray+
					'&studentBillDetailIds='+studentBillArray+
					'&printLogo='+printLogo
			);
		}	
	} else {
		jAlert('Please select row!!!');
	}
}

function selectAllCheckBox(){
	if($('#chkSelectAll').is(':checked')){
		$('.table-paidFeeItemList').find('input[name="paidFeeItem"]').attr('checked',true);
	} else {
		$('.table-paidFeeItemList').find('input[name="paidFeeItem"]').attr('checked',false);	
	}
}





/************************************************************/

function getStudentFeeDueReportOverallByStudentBatchId(studentBatchId) {
	$.ajax({
		url:'getStudentFeeDueReportTotalFeeStructureWiseByStudentBatchId.json',
		data:'studentBatchId='+studentBatchId,
		dataType:'json',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			if(jArray.length == 3){
				//showStudentOverallFeeDueReportForInvoiceByStudentBatchId(jArray);
			}
		}
	});
}


function redirectToInvoiceFunctionForHostel(trId, hostelPlanId, isCurrent){
	
	if(gRoomType != "" ){
		if(gRoomname == "" || gRoomname == 'Not-Allocated'){
			jAlert("Hostel room has not been alloted" , "Message");
		}
	}
	//var studentId = $('.studentPersonalInformation').find('.StudentId').attr('id');
	addFeeRelatedBoilerForInvoice('INVOICE');
	//$('#divStudentInvoiceGeneration').show();
	var studName = $('.studentPersonalInformation').find('.studentName').text();
	var occupantId = $('.studentPersonalInformation').find('.occupantId').text();
	var instituteCourseStrengthId = $('.studentPersonalInformation').find('.instituteCourseStrengthId').text();


	var feeItemObj= $('#'+trId).data('feeStructureObject');
	$('#txtFeeStructureDescription').data('feeStructureObj',feeItemObj);

	var feeStructureId = feeItemObj.feeItemId;
	var instituteCourseStrength = instituteCourseStrengthId;
	var freezeStatus = feeItemObj.freezeStatus;
	var revisionNo = feeItemObj.revisionNo;
	var instituteCourseId = feeItemObj.instituteCourseId;

	$('#txtFeeStructureDescription').data('FreezeStatus',freezeStatus);
	$('#txtFeeStructureDescription').data('Revision',revisionNo);
	$('#txtFeeStructureDescription').data('FeeItemId',feeStructureId);
	$('#txtFeeStructureDescription').data('InstituteCourseStrengthId',instituteCourseStrength);
	$('#txtFeeStructureDescription').data('instituteCourseId',instituteCourseId);
	setFeeStructureFreezeStatus(freezeStatus);
	setFeeStructureRevision(revisionNo);
	// alert(studentId);
	var boiler='Student Name : '+studName;
	$('#StudentName').html(boiler);
	getInvoiceRelatedInformationByOccupantId(occupantId, hostelPlanId, isCurrent);
}


/**
 * function for conflict resoloving of 
 * @param type
 */
function addFeeRelatedBoilerForInvoice(type,callBack) {
	$('#divStudentListForInvoiceGeneration').show();
	//showStudentListByCourseSemeserAndDivisionForAdmission();
	var id = 'btnStudentInvoiceCancel';
	var editBtnFlag = $('#txtStudentSearchBarInvoiceHostel').data('isEditDeleteAuth');
    if(!editBtnFlag) {
        id = 'btnstdEditDeleteAuthBtn';
    }
	var boiler='';
	if(type == 'INVOICE'){
		boiler = 
			'<div style = "width:100%;display:none;margin-top:5px" id = "divStudentInvoiceGeneration" >'+
			'										<div style = "float:right;margin:-0px -5px">'+
			'											<a class="button"  id = "" onclick="$(\'#divStudentInvoiceGeneration\').hide();$(\'#divStudentListForInvoiceGeneration\').show();unregisterAndHideHostelInvoiceCancellationButton();$(\'#divStudentCancellationList\').show();getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(\''+gStudentBatchId+'\')" title="Close invoice" href="javascript:void(0)"><span class="icon icon8"></span></a>'+
			'										</div>'+
			'										 <div class="" id="divShowInvoiceFormHeader" >'+
			'											 <div class="alert alert-info"> <h4 style="width:40%">Invoice generation processing for&nbsp;<strong><span class="studentName" style="font-size:16px"></span></strong></h4>'+
			'											 <div style="margin-top:-15px;margin-left:82%;width:10%;" class="preview-bar"></div>'+
			'											 <span id="'+id+'" style="float: right;margin-top:-24px;margin-right:25px;"><input type="button" title="Cancel this invoice" class="btn btn-inverse btn-mini" value="Cancel this invoice"></span>'+
			'											 </div>'+
			'										   <div class="" id="divShowInvoiceForm" style = "">'+

			'										   </div>'+
			'									   </div>'+
			'		</div>';
		$('#divFeeInvoiceGenerationArea').html(boiler);
	} else {
		 boiler =
			'<div style = "width:100%;margin-top:5px;display:none" id = "divStudentFeesCacellation" >'+
			'				<div style = "float:right;margin:-0px -5px">'+
			'					<a class="button"  id = "" onclick= "$(\'#divStudentFeesCacellation\').hide();$(\'#divStudentCancellationList\').show();getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(\''+gStudentBatchId+'\')" title="Close invoice" href="javascript:void(0)"><span class="icon icon8"></span></a>'+
			'				</div>'+
			'				<div class="" id="divShowInvoiceFormHeader" >'+
			'					 <div class="alert alert-info"> <h4 style="width:40%">Admission cancellation processing for&nbsp;<strong><span class="studentName" style="font-size:16px"></span></strong></h4>'+
			'					 <div style="margin-top:-15px;margin-left:82%;width:10%;" class="preview-bar"></div>'+
			'					 <span id="'+id+'" style="float: right;margin-top:-24px;margin-right:25px;"><input type="button" title="Cancel this invoice" class="btn btn-inverse btn-mini" value="Cancel this invoice"></span>'+
			'					 </div>'+
			'				   <div class="" id="divShowInvoiceForm" style = "">'+

			'				   </div>'+
			'			   </div>'+
			'			</div>';
		$('#divFeeInvoiceGenerationArea').html(boiler);
	}
	$('#btnstdEditDeleteAuthBtn').click(function(){
	    jAlert('You doesn\'t have Cancel Invoice Authority');
	})
	try{
		callBack(boiler);
	}catch(e){}
}

function chanageInvoiceForNewFeeStructure(studentFeeInvoiceId){
	var studentId = $('.studentPersonalInformation').find('.studentId').text();
	getStudentPersonalInfoByStudentId(studentId,function(studentObj){
		gOccupantInvoiceRelatedObject = studentObj;
		if(gOccupantInvoiceRelatedObject == undefined){
			//alert('HI----if');	
			studentName = getStudentName();
			category = getStudentCategory();
			admissionDate =  getStudentAdmissionDate();
			course = getStudentCourseName();
			gender = getStudentGender();
			admissionType = getStudentAdmissionType();
			admissionCategoryName = getStudentAdmissionCategoryName();
			studentInstituteCourseId = getSelectedStudentBatchId2();
			feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
			studentId = getSelectedStudentId2();
		}  else {
			//alert('HI----else');
			studentName = gOccupantInvoiceRelatedObject.firstName +' '+gOccupantInvoiceRelatedObject.lastName;
			category = gOccupantInvoiceRelatedObject.studentCategory;
			admissionDate =  gOccupantInvoiceRelatedObject.admissionDate;
			course = gOccupantInvoiceRelatedObject.courseName;
			gender = gOccupantInvoiceRelatedObject.gender;
			admissionType = gOccupantInvoiceRelatedObject.studentAdmissionTypeName;
			admissionCategoryName = gOccupantInvoiceRelatedObject.studentAdmissionCategory;
			studentInstituteCourseId = gOccupantInvoiceRelatedObject.studentInstituteCourseId;
			studentId = gOccupantInvoiceRelatedObject.studentId;
			if($('#cbAcademicBatch').val() != undefined){
				instituteStrengthId = $('#cbAcademicBatch').val().split('-')[0];
			} else {
				instituteStrengthId = undefined;
			}
			if(instituteStrengthId == undefined){
				instituteStrengthId = gOccupantInvoiceRelatedObject.instituteCourseStrengthId;
			}

			feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
			//alert('feeStructureId: '+feeStructureId);
			if(feeStructureId == '0' || feeStructureId == 0 || feeStructureId == undefined){
				feeStructureId = '0';
			}
		}
		if(admissionType == ''){
			admissionType = 'Not specified';
		}
		$('.studentName').html(studentName);

		$('.studentProfileImage').html('<img src="getStudentProfileImageById.json?id='+studentId+'&type=profile" class = "img-polaroid" height = "110px" width = "100px" alt = "No image">');
		var boiler = 
			'<table class = "table table-bordered table-condensed">'+
			'<tr>'+
			'<th style = "text-align:left">Name</th><td>'+studentName+'</td>'+
			'</tr>'+
			'<tr>'+	
			'<th style = "text-align:left">Category</th><td><span class="studentCategory">'+category+'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href = "javascript:void(0)" style = "color:#0088CC;display:none;" onclick = "showChangeStudentCategory()">Change category</a></span></td>'+
			'</tr>'+
			'<tr>'+
			'<th style = "text-align:left">Gender</th><td><span class="studentGender">'+gender+'</span><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href = "javascript:void(0)" style = "color:#0088CC;display:none;" onclick = "showSpecifyStudentGender()">Specify gender</a></span></td>'+
			'</tr>'+
			'<tr>'+
			'<th style = "text-align:left"> Course</th><td>'+course+'</td>'+
			'</tr>'+
			'<tr>'+
			'<th style = "text-align:left">Admission date</th><td>'+admissionDate+'</td>'+
			'</tr>'+
			'<tr id="trAdmissionType">'+
			'<th style = "text-align:left">Admission type</th><td><span class="studentAdmissionType">'+admissionType+'</span><span class="studentAdmissionTypeChangeLink">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href = "javascript:void(0)" style = "color:#0088CC;display:none;" onclick = "showSpecifyAdmissionTypeDialog(\''+studentInstituteCourseId+'\',\''+instituteStrengthId+'\')">Change</a><div class="preview-bar" style="float:right;margin-top:4px;"></div></span></td>'+
			'</tr>'+
			'<tr id="trAdmissionCategoryType">'+
			'<th style = "text-align:left">Admission category name</th><td><span class="studentAdmissionCategoryName">'+admissionCategoryName+'</span><span class="studentAdmissionCategoryNameChangeLink">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href = "javascript:void(0)" style = "color:#0088CC;display:none;" onclick = "showSpecifyAdmissionCategoryDialog(\''+studentInstituteCourseId+'\')">Change</a><div class="preview-bar" style="float:right;margin-top:4px;"></div></span></td>'+
			'</tr>'+
			'</table>';
		$('.studentInformation').html(boiler);
		$('#divFeeInvoiceChangeForStudentDialog').modal('show');

		$.ajax({
			url:'getFeeStructureDifferenceForExceptionalCase.json',
			dataType:'json',
			data:'studentFeeInvoiceId='+studentFeeInvoiceId,
			success:function(jObject){
				var boiler = ''; 
				boiler = '<div class="alert alert-info" style="padding:1px"><i class="icon-ok"></i><strong>No need to change. Student fee invoice already done.</strong></div>';
				//boiler =+ '<div class="well">';
				//boiler =+ '</div>';
				if(jObject.status == 'UN-CHANGED'){
					$('tr#trFeeStructureId-'+jObject.feeStructureId).find('input.changeInvoiceBtn').attr('disabled','disabled');
					$('tr#trFeeStructureId-'+jObject.feeStructureId).find('input.changeInvoiceBtn').val('Invoice Change Done');
				}

				$('#divFeeInvoiceChangeAreaForStudent').html(boiler);
				if(jObject.status == 'CHANGED'){
					$('.btnChangeStudentInvoiceForNewFeeStructure').removeAttr('disabled');
					$('.btnChangeStudentInvoiceForNewFeeStructure').unbind();
					$('.btnChangeStudentInvoiceForNewFeeStructure').bind('click',function(){
						$.ajax({
							url:'chanageInvoiceForNewFeeStructure.json',
							dataType:'json',
							data:'studentFeeInvoiceId='+studentFeeInvoiceId,
							success:function(jObject){
								if(jObject.reponseFlag == 1){
									$('#divFeeInvoiceChangeForStudentDialog').modal('hide');
								}
								jAlert(jObject.reponseText);
							},error:function(){
								jAlert('Server error: Please refresh the page and try again!!!');
							}
						});
					});
				} else {
					$('.btnChangeStudentInvoiceForNewFeeStructure').attr('disabled','disabled');
				}
			},error:function(){}
		});
	});	
}


function getStudentFeeDepositDetailOverallByStudentId(studentId,callback){
	$.ajax({
		url:'getStudentFeeDepositDetailOverallByStudentId.json',
		dataType:'json',
		data:'studentId='+studentId,
		type:'GET',
		success:function(jObject){
			callback(jObject);
		},error:function(){

		}
	});
}


function showEditableHostelInvoice(studentFeeInvoiceId){
	$('#tblStudentInvoiceDetails').find('tr.invoiceDetail').each(function(){
		var amount = $(this).find('.amount').text();
		$(this).data('realAmount',amount);
		var boiler = '<input class="amountEdit" type="text"  value="'+amount+'"  style="width:100px;text-align:right">';
		$(this).find('.amount').html(boiler);
	});
	$('.invoiceEditControll').show();
	$('.btn-editStudentInvoice').unbind();
	$('.btn-editStudentInvoice').bind('click',function(){
		var array = new Array();
		var subjects = '';
		$('#tblStudentInvoiceDetails').find('tr.invoiceDetail').each(function(){
			if($(this).find('.amountEdit').val() != undefined){
				var amount = $(this).find('.amountEdit').val().trim();
				var feeItemId = $(this).find('.feeItemId').attr('feeItemId');
				var desc = $(this).data('desc');
				if(desc == undefined){
					desc = '';
				}
				//var boiler = '<input class="amountEdit" type="text"  value="'+amount+'" dir="rtl" style="width:100px">';
				//$(this).find('.amount').html(boiler);
				subjects = '{' 
					+ '\"feeItemId\":\"'+feeItemId+'\",'
					+ '\"amount\":\"'+amount+'\",'
					+ '\"desc\":\"'+desc+'\"'
					+ '}';

				array.push(subjects);				
			}
		});
		array = '['+array.join(',')+']';
		saveEditedStudentHostelInvoice(array,studentFeeInvoiceId);
	});

	$('.btn-cancelEditStudentInvoice').unbind();
	$('.btn-cancelEditStudentInvoice').bind('click',function(){
		$('#tblStudentInvoiceDetails').find('tr.invoiceDetail').each(function(){
			var amount = $(this).data('realAmount');
			$(this).find('.amount').html(amount);
		});
		$('.invoiceEditControll').hide();
	});

	$('#tblStudentInvoiceDetails').find('.amountEdit').keypress(function(e){
		var code = (e.keyCode?e.keyCode:e.which);
		if (code == 13 ) {
			var array = new Array();
			var subjects = '';
			var trObj = $(this).parents('tr');
			var amount = $(trObj).find('.amountEdit').val().trim();
			var feeItemId = $(trObj).find('.feeItemId').attr('feeItemId');
			var desc = $(trObj).data('desc');
			//var boiler = '<input class="amountEdit" type="text"  value="'+amount+'" dir="rtl" style="width:100px">';
			//$(this).find('.amount').html(boiler);
			subjects = '{' 
				+ '\"feeItemId\":\"'+feeItemId+'\",'
				+ '\"amount\":\"'+amount+'\",'
				+ '\"desc\":\"'+desc+'\"'
				+ '}';
			array.push(subjects);
			array = '['+array.join(',')+']';
			saveEditedStudentHostelInvoice(array,studentFeeInvoiceId);
		}
	});

	$('#tblStudentInvoiceDetails').find('.amountEdit').focus(function(e){
		$('#tblStudentInvoiceDetails').find('tr.invoiceDetail').each(function(){
			var feeItemId = $(this).find('.feeItemId').attr('feeItemId');
			if($('#reason-'+feeItemId) != undefined){
				var description = $('#reason-'+feeItemId).val();
				if(description != undefined){
					$(this).data('desc',description);
					$(this).find('.desc').text(description);
				}
			}
		});

		var trObj = $(this).parents('tr');
		var feeItemId =  $(trObj).find('.feeItemId').attr('feeItemId');
		$(this).addClass('popOver1');

		var description = $('#reason-'+feeItemId).val();
		if(description == undefined){
			$('.popOver1').each(function(){
				$(this).popover('destroy');
			});
			var boiler = '<div class="alert alert-info" style="padding:2px;">Please specify reason in 50 chararters</div><br>'+
			'<table style="" id = "" class="table table-condensed table-bordered"><tr><td>'+
			'<input style="margin-top:3px" type="text" id="reason-'+feeItemId+'" placeholder="Mention proper comment for change" maxlength="50">'+
			'<input type="button" class="btn btn-inverse btn-mini" value="Ok" onclick="saveAndClosePopover(\''+feeItemId+'\')">'+
			'</td></tr>'+
			'</table>';
			//alert(boiler);
			$(this).popover({trigger:'manual',placement:'left',html:true,content:boiler,title:'Reason/Desc'});
			$(this).popover('show');
		//	$('.popover-title').append('<span style="float:right" class="pointer" title="close" onclick="closePopover()">X</span>');
			/*var desc = $(this).parents('tr').data('desc');
			if(desc != undefined)
				$('#reason-'+feeItemId).val(desc);
			else{
				desc = $(trObj).find('.desc').text();
				$('#reason-'+feeItemId).val(desc);
			}*/
		}
	});


	/*$('#tblStudentInvoiceDetails').find('.amountEdit').blur(function(e){
		$('#tblStudentInvoiceDetails').find('tr.invoiceDetail').each(function(){
			var feeItemId = $(this).find('.feeItemId').attr('feeItemId');
			if($('#reason-'+feeItemId) != undefined){
				var description = $('#reason-'+feeItemId).val();
				if(description != undefined){
					$(this).data('desc',description);
				}
			}
		});
		$('.popOver1').each(function(){
			$(this).popover('destroy');
		});
	});*/
}
function saveAndClosePopover(feeItemId){
	if($('#reason-'+feeItemId).val() != undefined){
		var description = $('#reason-'+feeItemId).val();
		if(description != undefined){
			$('#particular-'+feeItemId).data('desc',description);
			$('#particular-'+feeItemId).find('.desc').text(description);
		}
	}
	$('.popOver1').each(function(){
		$(this).popover('destroy');
	});
}

function closePopover(){
	$('.popOver1').each(function(){
		$(this).popover('destroy');
	});
}
function saveEditedStudentHostelInvoice(array,studentFeeInvoiceId,callback){
	var studentInvoiceCancellationDate = '';
	if($('#studentInvoiceCancellationDate2').val()!=undefined){
		studentInvoiceCancellationDate = $('#studentInvoiceCancellationDate2').val();
	}
	$.ajax({
		url:'saveEditedStudentHostelInvoice.json',
		dataType:'json',
		data:{studentIdStatus:array,studentFeeInvoiceId:studentFeeInvoiceId,studentInvoiceCancellationDate:studentInvoiceCancellationDate},
		type:'POST',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray1){
			
			$('.popOver1').each(function(){
				$(this).popover('destroy');
			});

			if(jArray1[0] !=undefined && jArray1[0].flag!=undefined && jArray1[0].flag=='false'){
				jAlert(jArray1[0].msg);
				return false;
			}
			var jArray = jArray1[0];
			var jObj = jArray1[1];
			for(var i = 0 ; i < jArray.length ; i++) {
				var amount = jArray[i].amount;
				var feeItemId = jArray[i].feeItemId;
				$('tr#particular-'+feeItemId).find('.amount').html(parseFloat(amount.toString()).toFixed(2));
				$('tr#particular-'+feeItemId).find('.amount').data('original_value',amount);
			}
			var totalAmt = 0.0;
			var editDoneflag = true;
			$('#tblStudentInvoiceDetails').find('tr.invoiceDetail').each(function(){
				var amount = $(this).find('.amount').text();
				if(amount != ''){
					if(!isNaN(amount)){
						totalAmt += parseFloat(amount);
					} else {
						amount = $(this).find('.amountEdit').val();
						if(!isNaN(amount))
							totalAmt += parseFloat(amount);
					}					
				} else {
					editDoneflag = false;
					amount = $(this).find('.amountEdit').val();
					if(!isNaN(amount))
						totalAmt += parseFloat(amount);
				}
			});
			// alert(totalAmt);
			$('.grandTotal').text(commaFormatted(totalAmt.toFixed(2)));
			if(editDoneflag)
				$('.invoiceEditControll').hide();
			
			if(jObj.refreshBillFlag){
				getHostelStudentBillingDetails(function(jArray){
					showStudentHostelBillingDetails(jArray);
				});
			}
		},error:function(){

		}
	});
}

function resetDefaultStudentHostelInvoice(studentFeeInvoiceId){
	$.ajax({
		url:'resetDefaultStudentHostelInvoice.json',
		dataType:'json',
		data:{studentFeeInvoiceId:studentFeeInvoiceId},
		type:'POST',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			var total = 0.0;
			$('.popOver1').each(function(){
				$(this).popover('destroy');
			});
			for(var i = 0 ; i < jArray.length ; i++) {
				var amount = jArray[i].amount;
				var feeItemId = jArray[i].feeItemId;
				amount = parseFloat(amount);
				total += amount;
				$('tr#particular-'+feeItemId).find('.amount').html(amount.toFixed(2));
			}
			$('.grandTotal').text(commaFormatted(total.toFixed(2)));
			$('.invoiceEditControll').hide();
		},error:function(){

		}
	});
}



function getOccupantPersonalInfoByOccupantId(occupantId,callback){
	$.ajax({
		url:'getOccupantPersonalInfoByOccupantId.json',
		dataType:'json',
		data:'occupantId='+occupantId,
		success:function(jObject){
			try{
				callback(jObject);
			}catch(e){
				alert(e);
			}
		}
	});
}


function getOccupantInvoiceHeader(occupantId, hostelPlanId, isCurrent ,callback){
//alert("hostelPlanId1=="+hostelPlanId)
	//var categoryId = rowObj.categoryId;
	//var studentName = getStudentName();
	if(occupantId == undefined) {
		occupantId = gOccupantInvoiceRelatedObject.occupantId;
	}

	$.ajax({
		url:'getInvoiceHeaderAjaxByOccupantId.json?occupantId='+occupantId+'&hostelPlanId='+hostelPlanId,
		dataType:'json',
		type:'POST',
		async:false,
		success:function(invoiceHeaderJSON){
			callback(invoiceHeaderJSON);
		},error:function(){
			
		}
	});
}

function showStudentHostelInvoiceForm(isCurrent, callback) {
	//alert('hi');
	var feeInvoiceId = getStudentInvoiceId();
	var isDevelopmentEnv = $('#isDevelopmentEnv').val();
	var boiler =
	'<div id = "invoice-content">'+
	'<div style="width:90% auto;" id = "" class = "">'+
	'<table id="rowTable" style="width: 100%; margin-top: -10px;">'+
	'<tbody>'+
		'<tr>'+
		'<td align="left" style="width: 10%;">'+
		'<img height="50px;" width="60px;" src="getTrustLogo.json">'+
		'</td>'+
		'<td align="center" height="50px;">'+
		'<p id="pTrustName" style="font:9px/10px Lucida Grande, Lucida Sans, Arial, sans-serif; color: black;"></p>'+
		'<p id="pInstituteName" style="font:13px/16px Lucida Grande, Lucida Sans, Arial, sans-serif; color:black; font-weight: bold;"></p>'+
		'<p id="pInstituteAddress" style="font:9px/10px Lucida Grande, Lucida Sans, Arial, sans-serif; color: black;"></p>'+
		'</td>'+
		'<td align="right" style="width: 10%;">'+
		'<img height="50px;" width="60px;" src="getInstituteLogo.json">'+
		'</td>'+
		'</tr>'+
		'</tbody>'+
		'</table>'+
	'</div>'+
	'<table class = "table table-condensed" border = "1">'+
	'<tr>'+
	'<td colspan="5" align="center" style="text-align:center"><strong>Fee Invoice</strong><span style = "float:right" id="tdFeeInvoiceBarcodeNo" style = ""></span></td>'+
	'</tr>'+
	'<tr>'+
	'<td rowspan = "4" width = "15%">'+
		'<div class = "thumbnail studentProfileImage" id = "divStudentProfileImage">'+
		'</div>'+
	'</td>'+
	'<td width = "18%">'+
	'<label>Name of Student : </label>'+
	'</td>'+
	'<td id="tdNameOfStudent" width="25%"></td>'+
	'<td width = "18%">'+
	'<label>Fee Invoice No : </label>'+
	'</td>'+
	'<td id="tdFeeInvoiceNo" width="25%"></td>'+

	'</tr>'+
	'<tr>'+
	'<td>'+
	'<label>Address : </label>'+
	'</td>'+
	'<td id="tdAddress"></td>'+
	'<td>'+
	'<label>Invoice Date  : </label>'+
	'</td>'+
	'<td id="tdReceiptDate"></td>'+
	'</tr>'+
	'<tr>'+
	'<td>Allocated on :</td>'+
	'<td id="tdAdmissionDate"></td>'+
	'<td>Room Type :</td>'+
	'<td id="tdOccupantRoomType"></td>'+
	'</tr>'+
	'<tr>'+
	'<td colspan="5" align="center">'+
	'<table border="1" id = "tblStudentInvoiceHeader" class = "table table-bordered table-condensed">'+
	'<tr>'+
	'<td style="text-align:center"><strong>Name of Course</strong></td>'+
	'<td style="text-align:center"><strong>Institute Name and<br> Address</strong></td>'+
	'<td style="text-align:center"><strong>Hostel Name/Room No.</strong></td>'+
	'<td style="text-align:center"><strong>Year</strong></td>'+
	'</tr>'+
	'</table>'+
	'</td>'+
	'</tr>'+
	'<tr>';
	
	//if(isCurrent=="true")
		boiler+='<td id="tdFeeReceiptFor" colspan="5" style="text-align:center">'+
	'<strong>Invoice details</strong>'+
	'<div style="display:inline-block;float:left" class="btn-group">'+
    '<a href="#" data-toggle="dropdown" class="btn dropdown-toggle"><i class="icon-cog"></i></a>'+
    '<ul class="dropdown-menu">';
		var editBtnFlag = $('#txtStudentSearchBarInvoiceHostel').data('isEditDeleteAuth');
		if(editBtnFlag) {
		    boiler+=' <li><a style="text-align:left" href="javascript:void(0)" class="linkEditFeeInvoice">Edit Invoice</a></li>';
		}else {
		    boiler+=' <li><a style="text-align:left" href="javascript:void(0)" onclick="checkEditDeleteAuthorityForInvoice()"  class="">Edit Invoice</a></li>';
		}
      boiler+= ' <li><a style="text-align:left" href="#" class="linkResetFeeInvoice">Reset to Default</a></li>'+
    '</ul>'+
    '</div>'+
	'</td>'+
	'</tr>';
	
	boiler+='<tr>'+
	'<td colspan="5" align="center">'+
	'<table border="1" id = "tblStudentInvoiceDetails" class = "table table-bordered table-condensed">'+
	'<tr><td>Retrieving invoice details...'+
	'<div class = "preview-large"></div></td></tr>'+
	'</table>'+
	'</td>'+
	'</tr>'+
	'<tr>'+
	'<td colspan="5">'+
	'<div class = "login" style = "float:right;display:none" id = "invoicePrintControl">'+
	'<a href = "javascript:void(0)" class = "print btn btn-inverse btn-mini" rel = "invoice-content" onclick = "printInvoiceAsPdf()">Print</a>'+
	'&nbsp;&nbsp;<span class="invoiceEditControll" style="display:none"> <input type="text" class="span2" id="studentInvoiceCancellationDate2" readonly="readonly">&nbsp;&nbsp;<a  class="print btn btn-inverse btn-mini btn-editStudentInvoice" href="javascript:void(0)">Done Editing</a>&nbsp;&nbsp;'+
	'<a onclick="javascript:void(0)"  class="print btn btn-inverse btn-mini btn-cancelEditStudentInvoice" href="javascript:void(0)">Cancel</a></span>'+
	'</div>'+
	'</td>'+
	'</tr>'+
	'<tr>'+
	'<td colspan="5" align="center"><div id="StudentInstallmentDetails"></div></td></tr>'+
	'</table></div>';

	/** Creating the billing information html */
	boiler += 
		'<br />'+
		'<div id="divReceiptHeader" style = "align:center;width:94%;margin-left: 3%;margin-right: 3%;background-color:#f7f7f7;color:#1d5987;font-weight:bold;font-size:12px;margin-top:5px;text-align:center;height:30px;">Receipt History'+
		'<span style = "float:right;margin-top:5px;margin-right:5px;">';
		if (customerIdentificationObj != undefined && customerIdentificationObj != "BLM_MUNJAL") {
			boiler += '<input id="ReceiptSorting" type= "button" class = "btn btn-inverse btn-mini " value = "Student Bill Sorting" onclick = "studentBillSortingReceiptHostel(' + feeInvoiceId + ');"/>&nbsp;&nbsp;';
		}
		boiler += '<input id="btnMaptoReceipt" type= "button" class = "btn btn-inverse btn-mini  " value = "Map to Receipt" onclick = "mapToReceiptsForHostel()" />&nbsp;&nbsp;';
		
		console.log(isTestEnv);
		//if(isTestEnv)
			boiler+='<input id="btnSettelmentHostel" type= "button" class = "btn btn-inverse btn-mini " value = "Adjustment Entry" onclick = "hostelAdjustmentEntry()"/>&nbsp;&nbsp;';
		
		boiler+='<a href="javascript:void(0)" onclick="checkStudentHostelFeesPayment()" class="btn btn-mini btn-inverse" id="btnGenerateBill"><i class="icon-plus icon-white"></i>&nbsp;Receipt</a></span></div>'+
		//'<div id="divReceiptHeader" style = "align:center;width:94%;margin-left: 3%;margin-right: 3%;background-color:#f7f7f7;color:#1d5987;font-weight:bold;font-size:12px;margin-top:5px;text-align:center;height:30px;">Receipt History<span style = "float:right;margin-top:5px;margin-right:5px;"><input id="btnGenerateBill" type= "button" class = "btn btn-inverse btn-mini  " value = "Generate reciept" onclick = "checkStudentHostelFeesPayment()" /></span></div>'+
		'<div id = "divStudentBillingInformationArea" style = "align:center;margin-left: 3%;margin-right: 3%;">'+
		'<span>Getting billing details...</span><div class = "preview-bar"></div>'+
		'</div>'+
		'<div style = "align:center;margin-left: 3%;margin-right: 3%;">'+
		/*'<input id="btnGenerateBill" type= "button" class = "btn btn-inverse btn-mini  " value = "Generate bill" onclick = "checkStudentHostelFeesPayment()" />'+*/
		'<br />'+
		'<div id = "paymentOptionRadio"></div>'+
		/* '<div class= "preview-large"></div>'+*/
		'<div id = "divStudentBillingAdditionArea" style = "margin-top:5px;"></div>'+
		'</div>';
	callback(boiler);
	/*$('#divShowInvoiceForm').html(boiler);
	$(function(){
		$('.print').click(function() {
			var container = $(this).attr('rel');
			////alert(container);
			$('#'+container).printArea();
			return false;
		});
	});*/
}
function printInvoiceAsPdf(){
	var infraTypeId = gOccupantInvoiceRelatedObject.infraTypeId;
	var occupantId = gOccupantInvoiceRelatedObject.occupantId;
	var category = gOccupantInvoiceRelatedObject.studentCategory;
	var admissionDate =  gOccupantInvoiceRelatedObject.admissionDate;
	var course = gOccupantInvoiceRelatedObject.courseName;
	var gender = gOccupantInvoiceRelatedObject.gender;
	var roomTypeName = gOccupantInvoiceRelatedObject.infraType;
	var roomTypeId = gOccupantInvoiceRelatedObject.infraTypeId;
	var studentInstituteCourseId = gOccupantInvoiceRelatedObject.studentInstituteCourseId;
	var studentId = gOccupantInvoiceRelatedObject.studentId;
	var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
	
	var query = 'infraTypeId='+infraTypeId+'&occupantId='+occupantId+'&category='+category+'&admissionDate='+admissionDate+'&course='+course+'&gender='+gender+
				'&roomTypeName='+roomTypeName+'&roomTypeId='+roomTypeId+'&studentInstituteCourseId='+studentInstituteCourseId+'&studentId='+studentId+'&feeStructureId='+feeStructureId;
	window.location.replace("printInvoiceDetailsByPdf.json?"+query);
}

function checkStudentHostelFeesPayment(){
	
	//alert(gRoomname);
	if(gRoomname != "" && gRoomname != 'Not-Allocated'){
	$('#btnGenerateBill').val('Wait...');
	$('#btnGenerateBill').attr('disabled','disabled');
	var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
	checkForHostelPriorityConfig(feeStructureId,function(jObject){
		if(jObject.responseFlag == 1){
			//var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
			//var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
			getHostelStudentBillingDetails(function(jArray){
				if(jArray.length > 0) {
					//var paidAmount = getStudentPaidAmount();
					//var payableAmount = getStudentPayableAmount();
					//alert(paidAmount + ', '+payableAmount);
					//if(paidAmount >= payableAmount){
					//	jAlert('Payment is clear');
					//} else {
						/*getNthInstallment(jArray.length + 1,feeStructureId,function(jObject){
							if(jObject.responseFlag == undefined){//Configured installment
								showAddHostelBillFormjObject);
								var prevInstallmentNo = jObject.installmentNo;
								var nextInstallmentNo = parseInt(prevInstallmentNo) + 1;
								$('#nextPaymentDateRow').show();
								applyDatePickerOnInstallmentFeesPayment('txtNextPaymentDate',prevInstallmentNo,nextInstallmentNo);
							} else {*/
								//showFeesPaymentOption();
								showHostelDownPaymentForm();
							//}
						//});
					//}
				} else {
					//showFeesPaymentOption();//Downpayment/Installment
					showHostelDownPaymentForm();
				}
				$('#btnGenerateBill').val('Generate receipt');
				$('#btnGenerateBill').removeAttr('disabled');
				//getBankListAjax();
			});
		} else {
			var role = $('#hdnUserRole').val();
			//if(role == 'admissionadmin'){
			jAlert(jObject.responseText+' <a onclick="showFeePrioritySavingDialog()" class="pointer">Click here</a> to prioritize Fees Heads');
			/*} else if(role == 'headadmin'){
				jAlert(jObject.responseText+' <a onclick="ihe_manageFeeItemPriority.htm">Click here</a>');
			} else if(role == 'empadmin'){
				jAlert(jObject.responseText+' <a onclick="fac_manageFeeItemPriority.htm">Click here</a>');
			} else if(role == 'registraruser'){
				jAlert(jObject.responseText+' <a onclick="reg_manageFeeItemPriority.htm">Click here</a>');
			} else if(role == 'financeadmin'){
				jAlert(jObject.responseText+' <a href="fas_manageFeeItemPriority.htm">Click here</a>');
			} */
			$('#btnGenerateBill').val('Generate receipt');
			$('#btnGenerateBill').removeAttr('disabled');
		}
	});
	}else{
		jAlert("Hostel Room has not been alloted, therefore receipt cannot be generated" , "Message");
	}
}

function showHostelDownPaymentForm() {
	showAddHostelBillForm();
	$('#nextPaymentDateRow').show();
	//var payableAmount = getStudentPayableAmount();
	paymentAmount = parseFloat(gStudentRemainingPayableAmount).toFixed(2);
	$('#txtBillPaymentAmount').val(paymentAmount);
}

function showAddHostelBillForm(jObject,fineAmount,callback) {
	var intallmentInfoBoiler = '';
	//alert('fineAmount: '+fineAmount);
	if(fineAmount == undefined){
		fineAmount = 0.00;
	}
	var amount = 0.00;
	var installmentNo = '';
	var installmentDetailId = '';
	var paidAmount = 0.0;
	var payableAmount = 0.0;
	
	var feeStructureId = $('#txtFeeStructureDescription').data('FeeItemId');
	var occupantId = undefined;
	occupantId = gOccupantInvoiceRelatedObject.occupantId;
	getStudentRemainingPayableAmountForHostel(occupantId,feeStructureId,function(jObject){
		if(jObject.fromStudentRecievable != undefined) {
			payableAmount = jObject.fromStudentRecievable;
			setStudentRemainingPayableAmount(payableAmount);
		}
		if(jObject.paidAmount != undefined) {
			paidAmount = jObject.paidAmount;
		}
		
	});
	//alert(jObject);
	if(jObject != undefined) {
		var installmentAmount = '';
		//alert("jObject.amountType: "+jObject.amountType);
		if(jObject.amountType == 'Percent'){
			installmentAmount = jObject.amount + ' %';
			var percent = jObject.amount;
			percent = parseFloat(percent);
			amount = (payableAmount * percent)/100.0;
		} else {
			amount = jObject.amount;
			installmentAmount = '<span class="gems_currency"></span>&nbsp;'+jObject.amount;
		}
		installmentNo = jObject.installmentNo;
		installmentDetailId = jObject.installmentDetailId;
		
		//Creating installment information boiler
		var lastDate = '';
		if(jObject.payWithinDay != undefined)
			lastDate = jObject.payWithinDay +' days';
		else{
			
			lastDate = $.datepicker.formatDate('dd-M-yy',new Date(Date.parse(jObject.payWithinDate)));
		}
		intallmentInfoBoiler =
			'<div class = "alert alert-info">'+
				'<span style = "margin-left:45%;font-size:14px;font-weight:bold;text-decoration:underline">Installment detail</span>'+
				'<table class = "table table-condensed table-bordered">'+
					'<tr><th width = "15%">Installment name</th><td width = "20%">'+jObject.name+'</td><th width = "15%">Amount to paid</th><td width = "20%">'+installmentAmount+'</td><th width = "15%">Last Day/date</th><td width = "20%">'+lastDate+'</td></tr>'+
				'</table>';
		var remainingInstallmentList = jObject.remainInstallmentList;
		var boiler = 
			'<i class = "icon-hand-right"></i>&nbsp;&nbsp;<span style="font-weight:bold;text-decoration:underline;">Remaining installments</span>';
		for(var i = 0 ; i < remainingInstallmentList.length ; i++){
			var installmentAmount = '';
			if(remainingInstallmentList[i].amountType == 'Percent'){
				installmentAmount = remainingInstallmentList[i].amount + ' %';
				//var percent = remainingInstallmentList[i].amount;
				//percent = parseFloat(percent);
				//amount = (payableAmount * percent)/100.0;
			} else {
				//amount = remainingInstallmentList[i].amount;
				installmentAmount = '<span class="gems_currency"></span>&nbsp;'+remainingInstallmentList[i].amount;
			}
			
			var lastDate = '';
			if(remainingInstallmentList[i].payWithinDay != undefined)
				lastDate = remainingInstallmentList[i].payWithinDay +' days';
			else{
				
				lastDate = $.datepicker.formatDate('dd-M-yy',new Date(Date.parse(remainingInstallmentList[i].payWithinDate)));
			}
			boiler += '<p><Strong>'+remainingInstallmentList[i].name+'</strong>:&nbsp;&nbsp;&nbsp;'+installmentAmount+'&nbsp;&nbsp;&nbsp;&nbsp;<Strong>Last date:</strong>:'+lastDate+'</p>'; 
		}
		intallmentInfoBoiler += boiler; 
		intallmentInfoBoiler += '</div>';
	} else {
		amount = payableAmount;
	}
	
	//alert("fineAmount: "+fineAmount);
	amount = amount + fineAmount;
	//amount = parseFloat(amount.toString()).toFixed(2);
	//amount = $.isNumeric(amount) == false?0:amount;
	amount = parseFloat(amount.toString()).toFixed(2);
	
	var date = $.datepicker.formatDate('dd M, yy',new Date());
	//alert(amount);
	//if(paidAmount < (parseFloat(payableAmount.toString()) + parseFloat(paidAmount.toString()))){
		var billingBoiler =
			intallmentInfoBoiler+
 			'<form id = "frmStudentBilling">'+
			'<table class = "table table-bordered" style = "background-color:#f7f7f7">'+

			'<tr>'+
			//'<th colspan = "4">Receipt details<span style="float:right">Date: '+date+'</span></th>'+
			'<th colspan = "4">Receipt details<span style="float:right">Date: <input id="txtHostelPaymentReceiptDate" type="text" readonly="readonly"/></span></th>'+
			'<input type = "hidden" value = "'+installmentNo+'" id = "installmentNo">'+
			'<input type = "hidden" value = "'+installmentDetailId+'" id = "installmentDetailId">'+
			'</tr>'+
			'<tr>'+
			'<th style="text-align:left">Name</th>'+
			'<td ><input type = "text" id = "txtBillStudentName" disabled = "disabled"></td>'+
			'<th style="text-align:left">Manual Bill No (If Any)</th>'+
			'<td ><input type = "text" id = "txtBillNo"></td>'+
			'</tr>'+
			'<tr><th colspan="4" style="text-align:left">Specify Payment Details</th></tr>'+
			'<tr><td colspan="4" style="text-align:center">'+
			'<table class="table table-condensed table-bordered">'+
			'<thead>'+
				'<tr>'+
					'<th>Pay Mode</th>'+
					'<th>Amt.(in Rs.)</th>'+
					'<th>Bank Name</th>'+
					'<th>Branch</th>'+
					'<th>Chq/DD No.</th>'+
					'<th>Chq/DD Dt.</th>'+
					//'<th></th>'+
				'<tr>'+
			'</thead>'+
			'<tbody class="tblBillPaymentDetail">'+
				'<tr class="paymentdetail default">'+
					'<td><select id = "cbBillPayamentMode"  style="width:100px" class="paymentMode" onchange = "renderHostelPaymentDetails(this)" ></select><br><b><span id="configuredBankname"> </span></b></td>'+
					'<td>'+
						'<div class="input-prepend">'+
						'<span class="add-on"><span class="gems_currency"></span></span>'+
						//getAmountPayableToStudent();
						'<input style="width:80px;text-align:right" id="txtBillPaymentAmount" class="amount" placeholder="Amount" type="text" value = "'+gStudentRemainingPayableAmount+'"  onchange="">'+
						'<input id="txtBillPaymentFineAmount" type="hidden" value = "'+fineAmount+'">'+
						'</div>'+
					'</td>'+
					//<input type="text" placeholder="Bank Name" maxlength="50" data-provide="typeahead" id="bankName" name="bankName">
					'<td><input type="text" id="cbBillBankList12" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead"></td>'+
					'<td><input type = "text" id = "branch" class="branch bankdetail" style="width:100px" placeholder="Branch"></td>'+
					'<td><input type = "text" id = "tdChequeNo" class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD No."></td>'+
					'<td><input type = "text" id = "tdChequeDate" class="chequeDDDate bankdetail" style="width:100px" placeholder="Cheque/DD Date"></td>'+
					//'<td><a class="addMoreLink btn btn-mini pointer" onclick="addMorePaymentDetails('+'divStudentBillingAdditionArea'+')"><i class="icon-plus"></i></a></td>'+
					'<th class="otherFeeAccountHead" style="display:none">Account Head</th>'+
				'</tr>'
				+'<tr class="cardpaymentMode" style="display:none"><td>Charges:<br>'
				+'<input type="radio" name="charges" id="male" value="Yes" onclick="checkConfiguration();" class="contactvalidator">Yes'
				+'<input type="radio" name="charges" value="No" id="female" onclick="checkConfiguration();" class="contactvalidator" >No</td>'
				+'<td class="againstCharges">Charges Agaist:<br><select id = "otherFeeAccountHeadcmb11"  style="width:100px" class="otherFeeAccountHead11" onchange = "" ></select></td>'
				+'<td class="typeOfCard">Card type:<br><select id = "otherFeeAccountHeadcmb12"  style="width:100px" class="otherFeeAccountHead11" onchange = "" >'
				+'<option value = "Debit" class="Debit">Debit Card</option><option value = "Credit" class="Credit">Credit Card</option></select></td>'

				+ '<td>Percentage:<br><input type = "text" id = "Percentage" class="cardPercentage" onkeyUp="calculatecardpayment();" style="width:100px" placeholder="Percent"></td>'
				+ '<td colspan="2">Total Amounr:<br><input type = "text" id = "TotalAmoount"   style="width:100px" placeholder="TotalAmoount"></td></tr>'+

			'</tbody>'+
			'</table>'+
			'</td></tr>'+
			/*'<th style="text-align:left">Amount(in  <span class="WebRupee">Rs.</span>)</th>'+
			'<td>'+
				//'<input type = "text" id = "txtBillPaymentAmount"  disabled="disabled">'+
				'<div class="input-prepend">'+
				'<span class="add-on"><span class="WebRupee">Rs.</span></span>'+
				'<input class="span2" id="txtBillPaymentAmount" type="text" value = "'+gStudentRemainingPayableAmount+'" dir = "rtl" onchange="getAmountPayableToStudent();">'+
				'<input id="txtBillPaymentFineAmount" type="hidden" value = "'+fineAmount+'">'+
				'</div>'+
			'</td>'+
			'<th style="text-align:left">Payment Mode</th>'+
			'<td><select id = "cbBillPayamentMode" onchange = "renderHostelPaymentDetails()" class = ""></select></td>'+
			'</tr>'+
			'<tr>'+
			'<td colspan = "4" id = "tdPaymentDetailsEntrySection"></td>'+
			'</tr>'+
			'<tr id = "bankinforow" style="display:none;">'+
			'<th style="text-align:left">Bank Name</th>'+
			'<td ><select id = "cbBillBankList" class = ""></select>'+
			'&nbsp;&nbsp;<input type="button" class="btn btn-inverse btn-mini" value="Add New" style="margin-top:-8px" onclick="$(\'#bankDetailsModal\').modal(\'show\');"></td>'+
			'<th style="text-align:left">Branch Name</th>'+
			'<td ><input id = "cbBillBankBranch" type = "text" class = "" /></td>'+
			'</tr>'+*/
			
			/*'<tr>'+
			'<th style="text-align:left">Outstanding Fee Amount (in  <span class="WebRupee">Rs.</span>)</th>'+
			'<td ><input class="" id="txtOutStandingFeeAmount" type="text"></td>'+
			'<th style="text-align:left">Amount payable to student (in  <span class="WebRupee">Rs.</span>)</th>'+
			'<td ><input class="" id="txtAmountPayableToStudent" type="text" dir = "rtl" disabled="disabled" ></td>'+
			'</tr>'+*/
			'<tr>'+
			'<th style="text-align:left;display:none">Admission date of student</th>'+
			'<td style="display:none"><input class="" id="txtAdmissionDateStudent" type="text"></td>'+
			'<th style="text-align:left">Next payment date</th>'+
			'<td id = "nextPaymentDateRow" ><input id = "txtNextPaymentDate" type = "text"/></td>'+
			'<th style="text-align:left">Desc / Remark</th>'+
			'<td id = "" ><input id = "txtReceiptDetail" type = "text"/></td>'+
			'</tr>'+
			'<tr>'+
			'<td colspan = "4" style="text-align:center">'+
			'<div class = "preview"></div>'+
			'<input type = "button" class = "btn btn-inverse btn-mini  " id = "btnSaveBilling" onclick = "saveBillingInformationToServerForHostel()" value = "Save">&nbsp;&nbsp;'+
			'<input type = "button" class = "btn" id = "btnCancelBilling" onclick = "hideBillingInformationForm()" value =  "Cancel" >'+
			'</td>'+
			'</tr>'+
			'<tr>'+
			'<td colspan = "4">'+
			'<div class="responsebar">'+			
			'</div>'+
			'</div>'+
			'</td>'+
			'</tr>'+
			'</table>'+
			'</form>';
		//jAlert(billingBoiler);
		$('#divStudentBillingAdditionArea').html(billingBoiler);
		
		/*$(function()
		{
			$('#cbBillBankList').change(function(){
				if($('#cbBillBankList').val()=='addNew')
					$('#bankDetailsModal').modal('show');
			});
			
		});*/
		
		$('#txtHostelPaymentReceiptDate').datepicker({
			changeMonth : true,
			changeYear : true,
			showButtonPanel : true,
			dateFormat : 'M dd, yy',
			yearRange : "-10:+10",
		});
		$('#txtHostelPaymentReceiptDate').val($.datepicker.formatDate('M dd,yy', new Date()));
		var customerIdentificationObj = $('#customerHelper').val();
		$('.bankdetail').attr('disabled','disabled');
		$('.amount').numeric();
		setTimeout(function(){
			getBankListAjax('cbBillBankList12');
		},500);
		boiler =
			/*'<option value = "0">Select</option>'+
			'<option value = "Cash" selected="selected">Cash</option>'+
			'<option value = "DemandDraft">Demand Draft</option>'+
			'<option value = "Cheque">Challan/Cheque</option>';*/
			'<option value = "0" selected="selected">Select</option>'+
			'<option value = "Cash">Cash</option>'+
			'<option value = "DemandDraft">Demand Draft</option>'+
			'<option value = "Cheque">Cheque</option>'+
			'<option value = "CardPayment">Card Payment</option>'+
			'<option value = "NEFT1" class="NEFT">NEFT-1</option>'+
			'<option value = "NEFT2" class="NEFT">NEFT-2</option>'+
			'<option value = "NEFT3" class="NEFT">NEFT-3</option>'+
			'<option value = "NEFT4" class="NEFT">NEFT-4</option>'+
			'<option value = "NEFT5" class="NEFT">NEFT-5</option>'+
			'<option value = "NEFT6" class="NEFT">NEFT-6</option>'+
			'<option value = "NEFT7" class="NEFT">NEFT-7</option>'+
			'<option value = "NEFT8" class="NEFT">NEFT-8</option>'+
			'<option value = "RTGS1" class="RTGS">RTGS-1</option>'+
			'<option value = "RTGS2" class="RTGS">RTGS-2</option>'+
			'<option value = "RTGS3" class="RTGS">RTGS-3</option>'+
			'<option value = "RTGS4" class="RTGS">RTGS-4</option>'+
			'<option value = "RTGS5" class="RTGS">RTGS-5</option>'+
			'<option value = "RTGS6" class="RTGS">RTGS-6</option>'+
			'<option value = "RTGS7" class="RTGS">RTGS-7</option>'+
			'<option value = "RTGS8" class="RTGS">RTGS-8</option>'+
			'<option value = "BankChallan" class="RTGS">Bank Challan</option>';
		if(customerIdentificationObj != undefined && (customerIdentificationObj =="MGMU" || customerIdentificationObj =="MATSUNIVERSITY"))
			boiler +='<option value = "Concession">Concession</option>';
		
		if(customerIdentificationObj != undefined && customerIdentificationObj =="CHANAKYA"){
			boiler = '<option value = "0">Select</option>';
			boiler +='<option value = "Cash(W)" >Cash(W)</option>';
			boiler +='<option value = "Cash(M)" >Cash(M)</option>';
			boiler +='<option value = "Cash(S)" >Cash(S)</option>';
			boiler +='<option value = "BankChallan(W)" >Bank Challan(W)</option>';
			boiler +='<option value = "BankChallan(M)" >Bank Challan(M)</option>';
			boiler +='<option value = "BankChallan(S)" >Bank Challan(S)</option>';
			boiler +='<option value = "Concession(CTS)" class="">Concession(CTS)</option>';
			boiler +='<option value = "Concession">Concession</option>'
				+ '<option value = "legacyDeposit">Student Legacy Deposit</option>';
		}
			
		$('.paymentMode').html(boiler);
		
		
		$('.chequeDDDate').datepicker({
			changeMonth: true,
			changeYear: true,
			showButtonPanel: true,
			dateFormat: 'M dd, yy',
			yearRange:"-10:+10",
		});
		
		/**
		 * Apply datepicker on admission date of the student text book
		 */
		$('#txtAdmissionDateStudent').datepicker({
			changeMonth: true,
			changeYear: true,
			showButtonPanel: true,
			dateFormat: 'M dd, yy',
			yearRange:"-10:+10",
		});
		
		$('#txtNextPaymentDate').datepicker({
			changeMonth: true,
			changeYear: true,
			showButtonPanel: true,
			dateFormat: 'M dd, yy',
			yearRange:"-10:+10",
		});
		
		var studentName = undefined;
		try{
			studentName = getStudentName();
		} catch(e){}
		if(studentName == undefined){
			studentName = gOccupantInvoiceRelatedObject.firstName + ' '+gOccupantInvoiceRelatedObject.lastName; 
		}
		$('#txtBillStudentName').val(studentName);
		
		var courseName = gOccupantInvoiceRelatedObject.courseName;
		var academicBatch = gOccupantInvoiceRelatedObject.academicBatch!=undefined?gOccupantInvoiceRelatedObject.academicBatch:"-";
		
		var details = studentName +" "+courseName+" ("+academicBatch+")"; 
		$('#txtReceiptDetail').val(details);
		/* $('#frmStudentBilling').hotKey({ key: 'b', modifier: 'ctrl' }, function (e) {
			 e.preventDefault();
             alert('Hi im called');
         });*/
		
		$(document).unbind();
		$.key('ctrl+m', function(e) {
			e.preventDefault();
			addMorePaymentDetails('divStudentBillingAdditionArea');
		});
		
		$.key('ctrl+d', function(e) {
			e.preventDefault();
			removePaymentOption();
		});
		
		/*$('.tblBillPaymentDetail').delegate('input.amount','change',function(e){
			getAmountPayableToStudent();
		});*/
		
		try{
			callback();
		}catch(e){}
		
	//} else {
	//	jAlert('Payment is clear for this student!');
	//}
}


function addMorePaymentDetails(divId){
	var customerIdentificationObj = $('#customerHelper').val();
	var boiler = 
	'<tr class="paymentdetail">'+
	'<td><select style="width:100px" class="paymentMode" onchange = "renderHostelPaymentDetails(this)" >'+
	//'<td><select style="width:100px" class="paymentMode" onchange = "renderPaymentDetails(this)" >'+
	
	
	/*'<option value = "0">Select</option>'+
	'<option value = "Cash">Cash</option>'+
	'<option value = "DemandDraft">Demand Draft</option>'+
	'<option value = "Cheque">Challan / Cheque</option>'+
	'<option value = "NEFT">NEFT</option>'+
	'<option value = "RTGS">RTGS</option>'+
	'<option value = "BankChallan">Bank Challan</option>'+*/
	
	'<option value = "0">Select</option>'+
	'<option value = "Cash">Cash</option>'+
	'<option value = "DemandDraft">Demand Draft</option>'+
	'<option value = "Cheque">Cheque</option>'+
	'<option value = "CardPayment">Card Payment</option>'+
	'<option value = "NEFT1" class="NEFT">NEFT-1</option>'+
	'<option value = "NEFT2" class="NEFT">NEFT-2</option>'+
	'<option value = "NEFT3" class="NEFT">NEFT-3</option>'+
	'<option value = "NEFT4" class="NEFT">NEFT-4</option>'+
	'<option value = "NEFT5" class="NEFT">NEFT-5</option>'+
	'<option value = "NEFT6" class="NEFT">NEFT-6</option>'+
	'<option value = "NEFT7" class="NEFT">NEFT-7</option>'+
	'<option value = "NEFT8" class="NEFT">NEFT-8</option>'+
	
	
	'<option value = "RTGS1" class="RTGS">RTGS-1</option>'+
	'<option value = "RTGS2" class="RTGS">RTGS-2</option>'+
	'<option value = "RTGS3" class="RTGS">RTGS-3</option>'+
	'<option value = "RTGS4" class="RTGS">RTGS-4</option>'+
	'<option value = "RTGS5" class="RTGS">RTGS-5</option>'+
	'<option value = "RTGS6" class="RTGS">RTGS-6</option>'+
	'<option value = "RTGS7" class="RTGS">RTGS-7</option>'+
	'<option value = "RTGS8" class="RTGS">RTGS-8</option>'+
	
	'<option value = "BankChallan" class="RTGS">Bank Challan</option>';
	if(customerIdentificationObj != undefined && customerIdentificationObj =="MATSUNIVERSITY")
	boiler +='<option value = "Concession">Concession</option>';
	
	boiler = '<option value = "0">Select</option>';
	if(customerIdentificationObj != undefined && customerIdentificationObj =="CHANAKYA"){
		boiler +='<option value = "Cash(W)" class="">Cash(W)</option>';
		boiler +='<option value = "Cash(M)" class="">Cash(M)</option>';
		boiler +='<option value = "Cash(S)" class="">Cash(S)</option>';
		boiler +='<option value = "BankChallan(W)" class="">Bank Challan(W)</option>';
		boiler +='<option value = "BankChallan(M)" class="">Bank Challan(M)</option>';
		boiler +='<option value = "BankChallan(S)" class="">Bank Challan(S)</option>';
		boiler +='<option value = "Concession(CTS)" class="">Concession(CTS)</option>';
		boiler +='<option value = "Concession">Concession</option>'
			+ '<option value = "legacyDeposit">Student Legacy Deposit</option>';
	}
	
	'</select></td>'+
	'<td>'+
		'<div class="input-prepend">'+
		'<span class="add-on"><span class="gems_currency"></span></span>'+
		//getAmountPayableToStudent();
		'<input style="width:80px;text-align:right" class="amount" placeholder="Amount" type="text" onchange="">'+
		'</div>'+
	'</td>'+
	'<td><input type="text" id="" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead"></td>'+
	'<td><input type = "text"  class="branch bankdetail" style="width:100px" placeholder="Branch"></td>'+
	'<td><input type = "text"  class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD No."></td>'+
	'<td><input type = "text"  class="chequeDDDate bankdetail" readonly="true" style="width:100px" placeholder="Cheque/DD Date"></td>'+
	'<td><i class="icon-remove pointer" onclick="removePaymentOption(this)"></i></td>'+
	'</tr>';
	var id = $(divId).attr('id');
	$(divId).find('.tblBillPaymentDetail').append(boiler);
	allocateResourseToBillingForm(id);
}

/**
 * @author Vimal
 * @since 16th June 2012
 * @purpose to allocates resources for the billing form after painting of the form.
 */
function allocateResourseToBillingForm(id){
	$('#'+id).find('.tblBillPaymentDetail tr:last').find('.amount').numeric();
	
	$('#'+id).find('.tblBillPaymentDetail tr:last').find('.bankdetail').attr('disabled','disabled');
	
	//$('.tblBillPaymentDetail tr:last').find('#cbBillBankList').html(boiler);
	
	//var bankNameList = $('#cbBillBankList12').html();
	$('#'+id).find('.tblBillPaymentDetail tr:last').find('.bankName').typeaheadNew({
		  source:substringMatcher(gBankArray),
		  property:"name"
	});
	var cashFlag = true;
	$('#'+id).find('.tblBillPaymentDetail').find('tr').each(function(){
		var paymentMode = $(this).find('.paymentMode').val();
		if(paymentMode == 'Cash'){
			cashFlag = false;
		}
	});
	
	
	boiler =
		'<option value = "0">Select</option>';
		if(cashFlag)
			boiler += '<option value="Cash">Cash</option>';
		boiler +=
		'<option value = "DemandDraft">Demand Draft</option>'+
		'<option value = "Cheque">Cheque</option>';
		$('#'+id).find('.tblBillPaymentDetail tr:last').find('.paymentMode').html(boiler);
	
		$('#'+id).find('.tblBillPaymentDetail tr:last').find('.chequeDDDate').datepicker({
		changeMonth: true,
		changeYear: true,
		showButtonPanel: true,
		dateFormat: 'M dd, yy',
		yearRange:"-10:+10",
	});
		$('#'+id).find('.tblBillPaymentDetail tr:last').find('.bankdetail').attr('disabled','disabled');
		$('#'+id).find('.tblBillPaymentDetail tr:last').find('.paymentMode').val('DemandDraft');
		$('#'+id).find('.tblBillPaymentDetail tr:last').find('.paymentMode').trigger('change');
		$('#'+id).find('.tblBillPaymentDetail tr:last').find('.paymentMode').focus();
	var selTot = 0.00;
	$('#'+id).find('.tblBillPaymentDetail').find('tr').each(function(){
		var amt = parseFloat( $(this).find('.amount').val());
		if(!isNaN(amt) && !$(this).is(':last-child')){
			selTot += amt;
		}
	});
	//parseFloat(gStudentRemainingPayableAmount) - selTot;
	$('#'+id).find('.tblBillPaymentDetail tr:last').find('.amount').val((parseFloat(gStudentRemainingPayableAmount) - selTot).toFixed(2));
	
	$('#'+id).find('.tblBillPaymentDetail tr:last').find('.amount').numeric();
	$('#'+id).find('.tblBillPaymentDetail').find('.amount').unbind();
	$('#'+id).find('.tblBillPaymentDetail').delegate('input.amount','change',function(e){
		//getAmountPayableToStudent();
	});
}

/**
 * @author Vimal
 * @since 16th June 2012
 * @purpose to render the payment details like bank and branch name in the student bill entry form
 * 			It renders if the payment mode is Demand Draft or Cheque
 */
var denominationIdArray = new Array();
var denominationQtyArray = new Array();
function renderPaymentDetails(currentObj){
	
	var flag = true;
	var paymentMode = $(currentObj).parents('tr:first').find('.paymentMode').val();
	//alert(paymentMode);
	var currTrObj = $(currentObj).parents('tr:first');
	
	/*if(flag){
		if(paymentMode == 'DemandDraft' || paymentMode == 'Cheque'){
			$(currTrObj).find('.bankdetail').removeAttr('disabled');
			$(currTrObj).find('.chequeDDDate').attr('readonly',true);
		} else if(paymentMode == 'Cash'){
	
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
		} else {
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
		}
	} else {
		jAlert('Please select only one Cash Mode');
		$(currTrObj).find('.paymentMode').val('0');
	}*/
	
	if(flag){
		if(paymentMode == 'DemandDraft' || paymentMode == 'Cheque'|| paymentMode == 'NEFT' || paymentMode == 'NEFT1' || paymentMode == 'RTGS' 
			|| paymentMode == 'NEFT2' || paymentMode == 'NEFT3' 
			|| paymentMode == 'NEFT5' || paymentMode == 'RTGS5' || paymentMode == 'RTGS6' || paymentMode == 'RTGS7' || paymentMode == 'RTGS8' 
			|| paymentMode == 'NEFT6' || paymentMode == 'NEFT7' || paymentMode == 'NEFT8'  
			|| paymentMode == 'NEFT4' || paymentMode == 'RTGS1' || paymentMode == 'RTGS2' || paymentMode == 'RTGS3' || paymentMode == 'RTGS4'  ){
			$(currTrObj).find('.bankdetail').removeAttr('disabled');
			$(currTrObj).find('.chequeDDDate').attr('readonly',true);
		} else if(paymentMode == 'Cash'){
			/*$('#divShowDenominationModal').css({
				width:'40%','margin-left':function(){
					return -($(this).width()/2);
				},
			}).modal('show');*/
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
		} else {
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
		}
	} else {
		jAlert('Please select only one Cash Mode');
		$(currTrObj).find('.paymentMode').val('0');
	}
	
	var mode = $(currentObj).val().substring(0, $(currentObj).val().length-1);;
	if(mode == 'NEFT' || mode == 'NEFT1' || paymentMode == 'NEFT2' || paymentMode == 'NEFT3'
		|| paymentMode == 'NEFT5' || paymentMode == 'RTGS5' || paymentMode == 'RTGS6' || paymentMode == 'RTGS7' || paymentMode == 'RTGS8' 
			|| paymentMode == 'NEFT6' || paymentMode == 'NEFT7' || paymentMode == 'NEFT8' 
		|| paymentMode == 'NEFT4'  || mode == 'RTGS' || paymentMode == 'RTGS1' || paymentMode == 'RTGS2' || paymentMode == 'RTGS3' || paymentMode == 'RTGS4' || mode == 'BankChalla'){
		$(currentObj).closest('tr').find('.addMoreLink').hide();
		$(currTrObj).find('.bankdetail').removeAttr('disabled');
	}
	else
		$(currentObj).closest('tr').find('.addMoreLink').show();
}
function removePaymentOption(currentObj){
	if(currentObj != undefined){
		var trObj = $(currentObj).parents('tr:first');
		trObj.remove();		
	} else {
		if(!$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail').find('tr:last').hasClass('default')){
			$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail').find('tr:last').remove();			
		}
	}
	
	var selTot = 0.00;
	$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail').find('tr').each(function(){
		var amt = parseFloat( $(this).find('.amount').val());
		if(!isNaN(amt) && !$(this).is(':last-child')){
			selTot += amt;
		}
	});
	$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail tr:last').find('.amount').val((parseFloat(gStudentRemainingPayableAmount) - selTot).toFixed(2));
}



function checkForHostelPriorityConfig(feeStructureId,callback){
	$.ajax({
		url:'checkForPriorityConfigByHostelPolicyId.json',
		data:'feeStructureId='+feeStructureId,
		type:'POST',
		dataType:'json',
		success:function(jObject){
			callback(jObject);
		},error:function(){
			jAlert('Server error: Please refresh the page and try again!!!');
		}
	});
}
/**
 * 
 * @returns {String}
 */
function getStudentInvoiceId(){
	var invoiceId = $('#tdFeeInvoiceNo').data('InvoiceId') != undefined?$('#tdFeeInvoiceNo').data('InvoiceId').toString():0;
	//////////alert("InvoiceId: "+invoiceId);
	return invoiceId.toString();
}

function getHostelStudentBillingDetails(callback){
	var feeInvoiceId = getStudentInvoiceId();
	//getStudentFeeInstallmentDetails(feeInvoiceId);
	$.ajax({
		//url:'getStudentBillingInformation.json?feeInvoiceId='+feeInvoiceId,
		url:'getStudentBillingInformationForHostel.json?feeInvoiceId='+feeInvoiceId,
		dataType:'json',
		beforeSend:function(){
			$('#divStudentBillingInformationArea').find('.preview-bar').addClass('loading-bar');
		},
		complete:function(){		
			$('#divStudentBillingInformationArea').find('.preview-bar').removeClass('loading-bar');
		},
		success:function(jArray){
			callback(jArray);
		},
		error:function(){
			return;
		}
	});

}

function setStudentPayableAmount(amount){
	gStudentTotalPayableAmount = amount;
}

function setStudentInvoiceId(invoiceId){
	//////////alert("in set invoice id"+invoiceId);
	$('#tdFeeInvoiceNo').data('InvoiceId',invoiceId);
}


/**
 * 
 * @param jArray jArray contains billing details of aparticular student in the form the json object per billing
 */
function showStudentHostelBillingDetails(jArray,callBack){

	var postType=$('#postType').val();  
	$('#btnGenerateBill').hide();
	$('#btnMaptoReceipt').hide();
	$('#divReceiptHeader').hide();
	$('#divStudentBillingInformationArea').hide();
		
	/*	$('#btnGenerateBill').show();
		$('#btnMaptoReceipt').show();
		$('#divReceiptHeader').show();
		$('#divStudentBillingInformationArea').show();*/
	
	if(jArray == undefined){
		getHostelStudentBillingDetails(function(jArray){
			showStudentHostelBillingDetails(jArray,callBack);
		});
	} else {
	
		$('#btnGenerateBill').show();
		$('#btnMaptoReceipt').show();
		$('#divReceiptHeader').show();
		$('#divStudentBillingInformationArea').show();

		var length = jArray.length;
		var paidAmount = 0.0;
		if(jArray.length > 0){
			var editPaymentDetailBoiler = '';
			var studentBillingDetails = '<div class="accordion" id="divStudentBillingDetailAccordian" style="width:100%">';
			for(var i = 0; i < length; i++)
			{
				paidAmount += parseFloat(jArray[i].amount);
				var desc = jArray[i].desc;
				studentBillingDetails += 
					'<div class="accordion-group">'+
					'<div class="accordion-heading">'+
					'<a class="accordion-toggle" data-toggle="collapse" data-parent="#divStudentBillingDetailAccordian" href="#studentBilling'+i+'"'+
					'onclick="getBarcode(\''+jArray[i].billNo+'\',\'tdFeeInvoiceBillBarcodeNo'+i+'\');" style = "color:#000000">'+(i+1)+''+
					'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bill No.:&nbsp;&nbsp;'+jArray[i].billNo+'&nbsp;&nbsp;&nbsp;Received on: '+jArray[i].timestamp +
					'&nbsp;&nbsp;&nbsp; Amount(in Rs.): '+jArray[i].amount ;
					
					if(jArray[i].transferdAmount>0.0){
						studentBillingDetails += '&nbsp;&nbsp;&nbsp; Transferred Amount(in Rs.): '
							+ formatAmount(jArray[i].transferdAmount)+'&nbsp;&nbsp;&nbsp;&nbsp;Transferred Receipt No : '+jArray[i].transferedReceiptNo;
					}
					
					studentBillingDetails += '</a></div>'+
					'<div id="studentBilling'+i+'" class="accordion-body collapse" style="background-color: #F7F7F7;">'+
					'<table class = "table table-condensed">'+
					'<tr>'+
					'<th colspan="6" style="text-align:center">RECEIPT';
				//if($('#hdnUserRole').val()=="financeadmin" && jArray[i]["paymentDetails"][0]!=null && jArray[i]["paymentDetails"][0]!=undefined && jArray[i]["paymentDetails"][0]["modeOfPayment"]!='BankChallan')
					if($('#hdnUserRole').val()=="financeadmin" && jArray[i].EditDeleteFlag && jArray[i]["paymentDetails"][0] != undefined) {
					studentBillingDetails += '<span style="float:right">';
					if(jArray[i]["paymentDetails"][0]["modeOfPayment"]!='OnlineMode')
						studentBillingDetails +='<div class="btn btn-inverse btn-mini" onclick="reverseHostelBill('+jArray[i].studentBillId+',\''+jArray[i]["paymentDetails"][0]["financePolicy"]+'\',\''+jArray[i].billNo+ '\',\''+jArray[i].receiptdate+'\')">Reverse</div>';
					
					if(jArray[i]["paymentDetails"][0] != undefined){
						
						studentBillingDetails += '<input type="button" style="display:none" id="btnMapToOtherStructure'+ jArray[i].studentBillId +'"  value="Map To Other Fee Structure" class="btn btn-inverse btn-mini" onclick="mapToOtherFeeStructure(\''
							+ jArray[i].studentBillId + '\',\''
							+ jArray[i].instituteCourseId + '\',\''
							+ jArray[i].manualAccountHeadId+ '\',\''+jArray[i].billNo+ '\',\''+jArray[i].receiptdate+'\',\''+jArray[i]["paymentDetails"][0]["taxDetail"]+ '\',\''+jArray[i].installment+ '\',\''+jArray[i].nextPaymentDate+ '\',\''+jArray[i]["paymentDetails"][0]["studentId"]+ '\')">&nbsp;&nbsp;'+ 
							'<input type="button" id="transferbtn" value="Transfer" class="btn btn-inverse btn-mini" onclick="TransferBill(\''
							+ jArray[i].studentBillId + '\',\''
							+ jArray[i]["paymentDetails"][0]["financePolicy"] + '\',\''
							+ jArray[i]["paymentDetails"][0]["financePolicyspecificatinId"] + '\',\''+jArray[i].billNo+ '\',\''+jArray[i]["paymentDetails"][0]["studentId"]+ '\')">&nbsp;&nbsp;';
							
						studentBillingDetails += '<input type="button" id="transferbtn" value="Transfer To Other Fee Structure" class="btn btn-inverse btn-mini" onclick="TransferBills1(\''
							+ jArray[i].studentBillId + '\',\''
							+ jArray[i]["paymentDetails"][0]["financePolicy"] + '\',\''
							+ jArray[i]["paymentDetails"][0]["financePolicyspecificatinId"] + '\',\''+jArray[i].billNo+ '\',\''+jArray[i]["paymentDetails"][0]["studentId"]+ '\')">&nbsp;&nbsp;';	
					}
					
					if(jArray[i]["paymentDetails"][0]!=null && jArray[i]["paymentDetails"][0]!=undefined && (jArray[i]["paymentDetails"][0]["modeOfPayment"]!='BankChallan' && jArray[i]["paymentDetails"][0]["modeOfPayment"]!='OnlineMode')) 
						studentBillingDetails += '<input type="button" value="Edit" class="btn btn-inverse btn-mini" onclick="editPaymentDetail(\''+jArray[i].studentBillId+'\',\''+jArray[i].manualAccountHeadId+ '\',\''+jArray[i].bankAccountHeadId+ '\',\''+jArray[i].instituteCourseId+ '\',\''+jArray[i]["paymentDetails"][0]["financePolicy"]+'\',\''+jArray[i].billNo+ '\',\''+jArray[i].receiptdate+'\')">&nbsp;&nbsp;';
					//'<input type="button" value="Edit" class="btn btn-inverse btn-mini" onclick="showEditStudentBillDialog(\''+jArray[i].studentBillId+'\')">&nbsp;&nbsp;'+
					//'<input type="button" onclick="deleteOccupantBillEntry(\''+jArray[i].studentBillId+'\')" value="Delete Receipt" class="btn btn-inverse btn-mini">'+
					
					studentBillingDetails += '<a onclick="deleteOccupantBillEntry(\''+jArray[i].studentBillId+'\')" class="" href="javascript:void(0)" title="Delete Receipt"><i class="icon-trash"></i></a>'+
					'</span>';
					}
					studentBillingDetails +='</th>'+
					'</tr>'+
					'<tr>'+
					'<td>'+
					'<label>Bill No:</label>'+
					'</td>'+
					'<td id="tdBillNo"'+i+'>'+jArray[i].billNo+'</td>'+
					'<td>'+
					'<label>Amount(in  <span class="gems_currency"></span>)</label>'+
					'</td>'+
					'<td id="tdAmount'+i+'">'+formatRupee(parseFloat(Math.round(jArray[i].amount).toFixed(2)))+'</td>'+
					'<td>'+
					'<label>Barcode</label>'+
					'</td>'+
					'<td id="tdBarCode'+i+'"><span style = "float:right" id="tdFeeInvoiceBillBarcodeNo'+i+'"></span></td>'+
					'</tr>'+
					'<tr>'+
						'<td colspan="6">';
						if(desc != undefined) {
							studentBillingDetails += '<div style="display:block"><strong>Desc/Remark</strong>&nbsp;&nbsp;&nbsp;'+jArray[i].desc+'</div>';
						}
						studentBillingDetails += '<table class="table table-condensed table-bordered" id="showPaymentDetailTLB'+jArray[i].studentBillId+'" >'+
						'<tr>'+
						'<th colspan="6" style="text-align:left">Cash/DD/Cheque Details</th>'+
						'</tr>'+
						'<tr>'+
						'<td style="text-align:center">Amount</td>'+
						'<td style="text-align:center">Payment Mode</td>'+
						'<td style="text-align:center">Chq/DD/Challan No.</td>'+
						'<td style="text-align:center">Bank Name</td>'+
						'<td style="text-align:center">Branch</td>'+
						'<td style="text-align:center"></td>'+
						'</tr>';
						
						editPaymentDetailBoiler += '<div id="divStudentBillingEditArea'+jArray[i].studentBillId+'" style="display:none;" ><table class="table table-condensed table-bordered" id="editPaymentdetailTLB'+jArray[i].studentBillId+'" >'+
													'<thead>'+
														'<tr>'+
															'<th>Pay Mode</th>'+
															'<th>Amt.(in Rs.)</th>'+
															'<th>Bank Name</th>'+
															'<th>Branch</th>'+
															'<th>Chq/DD No.</th>'+
															'<th>Chq/DD Dt.</th>'+
															'<th></th>'+
														'<tr>'+
													'</thead>'+
										'<tbody class="tblBillPaymentDetail">';
						
					var paymentDetails = jArray[i].paymentDetails;
					if(paymentDetails.length > 0){
					for(var j = 0 ; j < paymentDetails.length ; j++){
						var studentBillChequeDetailId = paymentDetails[j].studentBillChequeDetailId;
						var paymentMode=paymentDetails[j].modeOfPayment;
						var bankName = paymentDetails[j].modeOfPayment.toString().toLowerCase() != "cash" ? paymentDetails[j].bankName:"N/A";
						var bankBranch = paymentDetails[j].modeOfPayment.toString().toLowerCase() != "cash" ? paymentDetails[j].bankBranch:"N/A";
						var amt = parseFloat(paymentDetails[j].amount).toFixed(2);
						var chequeDDNo = paymentDetails[j].chequeDDNo;
						var chequeDDDate = moment( paymentDetails[j].chequeDDDate).format("MMM DD,YYYY"); // paymentDetails[j].chequeDDDate;
						
						if(paymentDetails[j].chequeBouns=="ChequeBounced")
							studentBillingDetails += 	'<tr class="alert alert-error PaymentDetailArr'+jArray[i].studentBillId+'">';
							else
							studentBillingDetails += '<tr class="PaymentDetailArr'+jArray[i].studentBillId+'">';
						studentBillingDetails +='<td id="tdBillPaymentMode'+j+'" style="text-align:right"><strong>'+amt+'</strong></td>'+
							'<td id="tdBillPaymentMode'+j+'" style="text-align:left">'+paymentMode+'</td>'+
							'<td id="tdchequeD'+j+'" style="text-align:center">'+chequeDDNo+' ('+chequeDDDate+')</td>'+
							'<td id="tdBankName'+j+'" style="text-align:center">'+bankName+'</td>'+
							'<td id="tdbankBranch'+j+'" style="text-align:center">'+bankBranch+'</td>'+
							'<td>';
						if(paymentDetails[j].chequeBouns!="ChequeBounced" && paymentMode!="Cash")
							studentBillingDetails += '<a href="javascript:void(0)" class="btn btn-mini" onclick="chequeBouns('+studentBillChequeDetailId+')">Cheque/DD Bounce</a>';
						else if(paymentDetails[j].chequeBouns=="ChequeBounced"){
							studentBillingDetails += '<a href="javascript:void(0)" class="btn btn-mini" onclick="chequeBounceLetterDownload(\''+jArray[i].studentBillId+ '\',\''+chequeDDNo+ '\',\''+chequeDDDate+ '\',\''+bankName+ '\',\''+studentBillChequeDetailId+'\')">Letter of Cheque/DD Bounce</a>';
						}studentBillingDetails +='</td>'+
						'</tr>';
						
						editPaymentDetailBoiler +=	'<tr id="trPaymentDetail'+studentBillChequeDetailId+'" >'+
						'<td><select style="width:100px" class="paymentMode" editAttrBill="'+jArray[i].studentBillId+'"  onchange = "renderHostelPaymentDetails(this)" >'+
							'<option value = "0">Select</option>';
						
						if(paymentDetails[j].modeOfPayment=='Cash')
							editPaymentDetailBoiler +='<option value = "Cash" selected="selected">Cash</option>';
						else
							editPaymentDetailBoiler +='<option value = "Cash">Cash</option>';
						
						if(paymentDetails[j].modeOfPayment =='DemandDraft')
							editPaymentDetailBoiler += '<option value = "DemandDraft" selected="selected" >Demand Draft</option>';
						else
							editPaymentDetailBoiler +='<option value = "DemandDraft">Demand Draft</option>';
						
						if(paymentDetails[j].modeOfPayment=='Cheque')
							editPaymentDetailBoiler += '<option value = "Cheque" selected="selected" >Cheque</option>';
						else
							editPaymentDetailBoiler +='<option value = "Cheque">Cheque</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT1')
							editPaymentDetailBoiler += '<option value = "NEFT1" selected="selected" >NEFT-1</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT1">NEFT-1</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT2')
							editPaymentDetailBoiler += '<option value = "NEFT2" selected="selected" >NEFT-2</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT2">NEFT-2</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT3')
							editPaymentDetailBoiler += '<option value = "NEFT3" selected="selected" >NEFT-3</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT3">NEFT-3</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT4')
							editPaymentDetailBoiler += '<option value = "NEFT4" selected="selected" >NEFT-4</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT4">NEFT-4</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT5')
							editPaymentDetailBoiler += '<option value = "NEFT5" selected="selected" >NEFT-5</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT5">NEFT-5</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT6')
							editPaymentDetailBoiler += '<option value = "NEFT6" selected="selected" >NEFT-6</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT6">NEFT-6</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT7')
							editPaymentDetailBoiler += '<option value = "NEFT7" selected="selected" >NEFT-7</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT7">NEFT-7</option>';
						
						if(paymentDetails[j].modeOfPayment=='NEFT8')
							editPaymentDetailBoiler += '<option value = "NEFT8" selected="selected" >NEFT-8</option>';
						else
							editPaymentDetailBoiler +='<option value = "NEFT8">NEFT-8</option>';
						
						if(paymentDetails[j].modeOfPayment=='RTGS1')
							editPaymentDetailBoiler += '<option value = "RTGS1" selected="selected" >RTGS-1</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS1">RTGS-1</option>';
						
						if(paymentDetails[j].modeOfPayment=='RTGS2')
							editPaymentDetailBoiler += '<option value = "RTGS2" selected="selected" >RTGS-2</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS2">RTGS-2</option>';
						
						if(paymentDetails[j].modeOfPayment=='RTGS3')
							editPaymentDetailBoiler += '<option value = "RTGS3" selected="selected" >RTGS-3</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS3">RTGS-3</option>';
						
						if(paymentDetails[j].modeOfPayment=='RTGS4')
							editPaymentDetailBoiler += '<option value = "RTGS4" selected="selected" >RTGS-4</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS4">RTGS-4</option>';
						
						if(paymentDetails[j].modeOfPayment=='RTGS5')
							editPaymentDetailBoiler += '<option value = "RTGS5" selected="selected" >RTGS-5</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS5">RTGS-5</option>';
						
						if(paymentDetails[j].modeOfPayment=='RTGS6')
							editPaymentDetailBoiler += '<option value = "RTGS6" selected="selected" >RTGS-6</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS6">RTGS-6</option>';
						
						
						if(paymentDetails[j].modeOfPayment=='RTGS7')
							editPaymentDetailBoiler += '<option value = "RTGS7" selected="selected" >RTGS-7</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS7">RTGS-7</option>';
						
						
						if(paymentDetails[j].modeOfPayment=='RTGS8')
							editPaymentDetailBoiler += '<option value = "RTGS8" selected="selected" >RTGS-8</option>';
						else
							editPaymentDetailBoiler +='<option value = "RTGS8">RTGS-8</option>';
						
						if(paymentDetails[j].modeOfPayment=='BankChallan')
							editPaymentDetailBoiler += '<option value = "BankChallan" selected="selected" >Bank Challan</option>';
						else
							editPaymentDetailBoiler +='<option value = "BankChallan">Bank Challan</option>';
						
						
						
						//chanakya 
						var customerIdentificationObj = $('#customerHelper').val();
						if(customerIdentificationObj != undefined && customerIdentificationObj =="CHANAKYA"){
							if (paymentDetails[j].modeOfPayment == 'BankChallan(W)')
								editPaymentDetailBoiler += '<option value = "BankChallan(W)" selected="selected" >BankChallan(W)</option>';
							else
								editPaymentDetailBoiler += '<option value = "BankChallan(W)">BankChallan(W)</option>';

							if (paymentDetails[j].modeOfPayment == 'BankChallan(M)')
								editPaymentDetailBoiler += '<option value = "BankChallan(M)" selected="selected" >BankChallan(M)</option>';
							else
								editPaymentDetailBoiler += '<option value = "BankChallan(M)">BankChallan(M)</option>';

							if (paymentDetails[j].modeOfPayment == 'BankChallan(S)')
								editPaymentDetailBoiler += '<option value = "BankChallan(S)" selected="selected" >BankChallan(S)</option>';
							else
								editPaymentDetailBoiler += '<option value = "BankChallan(S)">BankChallan(S)</option>';


							if (paymentDetails[j].modeOfPayment == 'Cash(M)')
								editPaymentDetailBoiler += '<option value = "Cash(M)" selected="selected" >Cash(M)</option>';
							else
								editPaymentDetailBoiler += '<option value = "Cash(M)">Cash(M)</option>';


							if (paymentDetails[j].modeOfPayment == 'Cash(W)')
								editPaymentDetailBoiler += '<option value = "Cash(W)" selected="selected" >Cash(W)</option>';
							else
								editPaymentDetailBoiler += '<option value = "Cash(W)">Cash(W)</option>';


							if (paymentDetails[j].modeOfPayment == 'Cash(S)')
								editPaymentDetailBoiler += '<option value = "Cash(S)" selected="selected" >Cash(S)</option>';
							else
								editPaymentDetailBoiler += '<option value = "Cash(S)">Cash(S)</option>';
						}
						
						editPaymentDetailBoiler += '</select><br><span id="configuredBankname1'+jArray[i].studentBillId+'"></span></td>'+
						
						'<td>'+
							'<div class="input-prepend">'+
							'<span class="add-on"><span class="gems_currency"></span></span>'+
							'<input style="width:80px;text-align:right" class="amount" placeholder="Amount" type="text"  value = "'+amt+'" >'+
							'</div>'+
						'</td>';
						
						if(paymentDetails[j].modeOfPayment=='Cash')
						{
							editPaymentDetailBoiler +=	
								'<td><input type="text" id="" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead" disabled="disabled" ></td>'+
								'<td><input type = "text"  class="branch bankdetail" style="width:100px" placeholder="Branch" disabled="disabled" ></td>'+
								'<td><input type = "text"  class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD No." disabled="disabled" ></td>'+
								'<td><input type = "text"  class="chequeDDDate bankdetail" readonly="true" style="width:100px" placeholder="Cheque/DD Date" disabled="disabled" ></td>';
						}
						else
						{
							editPaymentDetailBoiler +=	
								'<td><input type="text" id="" class = "bankName bankdetail" style="width:100px" placeholder="Bank Name" maxlength="50" data-provide="typeahead" value="'+bankName+'" ></td>'+
								'<td><input type = "text"  class="branch bankdetail" style="width:100px" placeholder="Branch" value="'+bankBranch+'" ></td>'+
								'<td><input type = "text"  class="chequeDDNo bankdetail" style="width:100px" placeholder="Cheque/DD No." value="'+chequeDDNo+'" ></td>'+
								'<td><input type = "text"  class="chequeDDDate bankdetail" readonly="true" style="width:100px" placeholder="Cheque/DD Date" value="'+chequeDDDate+'"  ></td>';
						}
						
						editPaymentDetailBoiler += '<td><i class="icon-remove pointer" onclick="removePaymentOption(this)"></i></td>'+
												'</tr>';
					}
					}
					studentBillingDetails +=  '</table></td>';
					//'<tr><td colspan="6" align="center"><span style="font-size:12px;font-weight: bold;text-align:center">Student Fees Receivable '+formatRupee(parseFloat((jArray[i].studentFeeRecievable).toFixed(2)))+'</span>'+
					//'</td></tr>'+
					
					var billPayableReceivable = parseFloat(jArray[i].studentFeeRecievable);
					if(billPayableReceivable >= 0){
						studentBillingDetails += '<tr><td colspan="6" align="center"><span style="font-size:12px;font-weight: bold;text-align:center">Student Fees Receivable '+formatRupee(parseFloat(billPayableReceivable.toFixed(2)))+'</span>';
					} else {
						billPayableReceivable = - (billPayableReceivable);
						studentBillingDetails += '<tr><td colspan="6" align="center"><span style="font-size:12px;font-weight: bold;text-align:center">Student Fees Payable '+formatRupee(parseFloat(billPayableReceivable.toFixed(2)))+'</span>';						
					}
					studentBillingDetails += '</td></tr>'+
					'</table>';
					
					
					
					editPaymentDetailBoiler += '</tbody></table>'; 
					
					editPaymentDetailBoiler +=  '<table id="paymentDetailAddRowAndSaveTLB'+jArray[i].studentBillId+'" class="table table-condensed table-bordered" >'+
									'<tr><td  style="text-align:center">'+
										'<input type = "button" class = "btn btn-inverse btn-mini editStudentBillingInfoBtn'+jArray[i].studentBillId+'" onclick = "editBillingInformationForHostel(\''+jArray[i].studentBillId+'\',\''+jArray[i].studentInvoiceId+'\',\''+ jArray[i].billNo+ '\',\''+ jArray[i].receiptdate+ '\')" value = "Edit"  >&nbsp;&nbsp;'+
										//'<input type = "button" class = "btn btn-inverse btn-mini editStudentBillingInfoBtn'+jArray[i].studentBillId+' " onclick = "addMorePaymentDetails('+'divStudentBillingEditArea'+jArray[i].studentBillId+')" value =  "Add New Row" >&nbsp;&nbsp;'+ // addMorePaymentDetailsForEdit('+jArray[i].studentBillId+',this)
										'<input type = "button" class = "btn editStudentBillingInfoBtn'+jArray[i].studentBillId+' " onclick = "hideEditPaymentDetailTLB('+jArray[i].studentBillId+')" value =  "Cancel" >'+
								'</td></tr></table>'+ 
								'<div class="responsebar">'+			
								'</div>'+
									'</div>';
						
						studentBillingDetails += editPaymentDetailBoiler;
					
					if(jArray[i].paymentWiseRecieptGenerateFlag == 'YES') {
						studentBillingDetails += '<div id = "feeBillPrintPreviewBtn" style="">'+
													'<table class="table table-bordered">'+
														'<tr>'+
															//'<td><label style="width:50px"><input type="radio" value="PDF" id="printPDF'+i+'" name="recieptPrint'+i+'" checked="checked">&nbsp;&nbsp;PDF</label></td>'+
															'<td><label style="width:100px"><input type="radio" value="PDF" id="printHC'+i+'" name="recieptPrint'+i+'" onclick="printAdmissionReceiptHostel(\''+jArray[i].studentBillId+'\')">&nbsp;&nbsp;Hard copy</label></td>'+
															'<td><label><input type="checkbox" checked="true" name="OfficeCopy'+i+'" id="chkOfficeCopy'+i+'" value="OfficeCopy">&nbsp;&nbsp;Office copy</label></td>'+
															'<td><label><input type="checkbox" checked="true" name="StudentCopy'+i+'" id="chkStudentCopy'+i+'" value="StudentCopy">&nbsp;&nbsp;Student copy</label></td>';
															
															if($('#customerHelper').val()=="RAMAIAH"){
																studentBillingDetails += '<td><label><input type="checkbox" checked="true" name="BankCopy'+i+'" id="chkBankCopy'+i+'" value="BankCopy">&nbsp;&nbsp;Bank copy</label></td>'+
																'<td><label><input type="checkbox" checked="true" name="GEFCopy'+i+'" id="chkGEFCopy'+i+'" value="GEFCopy">&nbsp;&nbsp;GEF copy</label></td>';
															}
															
															studentBillingDetails += '<td><label><input type="checkbox" checked="true" name="Printlogo" id="chkPrintLogo'+i+'" value="PrintLogo">&nbsp;&nbsp;Print logo</label></td>'+
															//'<td><input type="button" value="Download" class="btn btn-inverse btn-mini" onclick = "printPaymentWiseStudentReceipt(\''+jArray[i].studentBillId+'\',\''+i+'\')"></div></td>'+

															'<td>';
														if(jArray[i].billPathVertical=="")
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''+jArray[i].studentBillId+'\',\''+i+'\',\'Original\')"><i class="icon-download-alt"></i>Orignal (Vertical)</a><br>';
														else
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="window.open(\''+jArray[i].billPathVertical+'\')"><i class="icon-download-alt"></i>Orignal (Vertical)</a><br>';
														if(jArray[i].billPathVertical=="")
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceipt(\''+jArray[i].studentBillId+'\',\''+i+'\',\'Duplicate\')"><i class="icon-download-alt"></i>Duplicate (Vertical)</a> ';
														else
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="window.open(\''+jArray[i].billPathVertical+'\')"><i class="icon-download-alt"></i>Duplicate (Vertical)</a> ';
														studentBillingDetails += '</td>'+
														'<td>';
														if(jArray[i].billPathHorizantal=="")
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceiptHorizontalHostel(\''+jArray[i].studentBillId+'\',\''+i+'\',\'Original\')"><i class="icon-download-alt"></i>Orignal (Horizontal)</a><br>';
														else
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="window.open(\''+jArray[i].billPathHorizantal+'\')"><i class="icon-download-alt"></i>Orignal (Horizontal)</a><br>';
														if(jArray[i].billPathHorizantal=="")	
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="printPaymentWiseStudentReceiptHorizontalHostel(\''+jArray[i].studentBillId+'\',\''+i+'\',\'Duplicate\')"><i class="icon-download-alt"></i>Duplicate (Horizontal)</a> ';
														else
															studentBillingDetails += '<a href="javascript:void(0)" title="Download" onclick="window.open(\''+jArray[i].billPathHorizantal+'\')"><i class="icon-download-alt"></i>Duplicate (Horizontal)</a> ';
														studentBillingDetails += '</td></tr>';
														
													
					}
					
					studentBillingDetails += '</table></div></div></div>';
			}
			//////////alert("Student paid amount "+paidAmount);
			studentBillingDetails+='</div>';
		} else {
			studentBillingDetails = '<div id="divReceiptHeader" style = "align:center;width:94%;margin-left: 3%;margin-right: 3%;background-color:#f7f7f7;color:#1d5987;margin-top:4px;font-weight:bold;font-size:10px;height:20px;">No Receipt history found!</div>'+
			'<div id = "divStudentBillingInformationArea" style = "align:center;width: 94%;margin-left: 3%;margin-right: 3%;"></div>';
		}
		setStudentPaidAmount(paidAmount);
		$('#divStudentBillingInformationArea').html(studentBillingDetails);
		
		$('.chequeDDDate').datepicker({
			changeMonth: true,
			changeYear: true,
			showButtonPanel: true,
			dateFormat: 'M dd, yy',
			yearRange:"-10:+10",
		});
		
		//$('#divStudentBillingDetailAccordian').accordion({collapsible:true, active:-1});
	}
	try{
		callBack(true);
	}catch(e){}  
} 
function TransferBill(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId){
	$('#transferbtn').data('studentBillId',studentBillId);
	$('#cmbFinancePolicy1').val(FinancePolicy);
	$('#cmbFinancialYear1').val(financePolicyspecificatinId);
	configureNewJournalEntry();
	
	
	setTimeout(function(){
	$.ajax({
		url:'getBillDetailsByBillNo.json',
		data:{FinancePolicy:FinancePolicy,studentBillId:studentBillId,BillNo:BillNo},
		dataType:'json',
		type:'GET',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray1){
			
			for(var i=0;i<jArray1.length;i++){
				var amount=jArray1[i]["Amount"];
				var insid=jArray1[i]["AccountHead"];
				$('#tbodyAccounts tr:nth-last-child(2)').find('.txtDrAmount').val(amount);
				$('#tbodyAccounts tr:nth-last-child(2)').find('.txtDrAmount').trigger('keyup');
				$('#tbodyAccounts tr:nth-last-child(2)').find('.cmbAC option').each(function(){
					if($(this).val()== insid){
						$(this).attr('selected',true);
					}
				});
				if(i!=eval(jArray1.length-1)){
					$('#linkAddNewAccount').trigger('click');
				}
				convertComboToSearchable('.cmbAC');
				
			}
			$('#studentTr').show();
			$('#txtRemark').html('transferred bill-'+BillNo);
			$('#cmbStudentList').val(studentId);
			convertComboToSearchable('#cmbStudentList');
			
		},error:function(){

		}
	});
	}, 2000);
}
function editPaymentDetail(studentBillId,manualAccountHeadId,bankAccountHeadId,instituteCourseId,financePolicy,billNo,receiptdate)
{
	
	$.ajax({
			url:'lockingPaymentverify.json',
			dataType:'text',
			data:{transactionUniqueRef:billNo,financepolicy:financePolicy,transactionDate:receiptdate},
			type:'GET',
			async:false,
			beforeSend:function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
				
			},
			success:function(msg){
				if(msg=="true"){
						$('#divStudentBillingEditArea'+studentBillId).show();
						$('#showPaymentDetailTLB'+studentBillId).hide();
						$('#btnGenerateBill').hide();
						$('#divStudentBillingAdditionArea').html('');
						$('.paymentMode:visible').data('manualAccountHeadId',manualAccountHeadId);
						
						$('.hasDatepicker').datepicker({
							changeMonth : true,
							changeYear : true,
							showButtonPanel : true,
							dateFormat : 'M dd, yy',
							yearRange : "-10:+10",
						});
						
						getAccountHeadDetailsForHostel(instituteCourseId,$('.paymentMode:visible').val());
						if(manualAccountHeadId!=0 && manualAccountHeadId != undefined){
							setTimeout(function(){
								//$('#cbBillPayamentMode').trigger('change');
								$('.paymentMode:visible').trigger('change');
								$('#otherFeeAccountHeadpmt').val(manualAccountHeadId);
								console.log('manualAccountHeadId',manualAccountHeadId)
							},200);
						}
						
				}else if(msg=="false"){
					jAlert("something went wrong");
					return false;
				}else{
					jAlert(msg);
					return false;
				}
				
			}
		});
	
}

function hideEditPaymentDetailTLB(studentBillId)
{
	$('#divStudentBillingEditArea'+studentBillId).hide();
	$('#showPaymentDetailTLB'+studentBillId).show();
	$('#btnGenerateBill').show();
	$('#divStudentBillingAdditionArea').html('');
}

function hideBillingInformationForm(){
	$('#divStudentBillingAdditionArea').html('');
}


function setStudentPaidAmount(paidAmount){
	gStudentPaidAmount = paidAmount;
}
function getStudentPaidAmount(){
	return gStudentPaidAmount;
}

function showFeePrioritySavingDialog(){
	$.alerts._hide();
	var hostelPolicyId = '0';
	hostelPolicyId = gOccupantInvoiceRelatedObject.hostelPolicyId;
	$('#divFeeItemHeadPriority').modal('show');
	//$("script[src='scripts/fee/feeItemPriority.js']").remove();
	//$.getScript( "scripts/fee/feeItemPriority.js" );
	setTimeout(function(){
		$('.btn_submitPriority').unbind();
		$('.btn_submitPriority').bind('click',function(){
			submitFeeHeadTallyAlias(hostelPolicyId.toString());
			$('#divFeeItemHeadPriority').modal('hide');
		});
		configureFeeHeadPriorityList(hostelPolicyId,function(){
			$('#submitFeeHeadAlias').remove();
		});
	},1000);
	
}






/**
 * @param occupantId
 * @param feeStructureId
 * @param callback
 */

function getStudentRemainingPayableAmountForHostel(occupantId,feeStructureId,callback){
	$.ajax({
		url:'getStudentRemainingPayableAmountForHostel.json',
		data:'occupantId='+occupantId+'&feeStructureId='+feeStructureId,
		dataType:'json',
		async:false,
		type:'POST',
		success:function(jObject){
			callback(jObject);
		}
	});
}

var gBankArray = new Array;
function getBankListAjax(cmbId)
{
	//alert('hi');
	$.ajax({
		url:'getBankListAjax.json',
		dataType:'json',
		type:'GET',
		async:false,
		success:function(jArray)
		{
			var len = jArray.length;
			gBankArray = new Array;
			var boiler = '<option value = "0">Select</option>';
			for(var i = 0; i < len; i++){
				boiler += '<option value = "'+jArray[i]["bankName"]+'">'+jArray[i]["bankName"]+'</option>';
				var obj= {
						name:jArray[i]["bankName"],
				};
				gBankArray.push(obj);
			}

			//boiler +='<option value ="addNew">-Add New-</option>';
			if(cmbId == undefined)
				$('.bankName').html(boiler);
			else
				$('#'+cmbId).html(boiler);
			//$('.bankName').html(boiler);
			
			$('#'+cmbId).typeaheadNew({
				 source:substringMatcher(gBankArray),
				 property:"name"
			});
		},
		error:function(){
		}
	});
}

function setStudentRemainingPayableAmount(amount){
	gStudentRemainingPayableAmount = amount;
}


function renderHostelPaymentDetails(currentObj){
	
	

var flag = true;
// var paymentMode =$('.paymentMode:visible').val();// $(currentObj).parents('tr:first').find('.paymentMode:visible').val();
var paymentMode = $(currentObj).parents('tr:first').find('.paymentMode').val();
console.log("paymentMode5555",paymentMode);
var currTrObj = $(currentObj).parents('tr:first');

if (flag) {
	if (paymentMode == 'DemandDraft' || paymentMode == 'Cheque'
			|| paymentMode == 'NEFT' || paymentMode == 'NEFT1'
			|| paymentMode == 'RTGS' || paymentMode == 'NEFT2'
			|| paymentMode == 'NEFT3' || paymentMode == 'NEFT4'
			|| paymentMode == 'RTGS1' || paymentMode == 'RTGS2'
			|| paymentMode == 'RTGS3' || paymentMode == 'RTGS4'
				|| paymentMode == 'NEFT5' || paymentMode == 'NEFT6'
					|| paymentMode == 'RTGS5' || paymentMode == 'NEFT7'
					|| paymentMode == 'NEFT8' 
					|| paymentMode == 'RTGS6' || paymentMode == 'RTGS7'
					|| paymentMode == 'RTGS8' || paymentMode == 'TRANSFER' || paymentMode=='BankChallan' || paymentMode=='BankChallan(M)' 
						|| paymentMode=='BankChallan(S)' || paymentMode=='BankChallan(W)'){
		$(currTrObj).find('.bankdetail').removeAttr('disabled');
		$('.copm').show();
		$(currTrObj).find('.chequeDDDate').attr('readonly', true);
		$('.cardpaymentMode').hide();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');

		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	} else if (paymentMode == 'Cash' || paymentMode == 'Cash(W)' || paymentMode == 'Cash(M)' || paymentMode == 'Cash(S)'  || paymentMode == 'Cash(D)') {
		$('#configuredBankname').html('');
		$('.copm').hide();
		$('.cardpaymentMode').hide();
		$(currTrObj).find('.bankdetail').attr('disabled', 'disabled');
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	}else if(paymentMode == 'CardPayment') {
		$('.cardpaymentMode').show();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		$(currTrObj).find('.bankdetail').removeAttr('disabled');
		$(currTrObj).find('.chequeDDDate').attr('readonly',true);
		getAccountHeadDetails(institutecourseId,paymentMode);
		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	}else {
		$('.copm').hide();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		$(currTrObj).find('.bankdetail').attr('disabled', 'disabled');
		$('.cardpaymentMode').hide();
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');

		getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
	}
} else {
	jAlert('Please select only one Cash Mode');
	$(currTrObj).find('.paymentMode').val('0');
}

if(paymentMode == 'Concession'){
	$('.conupload').show();
	var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
	getAccountHeadDetails(institutecourseId,paymentMode);
}
else{
	$('.conupload').hide();
}
if(paymentMode == 'Other Course Fee'){
	$('.otherFeeAccountHead').show();
	var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
	getAccountHeadDetails(institutecourseId,paymentMode);
}
else{
	$('.otherFeeAccountHead').hide();
}

//var mode = $(currentObj).val().substring(0, $(currentObj).val().length - 1);
var mode = $(currentObj).parents('tr:first').find('.paymentMode').val();
if (mode == 'NEFT' || mode == 'NEFT1' || paymentMode == 'NEFT2'
		|| paymentMode == 'NEFT3' || paymentMode == 'NEFT4' || mode == 'RTGS'
		|| paymentMode == 'RTGS1' || paymentMode == 'RTGS2'
		|| paymentMode == 'RTGS3' || paymentMode == 'RTGS4'
			|| mode == 'NEFT5' || paymentMode == 'NEFT6'
				|| paymentMode == 'NEFT7' || paymentMode == 'NEFT8'
				|| paymentMode == 'RTGS5' || paymentMode == 'RTGS6'
				|| paymentMode == 'RTGS7' || paymentMode == 'RTGS8' || paymentMode == 'TRANSFER'	
		|| mode == 'BankChallan' || paymentMode=='BankChallan(M)' 
			|| paymentMode=='BankChallan(S)' || paymentMode=='BankChallan(W)') {
	$(currentObj).closest('tr').find('.addMoreLink').hide();
	
	$(currTrObj).find('.bankdetail').removeAttr('disabled');
} else
	$(currentObj).closest('tr').find('.addMoreLink').show();

	
	
	/*
	
	var flag = true;
	var paymentMode = $(currentObj).parents('tr:first').find('.paymentMode').val();
	var currTrObj = $(currentObj).parents('tr:first');
	if(flag){
		if(paymentMode == 'DemandDraft' || paymentMode == 'Cheque'){
			$(currTrObj).find('.bankdetail').removeAttr('disabled');
		} else if(paymentMode == 'Cash'){
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
		} else {
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
		}
	} else {
		jAlert('Please select only one Cash Mode');
		$(currTrObj).find('.paymentMode').val('0');
	}
	
	if(flag){
		var institutecourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		if(paymentMode == 'DemandDraft' || paymentMode == 'Cheque'|| paymentMode == 'NEFT' || paymentMode == 'NEFT1'|| paymentMode == 'NEFT2' 
			|| paymentMode == 'NEFT3'|| paymentMode == 'NEFT4'|| paymentMode == 'NEFT5' || paymentMode == 'NEFT6' || paymentMode == 'NEFT7' 
			|| paymentMode == 'NEFT8'|| paymentMode == 'RTGS' || paymentMode == 'RTGS1' || paymentMode == 'RTGS2' || paymentMode == 'RTGS3'
			|| paymentMode == 'RTGS4'|| paymentMode == 'RTGS5' || paymentMode == 'RTGS6' || paymentMode == 'RTGS7' || paymentMode == 'RTGS8'
			|| paymentMode=='BankChallan(S)'|| paymentMode=='BankChallan(M)' ||  paymentMode=='BankChallan(W)'){
			$(currTrObj).find('.bankdetail').removeAttr('disabled');
			$(currTrObj).find('.chequeDDDate').attr('readonly',true);
			$('.cardpaymentMode').hide();
			getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
		} else if(paymentMode == 'Cash'){
			$('.cardpaymentMode').hide();
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
			$('#configuredBankname').html('');
		}else if(paymentMode == 'CardPayment') {
			$(currTrObj).find('.bankdetail').removeAttr('disabled');
			$(currTrObj).find('.chequeDDDate').attr('readonly',true);
			$('.cardpaymentMode').show();
			getAccountHeadDetails(institutecourseId,paymentMode);
			getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
		} else {
			$('.cardpaymentMode').hide();
			$(currTrObj).find('.bankdetail').attr('disabled','disabled');
			getAccountHeadbyPaymentMode(institutecourseId,paymentMode);
		}
	} else {
		jAlert('Please select only one Cash Mode');
		$(currTrObj).find('.paymentMode').val('0');
	}
	
	var mode = $(currentObj).val().substring(0, $(currentObj).val().length-1);;
	if(mode == 'NEFT' || mode == 'NEFT1' || paymentMode == 'NEFT2' || paymentMode == 'NEFT3'
		|| paymentMode == 'NEFT5' || paymentMode == 'RTGS5' || paymentMode == 'RTGS6' || paymentMode == 'RTGS7' || paymentMode == 'RTGS8' 
			|| paymentMode == 'NEFT6' || paymentMode == 'NEFT7' || paymentMode == 'NEFT8'  
		|| paymentMode == 'NEFT4'  || mode == 'RTGS' || paymentMode == 'RTGS1' || paymentMode == 'RTGS2' || paymentMode == 'RTGS3' || paymentMode == 'RTGS4' || mode == 'BankChalla'){
		$(currentObj).closest('tr').find('.addMoreLink').hide();
		$(currTrObj).find('.bankdetail').removeAttr('disabled');
	}
	else
		$(currentObj).closest('tr').find('.addMoreLink').show();*/
	
}


function saveBillingInformationToServerForHostel(feeInvoiceId,callback){
	//if(validateStudentBillingForm('divStudentBillingAdditionArea')) {
		var hostelPolicyId = '0';
		var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
		var installmentNo = $('#installmentNo').val();
		var installmentDetailId = $('#installmentDetailId').val();
		var paymentAmount = $('#txtBillPaymentAmount').val();
		var paymentToBankIdAlias = $('#bankAliesCmb').val();
		var fineAmount = $('#txtBillPaymentFineAmount').val().trim();
		var receiptDetail = $('#txtReceiptDetail').val();                                
		var billNo = $('#txtBillNo').val().trim();
		var bankName = '';
		var bankBranch = '';
		var chequeDDNo = '';
		var chequeDDDate = '';
		var paymentMode = '';
		var nextPaymentDate = $('#nextPaymentDate').val();
		var receiptDate = $('#txtHostelPaymentReceiptDate').val();
		var instituteCourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		var array = new Array();
		var flag=true;
		var Taxdetails='';
		var temp='';
		var accountHeadId=$('#otherFeeAccountHeadpmt1').val();
		hostelPolicyId = gOccupantInvoiceRelatedObject.hostelPolicyId;
		if(feeInvoiceId == undefined){
			feeInvoiceId = getStudentInvoiceId();			
		}
		if(fineAmount == '' || fineAmount == '0.00' || isNaN(fineAmount)){
			fineAmount = '';
		}
		nextPaymentDate = $.datepicker.formatDate('yy-mm-dd',Date.parse(nextPaymentDate));
		var paymentOfMode=$('#cbBillPayamentMode').val();
		$('#divStudentBillingAdditionArea').find('.tblBillPaymentDetail').find('tr').each(function(){
			if(paymentOfMode=='' || paymentOfMode==undefined || paymentOfMode=='undefined')
			              paymentOfMode=$(this).find('.paymentMode').val();
			var paymentMode = $(this).find('.paymentMode').val();
			var amount = $(this).find('.amount').val();
			var bankName = $(this).find('.bankName').val();
			var chequeDDNo = $(this).find('.chequeDDNo').val();
			var chequeDDDate = $(this).find('.chequeDDDate').val();
			var branch = $(this).find('.branch').val();
			if(paymentMode != '0'){
				if(paymentMode == 'NEFT' || paymentMode == 'NEFT1' || paymentMode == 'RTGS' || paymentMode == 'NEFT2'
					|| paymentMode == 'NEFT3' || paymentMode == 'NEFT4'|| paymentMode == 'RTGS1' || paymentMode == 'RTGS2'
						|| paymentMode == 'RTGS3' || paymentMode == 'RTGS4'|| paymentMode == 'NEFT5' || paymentMode == 'NEFT6'
							|| paymentMode == 'RTGS5' || paymentMode == 'NEFT7'|| paymentMode == 'NEFT8' || paymentMode=='BankChallan(M)'
								|| paymentMode == 'RTGS6' || paymentMode == 'RTGS7'|| paymentMode == 'RTGS8' || paymentMode == 'BankChallan'  
									|| paymentMode == 'DemandDraft' || paymentMode == 'Cheque'|| paymentMode=='BankChallan(S)' || paymentMode=='BankChallan(W)'|| paymentMode=='CardPayment' ){
					if(bankName==''){
						jAlert("Please enter bank name");
						flag=false;
						return false;
					}
					if(branch==''){
						jAlert("Please enter branch name");
						flag=false;
						return false;
					}
					if(chequeDDNo==''){
						jAlert("Please enter Chq/DD/NEFT/RTGS No ");
						flag=false;
						return false;
					}
					if(chequeDDDate==''){
						jAlert("Please enter Chq/DD/NEFT/RTGS Date");
						flag=false;
						return false;
					}
				} 

				if(paymentMode=='CardPayment'){
					var value = $('input[name = "charges"]:checked').val();
					if(value=='' || value==undefined || value=='0' || value==0){
						jAlert('Please Select Charges Mode');
						flag=false;
						return false;
					}
					if(value=='Yes'){
						var accno=$('#otherFeeAccountHeadcmb11 option:selected').val();
						if(accno=='' || accno==undefined || accno=='0' || accno==0){
							jAlert('Please Select Charges Agaist');
							flag=false;
							return false;
						}
						var cardtype=$('#otherFeeAccountHeadcmb12 option:selected').val();
						if(cardtype=='' || cardtype==undefined || cardtype=='0' || cardtype==0){
							jAlert('Please Select Card Type');
							flag=false;
							return false;
						}
						var taxpercentage=$('#Percentage').val();
						if(taxpercentage=='' || taxpercentage==undefined || taxpercentage=='0' || taxpercentage==0){
							jAlert('Please enter Percentage');
							flag=false;
							return false;
						}
						var taxamount=$('#TotalAmoount').val();
						if(taxamount=='' || taxamount==undefined || taxamount=='0' || taxamount==0){
							jAlert('Please Select Total MAount');
							flag=false;
							return false;
						}
						Taxdetails+=accno+'~'+cardtype+'~'+taxpercentage+'~'+taxamount;
					}
				}

				if(paymentMode == 'Cash'){
					temp = '{' 
						+ '\"paymentMode\":\"'+paymentMode+'\",'
						+ '\"amount\":\"'+amount+'\",'
						+ '\"bankName\":\"\",'
						+ '\"chequeDDNo\":\"\",'
						+ '\"chequeDDDate\":\"\",'
						+ '\"branch\":\"\"' 
						+ '}';
				} else {
					temp = '{' 
						+ '\"paymentMode\":\"'+paymentMode+'\",'
						+ '\"amount\":\"'+amount+'\",'
						+ '\"bankName\":\"'+bankName+'\",'
						+ '\"chequeDDNo\":\"'+chequeDDNo+'\",'
						+ '\"chequeDDDate\":\"'+chequeDDDate+'\",'
						+ '\"branch\":\"'+branch+'\"' 
						+ '}';
				}
				if(paymentMode!=undefined && amount!=undefined){
					array.push(temp);
				}
			}else{
				jAlert("please select Pay Mode");
				flag=false;
				return false;
			}
		});
		if(flag){
		array = '['+array.join(',')+']';
		
		if(paymentOfMode=='' || paymentOfMode==undefined || paymentOfMode=='undefined'){
				jAlert("please select Pay Mode");
				return false;
		}
		
			$.ajax({
				url:'saveBillingInformationToServerForHostel.json?denominationIdArray=&denominationQtyArray=',
				data:{
					feeInvoiceId:feeInvoiceId,feeItemId:feeItemId,paymentAmount:paymentAmount,bankName:bankName,
					paymentMode:paymentMode,chequeDDNo:chequeDDNo,chequeDDDate:chequeDDDate,bankBranch:bankBranch,installmentNo:installmentNo,
					nextPaymentDate:nextPaymentDate,fineAmount:fineAmount,installmentDetailId:installmentDetailId,
					paymentToBankIdAlias:paymentToBankIdAlias,hostelPolicyId:hostelPolicyId,outStandingFeeAmount:'0',
					dateOfAdmission:'',billNo:billNo,array:array,receiptDetail:receiptDetail,receiptDate : receiptDate,
					instituteCourseDetail:instituteCourseId,Taxdetails:Taxdetails,accountHeadId:accountHeadId
				},
				dataType:'json',
				type:'POST',
				beforeSend: function() {
					startLoading();
					$('#frmStudentBilling').find('#btnSaveBilling').attr('disabled','disabled');
				},
				complete: function() {
					stopLoading();
					$('#frmStudentBilling').find('#btnSaveBilling').removeAttr('disabled','disabled');
				},
				success:function(responseJArray){
					var flag = responseJArray.responseFlag;
					if(flag == '1'){
						setHostelInvoiceGenerationStatus('GENERATED',responseJArray.studentInvoiceObject,responseJArray.occupantId);
						hideBillingInformationForm();
						showSuccessMessage("Bill successfully generated: Bill No. is: "+responseJArray.billNo,10000); 
						getHostelStudentBillingDetails(function(billJArray){ 
							showStudentHostelBillingDetails(billJArray); 
							try{
								callback(responseJArray);							
							} catch(e){

							}
						
						});
					} else {
						showErrorMessage("Bill saving failed! "+responseJArray.responseText,20000);
						try{
							callback();							
						} catch(e){

						}
					}
				},
				error:function(){

				}
			});
		}
	//});
}

function editBillingInformationForHostel(studentBillId,studentInvoiceId,billNo,receiptDate){
	if(validateStudentBillingForm('divStudentBillingEditArea'+studentBillId)) {

		var array = new Array();
		$('#divStudentBillingEditArea'+studentBillId).find('.tblBillPaymentDetail').find('tr').each(function(){
			var paymentMode = $(this).find('.paymentMode').val();
			var amount = $(this).find('.amount').val();
			var bankName = $(this).find('.bankName').val();
			var chequeDDNo = $(this).find('.chequeDDNo').val();
			var chequeDDDate = $(this).find('.chequeDDDate').val();
			var branch = $(this).find('.branch').val();
			if(paymentMode != '0'){
				var temp = '';
				if(paymentMode == 'Cash'){
					temp = '{' 
					     + '\"paymentMode\":\"'+paymentMode+'\",'
					     + '\"amount\":\"'+amount+'\",'
					     + '\"bankName\":\"\",'
					     + '\"chequeDDNo\":\"\",'
					     + '\"chequeDDDate\":\"\",'
					     + '\"branch\":\"\"' 
					     + '}';
				} else {
					temp = '{' 
					     + '\"paymentMode\":\"'+paymentMode+'\",'
					     + '\"amount\":\"'+amount+'\",'
					     + '\"bankName\":\"'+bankName+'\",'
					     + '\"chequeDDNo\":\"'+chequeDDNo+'\",'
					     + '\"chequeDDDate\":\"'+chequeDDDate+'\",'
					     + '\"branch\":\"'+branch+'\"' 
					     + '}';
				}
				array.push(temp);
			}
		});
		array = '['+array.join(',')+']';
		
		var hostelPolicyId="0";
		var accountHeadId=$('#otherFeeAccountHeadpmt').val();
		hostelPolicyId = gOccupantInvoiceRelatedObject.hostelPolicyId;
		if(studentInvoiceId == undefined){
			studentInvoiceId = getStudentInvoiceId();			
		}
		var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
		var instituteCourseId=$('#txtFeeStructureDescription').data('instituteCourseId');
		
		if(accountHeadId=='0' || accountHeadId==undefined || accountHeadId=='' || accountHeadId=='undefined'){
			jAlert("Please select Account Head ...!");
				return;
		}
		var nextPaymentDate = $('#nextPaymentDate').val();
		var manualBillNo = ""
		if(billNo!='')
			 manualBillNo = billNo.split('|')[1];
		$.ajax({
			url:'saveBillingInformationToServerForHostel.json', // url:'editBillingInformationForHostel.json',
			data:{
				studentBillId:studentBillId,
				feeInvoiceId:studentInvoiceId,
				billNoOld:billNo,
				billNo:manualBillNo,
				receiptDate:receiptDate,
				accountHeadId:accountHeadId,
				array:array,
				feeItemId:feeItemId,
				hostelPolicyId:hostelPolicyId,
				instituteCourseDetail:instituteCourseId,
				nextPaymentDate:nextPaymentDate
				 },
			dataType:'json',
			type:'POST',
			beforeSend: function() {
				startLoading();
				$('.editStudentBillingInfoBtn'+studentBillId).attr('disabled','disabled');
			},
			complete: function() {
				stopLoading();
				$('.editStudentBillingInfoBtn'+studentBillId).removeAttr('disabled','disabled');
			},
			success:function(responseJArray){
				var flag = responseJArray.responseFlag;
				if(flag.toString() == '1'){
					showSuccessMessage("Bill successfully generated: Bill No. is: "+responseJArray.billNo,10000);
					getHostelStudentBillingDetails(function(billJArray){
						showStudentHostelBillingDetails(billJArray);
					});
				} else {
					showErrorMessage("Bill saving failed! "+responseJArray.responseText,20000);
					try{
						callback();							
					} catch(e){
						
					}
				}
			},
			error:function(){

			}
		});
	}
}


function validateStudentBillingForm(divId){
	var flag = true;
	$('#'+divId).find('.tblBillPaymentDetail').find('tr').each(function(){
		var temp = $(this).find('.paymentMode').val();
		var paymentModeOptionClass = $(this).find('.paymentMode option:selected').attr('class');
		if(temp == 'Cheque' || temp == 'DemandDraft' || paymentModeOptionClass == 'NEFT' || paymentModeOptionClass == 'RTGS'){
			var bankName = $(this).find('.bankName').val();
			if(bankName == ''){
				jAlert("Please select the bank information!");
				flag = false;
				return;
			}
			var chequeDDNo = $(this).find('.chequeDDNo').val();
			if(chequeDDNo == ''){
				jAlert("Please enter the Cheque/DD No.!");
				flag = false;
				return;
			}
			var amount = $(this).find('.amount').val();
			if(amount == '' || isNaN(amount)){
				jAlert("Please enter proper amount!");
				flag = false;
				return;
			}
			var ddDate = $(this).find('.chequeDDDate').val();
			if(ddDate == ''){
				jAlert("Please select cheque/DD date!");
				flag = false;
				return;
			}
		}
	});
	return flag;
}

function getStudentPayableAmount(){
	return gStudentTotalPayableAmount+'';
}

function specifyRoomTypeByOccupantId(occupantId,infraTypeId,callback){
	$.ajax({
		url:'specifyRoomTypeByOccupantId.json',
		dataType:'json',
		type:'POST',
		data:'occupantId='+occupantId+'&infraTypeId='+infraTypeId,
		success:function(jObject){
			callback(jObject);
		}
	});
}

function getHostelRoomTypeByHostelPolicyId(hostelPolicyId,callback){
	$.ajax({
		url:'getHostelRoomTypeByHostelPolicyId.json',
		data:'hostelPolicyId='+hostelPolicyId,
		dataType:'json',
		success:function(jArray) {
			callback(jArray);
		}
	});
}

function showSpecifyAdmissionTypeDialogByOccupantId(occupantId){
	//var admissionTypeName = $('#cmbStudentAdmissionTypeList option:selected').text();
	$('.studentAdmissionTypeChangeLink').find('.preview-bar').addClass('loading-bar');
	var hostelPolicyId = gOccupantInvoiceRelatedObject.hostelPolicyId;
	getHostelRoomTypeByHostelPolicyId(hostelPolicyId,function(jArray){
		$('.studentAdmissionTypeChangeLink').find('.preview-bar').removeClass('loading-bar');
		/** Binding change event on admission type combox box to change the category on change of the admission quota */
		var boiler = '<option value="0">--- Select ---</option>';
		for(var i = 0 ; i < jArray.length ; i++){
			boiler += '<option value="'+jArray[i].infrastructureRoomTypeId+'">'+jArray[i].infrastructureRoomTypeName+'</option>';
		}
		$('#cmbOccupantRoomTypeList').html(boiler);
		$('#divOccupantRoomTypeSpecifyDialog').modal('show');
		//$('#btnSpecifyStudentAdmissionType').unbind();
		$('#btnSpecifyOccupantRoomType').bind('click',function(){
			var infraTypeId = $('#cmbOccupantRoomTypeList').val();
			if(infraTypeId != '0'){
				jConfirm('Are you sure?','Confirmation',function(flag){
					if(flag){
						specifyRoomTypeByOccupantId(occupantId,infraTypeId,function(jObject){
							updateOccupantRoomType(jObject.infraTypeId,jObject.infraTypeName);
							gOccupantInvoiceRelatedObject.infraTypeName = jObject.infraTypeName;
							gOccupantInvoiceRelatedObject.infraTypeId = jObject.infraTypeId;
							validateOccupantInvoiceGeneration();
							$('#divOccupantRoomTypeSpecifyDialog').modal('hide');
						});		
					}
				});
			} else {
				jAlert('Please select Room type!!!');
			}
		});
	});
}




function updateOccupantRoomType(infraTypeId,infraTypeName){
	$('.studentRoomType').html(infraTypeName);
}

function showSpecifyStudentGender() {
	$('#divStudentGenderSpecifyDialog').modal('show');	
}


function confirmOccupantGenderSpecification() {
	var gender = $('#cmbGenderList').val();
	var occupantId = undefined;
	occupantId = gOccupantInvoiceRelatedObject.occupantId;
	if(gender != 0) {
		specifyOccupantGender(occupantId,gender,function(json){
			updateSelectedOccupantGender(gender);
			validateOccupantInvoiceGeneration();
			$('#divStudentGenderSpecifyDialog').modal('hide');	
		});
	}
}
function specifyOccupantGender(occupantId,gender,callback) {
	$.ajax({
		url:'specifyOccupantGender.json?occupantId='+occupantId+'&gender='+gender,
		dataType:'text',
		success:function(jArray){
			callback(jArray);
		}
	});
}

function updateSelectedOccupantGender(gender){
	gOccupantInvoiceRelatedObject.gender = gender;
	$('.studentGender').html(gender);
}


function printAdmissionReceiptHostel(studentBillId){
	getHostelReceiptwisePaymentInformationForPrinting(studentBillId,function(jObject){
		var instituteName = $('#instituteName').val();
		var receiptHeading = $('#hpReceiptHeading').val();
		
		var receiptNo = jObject['receiptNo'];
		// var instituteName = jObject['instituteName'];
		var hostelNo = jObject['hostelNo'];
		var hostelName = jObject['hostelName'];
		//var currDate = jObject['currDate'];
		var currDate = jObject['receiptDate'];
		var studentName = jObject['studentName']; 
		var studentUID = jObject['studentUID'];
		if(studentUID == undefined){
			studentUID = '-';
		}
		var studclass = jObject['class'];
		var particularArray =  jObject['particularArray'];
		var receiptArray =  jObject['receiptArray'];
		var generatedBy =  jObject['generatedBy'];
		var remark	 =  jObject['remark'];
		if(remark == '' || remark == undefined){
			remark = '';//'Interim fee. Final fee would be finalized by the S.S.Samiti';
		} 
		var totalAmount = 0;	
		var payment = '';
		var stdDetail = 
			'<tr>'+
				'<td colspan="3">'+
					'<b>'+
						'<div style="display:inline-block;">Dept. / Branch : '+studclass+'</div>'+
					'</b>'+
				'</td>'+
			'</tr>'+
		'<tr>'+
		'<td colspan="3">'+
			'<b>'+
				'<div style="display:inline-block;">Institute Name : '+instituteName+'</div>'+
			'</b>'+
		'</td>'+
	'</tr>';
		
		/*if(receiptNo!=undefined)
			receiptNo=receiptNo.split('/')[0]+"/"+receiptNo.split('/')[1]+"/"+'<strong>'+receiptNo.split('/')[2]+'</strong>'; */
		for(var i=0;i<receiptArray.length;i++)
		{
			payment +=
				'</tr>'+
					'<td style="width:81%;">'+receiptArray[i].paidBy+'</td>'+
					'<td style="text-align:right;width:19%;">'+formatAmount(parseFloat(receiptArray[i].amount).toFixed(2))+'</td>'+
				'</tr>';
				
		}
		
		if(payment!=null || payment!='')
		{
			payment =
				'<tr>'+
					'<td colspan="3" style="font-size:9px;">'+
						'<table cellspacing="0" cellpadding="0" class="table2" style="width:100%;">'+payment+'</table>'+
					'</td>'+
				'</tr>';
		}
		var boiler = '';
		var customerIdentificationObj = $('#customerHelper').val();
		if(customerIdentificationObj != undefined && customerIdentificationObj !="INDIRA_PUNE"){
			boiler+='<div style="width:100%;text-align:center;font-size: 10px;" class="printDiv">'+
			'<strong>'+$('#subjectTo').val()+'</strong>'+
			'</div>';
		}
		boiler+='<div style="width:100%;font-family: COURIER;">'+
			'<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">'+
				'<img height="46px" src="getInstituteLogo.json">'+
			'</div>'+
			'<div style="width:60%;display:inline-block;text-align:center;vertical-align:middle;font-size: 13px;">'+
				'<b>'+receiptHeading+'</b>'+
			'</div>'+
			'<div style="width:20%;display:inline-block;text-align:center;vertical-align:middle;">'+
				'<img height="46px" src="getInstituteLogo.json">'+
			'</div>'+
		'</div><br>'+
		'<table class="table table-bordered table2" cellspacing="0" cellpadding="0" id="tblPrintIncomeResceipt" >'+
				/*'<tr>'+
					'<th colspan="3"><center><div><img height="36px" src="getInstituteLogo.json"></div><b>'+instituteName+'</b><br><b>Receipts <span id="spnCopyName"></span></b></center></th>'+
				'</tr>'+*/
			'<tr>'+
				'<th colspan="3"><center><b>RECEIPT</b></center></th>'+
			'</tr>'+
			'<tr>'+
				'<td><strong>Receipt No. </strong></td><td colspan="2"><span class="size14"> '+receiptNo+' </span><span style="float:right;" >'+currDate+'</span></td>'+
			'</tr>'+
			'<tr>'+
				'<td><strong>Received from </strong></td><td colspan="2" class="size14 fontBold">'+
				'<span class="size14"> '+studentName+'</span><span style="float:right;" >UID: '+studentUID+'</span></td>'+
			'</tr>'+
			'<tr>'+
			'<td><strong>Hostel Name  </strong></td><td colspan="2" class="size14 fontBold">'+
			'<span class="size14"> '+hostelName+'</span><span style="float:right;" >Room No : '+hostelNo+'</span></td>'+
		'</tr>'+
			stdDetail+
			'<tr>'+
				'<th style="width:17%;">Sr no.</th>'+
				'<th style="width:63%;">Account Head</th>'+
				'<th style="width:20%;">Amount</th>'+
			'</tr>';
			for(var k = 0; k<particularArray.length;k++){
				 boiler+='</tr><td style="text-align:center">'+eval(k+1)+'</td>';
				 
				 if(particularArray[k]['isRefundable'])
					 boiler+='<td style="">'+particularArray[k]['orgFeeItemHeadName']+'( Refundable )</td>';
				 else
					 boiler+='<td style="">'+particularArray[k]['orgFeeItemHeadName']+'</td>';
				 
				 boiler+='<td style="text-align:right">'+commaFormatted(Math.round(parseFloat(particularArray[k]['totalAmount'])).toFixed(2))+'</td></tr>';
				 
				 totalAmount=totalAmount+eval(particularArray[k]['totalAmount']);
				 
			 }
			amountInWord = (toWords(eval(totalAmount))+' Only.');
			boiler+='<tr>'+
				'<td><strong>Amount in word </strong></td>'+
				'<td colspan="2"> Rupees '+amountInWord+' </td>'+
			'</tr>'+
			'<tr>'+
				'<td colspan="2" style="text-align:right"><b>Total(In Rs.)</b></td>'+
				'<td style="text-align:right;" class="fontBold">'+formatAmount(parseFloat(totalAmount).toFixed(2))+'/-</td>'+
			'</tr>';
			boiler+='<tr>'+
					payment+
				'<tr>'+
					'<td colspan="3">'+remark+'</td>'+
				'</tr>'+
				'<tr>'+
				'<td colspan="3" style="text-align:right;" class="fontBold size10"><strong>For '+instituteName+' <br><br>Generated By : '+generatedBy+'</strong></td>'+
			'</tr>'+
			/*'<tr>'+
				'<td colspan="3" style="font-weight:bold;font-style:italic">Provisional fee & Subject to orders of Honorable High Court & Supreme Court</td>'+
			'</tr>'+*/
		'</table>';
			
			var boilerPrint = 
				'<div style="height:24.6cm;">'+
					'<div style="height:40%;">'+
					boiler+
					'</div>'+
					'<div style="height:40%;padding-top:16%;">'+
					'<span style="text-align:center">---------------------------------------------------------------------------------------------------------------------</span>'+
					boiler+
					'</div>'+
					/*'<div style="height:40%;padding-top:16%;">'+
					'<span style="text-align:center">---------------------------------------------------------------------------------------------------------------------</span>'+
					boiler+
					'</div>'+*/
				'</div>';
				
			var myboiler='<html><meta charset="utf-8" /><head>'+
				'<style type="text/css">'+
				
				'@media print  and (width: 21cm) and (height: 29.7cm) {'+
			    '@page {'+
				 '     margin: 3cm;'+
			    
				  '  }'+
				'body{ background-color:#FFFFFF; background-image:none; color:#000000; }'+
				'.ad{ display:none;}'+
				'.HeaderSection'+
				'{'+
				'display:none;'+
				'}'+
				'.FooterSection'+
				'{'+
				'display:none;'+
				'}'+
				'.leftbar{ display:none;}'+
				'.contentarea{ width:100%;}'+
				'}'+
				'table.table2 a:link	{	     color: #666;	    font-weight: bold;	    text-decoration: none; 	}	.table2 a:visited	{	    color: #999999;	    font-weight: bold;	    text-decoration: none;	}	.table2 a:active, .table2 a:hover	{	    color: #bd5a35;	    text-decoration: underline;	}	/* .table-bordered {	    -moz-border-bottom-colors: none;	    -moz-border-left-colors: none;	    -moz-border-right-colors: none;	    -moz-border-top-colors: none;	    border-collapse: separate;	    border-color: #DDDDDD #DDDDDD #DDDDDD -moz-use-text-color;	    border-image: none;	    border-radius: 4px 4px 4px 4px;	    border-style: solid solid solid none;	    border-width: 1px 1px 1px 0;	}	.table {	    margin-bottom: 18px;	    width: 100%;	}	table {	    border-collapse: collapse;	    border-spacing: 0;	} */	.table2	{	    width:100%;	    font-family: COURIER;	    color: Black;	    font-size: 12px;	    text-shadow: 1px 1px 0px #fff;	    border: #000 1px solid;	    -moz-border-radius: 3px;	    -webkit-border-radius: 3px;	    border-radius: 3px;	    -moz-box-shadow: 0 1px 2px #d1d1d1;	    -webkit-box-shadow: 0 1px 2px #d1d1d1;	    box-shadow: 0 1px 2px #d1d1d1;	    border-spacing: 0;	}	.table2 tr th:first-child	{	    text-align: left;	    padding-left: 10px;	    border-left: 0;	    text-align: center;	}	.table2 th	{	    border-top: 1px solid #000;	    border-bottom: 1px solid #000;	    border-left: 1px solid #000;	    text-align: center;	    height: 15px;	    font-weight: bold;	    background: #bfbfbf;	    /*background: -webkit-gradient(linear, left top, left bottom, from(#ededed), to(#ebebeb));	    background: -moz-linear-gradient(top,  #ededed,  #ebebeb); */	}	.table2 th:first-child	{	    text-align: left; /*padding-left:20px;*/	}	.table2tr:first-child th:first-child	{	    -moz-border-radius-topleft: 3px;	    -webkit-border-top-left-radius: 3px;	    border-top-left-radius: 3px;	}	.table2 tr:first-child th:last-child	{	    -moz-border-radius-topright: 3px;	    -webkit-border-top-right-radius: 3px;	    border-top-right-radius: 3px;	}	.table2 tr	{	    text-align: left;	    padding-left: 1px;	}	.table2 tr td:first-child	{	    text-align: left;	    padding-left: 10px;	    border-left: 0;	}	.table2 tr td	{	    height: 10px;	    border-top: 1px solid #ffffff;	    border-bottom: 1px solid #000;	    border-left: 1px solid #000;	    /* border-right: 1px solid #000; */	    	    	    /* background: #fafafa;	    background: -webkit-gradient(linear, left top, left bottom, from(#fbfbfb), to(#fafafa));	    background: -moz-linear-gradient(top,  #fbfbfb,  #fafafa); */	}	.table2 tr.even td	{	    background: #f6f6f6;	    background: -webkit-gradient(linear, left top, left bottom, from(#f8f8f8), to(#f6f6f6));	    background: -moz-linear-gradient(top,  #f8f8f8,  #f6f6f6);	}	.table2 tr:last-child td	{	    border-bottom: 0;	}	.table2 tr:last-child td:first-child	{	    -moz-border-radius-bottomleft: 3px;	    -webkit-border-bottom-left-radius: 3px;	    border-bottom-left-radius: 3px;	}	.table2 tr:last-child td:last-child	{	    -moz-border-radius-bottomright: 3px;	    -webkit-border-bottom-right-radius: 3px;	    border-bottom-right-radius: 3px;	}	.table2 tr:hover td	{	    /* background: #f2f2f2;	    background: -webkit-gradient(linear, left top, left bottom, from(#f2f2f2), to(#f0f0f0));	    background: -moz-linear-gradient(top,  #f2f2f2,  #f0f0f0); */	}'+
				'</style>'+
				'<link rel="stylesheet" href="css/print.css" rel="stylesheet" media="print" />'+
				'</head><body>';
				myboiler+=boilerPrint;
				myboiler+='</body></html>';
						var printWin = window.open('','','left=0,top=0,width=1,height=1,toolbar=0,scrollbars=2,status=0');
						printWin.document.write(myboiler);
						printWin.document.close();
						printWin.focus();
						printWin.print();
						printWin.close();
	});
}

function getHostelReceiptwisePaymentInformationForPrinting(studentBillId,callback){
	$.ajax({
		url:'getHostelReceiptwisePaymentInformationForPrinting.json',
		data:'studentBillId='+studentBillId,
		dataType:'json',
		async:false,
		success:function(jObject){
			callback(jObject);
		}
	});
}

function formatAmount(x){
	if(x!=null && x!=undefined && x!=''){
		x=x.toString();
		var afterPoint = '';
		if(x.indexOf('.') > 0)
		   afterPoint = x.substring(x.indexOf('.'),x.length);
		x = Math.floor(x);
		x=x.toString();
		var lastThree = x.substring(x.length-3);
		var otherNumbers = x.substring(0,x.length-3);
		if(otherNumbers != '')
		    lastThree = ',' + lastThree;
		var res = otherNumbers.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree + afterPoint;

		return res;
	}else{
		return "-";
	}
}


/*****************************************************************************************/

function mapToReceiptsForHostel()
{
	$('#otherReceiptModal').modal('show');
	$('#otherReceiptTxt').val('');
	$('#divShowReceivedDetail').html('');
	$('#tdReceivedDetail').html('');
}



function showOtherReceiptDetailsForHostel()
{
	var receiptNo = $('#otherReceiptTxt').val();
	
	$.ajax({
		url:'IncomeReceiptDetailDataForStudentBill.json',
		dataType:'json',
		data:{receipt:receiptNo,
			source:globalSource,
			type:'hostel'},
		type:'POST',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			
			var boiler = 
				'<table class="table table-bordered">'+
					'<tr>'+
						'<td>Receipt Date </td>'+
						'<td>'+jArray["receiptDate"]+'</td>'+
						'<td>Received From </td>'+
						'<td>'+jArray["receivedFrom"]+'</td>'+
					'</tr>'+
					'<tr>'+
						'<th colspan="4">Received Detail</th>'+
					'</tr>'+
					'<tr>'+
						'<td colspan="4" id="tdReceivedDetail"></td>'+
					'</tr>'+
					'<tr>'+
						'<td colspan="4"><div align="center">'+
							'<input type="button" class="btn btn-inverse btn-mini" value="Submit" onclick="addOtherReceiptToInvoiceForHostel()" >'+
						'</td>'+
					'</tr>'+
				'</table>';
				$('#divShowReceivedDetail').html(boiler);
				
				if(jArray["receivedForDetail"].length>0){
					boiler = '<table class="table table-bordered">'; 
					for(var i=0;i<jArray["receivedForDetail"].length;i++){
						boiler += 
							'<tr>'+
								'<td>'+jArray["receivedForDetail"][i]["name"]+'</td>'+
								'<td>'+jArray["receivedForDetail"][i]["amount"]+'</td>'+
							'</tr>';
								
					}
					boiler += '</table>';
					$('#tdReceivedDetail').html(boiler);
				}
				
		},error:function(){

		}
	});
	
}






function addOtherReceiptToInvoiceForHostel()
{
	var feeInvoiceId = getStudentInvoiceId();
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	var receiptNo = $('#otherReceiptTxt').val();
	var hostelPolicyId = gOccupantInvoiceRelatedObject.hostelPolicyId;
	
	$.ajax({
		url:'mapOtherReceiptToReceiptForHostel.json',
		dataType:'json',
		data:{feeInvoiceId:feeInvoiceId,receiptNo:receiptNo,feeItemId:feeItemId,hostelPolicyId:hostelPolicyId},
		type:'POST',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			$('#otherReceiptModal').modal('hide');
			jAlert("successFully Created","Success");
			redirectToInvoiceFunctionForHostel(tempId);
		},error:function(){

		}
	});
}

function chequeBouns(studentbillChequeId)
{
	$.ajax({
		url:'reverseChequeBounceStudentFeeHostel.json',
		data:'studentbillChequeId='+studentbillChequeId,
		type:'POST',
		dataType:'json',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			if(jArray[0]["response"]=='0'){
				jAlert("Successfully Revert","Success");
				showStudentHostelBillingDetails(undefined);
			}else
				jAlert("Cheque already transfered to Bank so can not be Bounced from here ","Success");
		},error:function(){
			
		}
	});
}

function chequeRevert(studentbillChequeId)
{
	$.ajax({
		url:'revertreverseChequeBounceStudentFeeHostel.json',
		data:'studentbillChequeId='+studentbillChequeId,
		dataType:'json',
		type:'POST',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			jAlert("Entries Reversed","Success");
			showStudentHostelBillingDetails(undefined);
		},error:function(){
			
		}
	});
}

function reverseHostelBill(studentBillId,financePolicy,billNo,transactionDate) {


		$.ajax({
			url:'lockingPaymentverify.json',
			dataType:'text',
			data:{transactionUniqueRef:billNo,financepolicy:financePolicy,transactionDate:receiptdate},
			type:'GET',
			async:false,
			beforeSend:function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
				
			},
			success:function(msg){
				if(msg=="true"){
						
									jConfirm("Do you really want to Revert Bill Entry","Confirm", function(ans){
								
										if(ans){
											$.ajax({
												url:'reverseHostelBill.json',
												data:'studentBillId='+studentBillId,
												dataType:'json',
												type:'POST',
												async:false,
												beforeSend: function() {
													startCommonAjaxSpinner();
												},
												complete: function() {
													stopCommonAjaxSpinner();
												},
												success:function(jArray){
													//alert(jArray[0].response);
													if(jArray[0].response == '0')
														jAlert("Bill reversed successfully","Success");
													else if(jArray[0].response == '1')
														jAlert("Bill reverse order is not proper","Success");
													else if(jArray[0].response == '2')
														jAlert("Selected Bill is already reversed ","Success");
													showStudentHostelBillingDetails(undefined);
												},error:function(){
								
												}
											});	
										}
								
									});
						
				}else if(msg=="false"){
					jAlert("something went wrong");
					return false;
				}else{
					jAlert(msg);
					return false;
				}
				
			}
		});
}
function getStudentReceivableAndPayableDetailsForInvoice(jArray,studentId,instituteCourseStrengthId,hostelPolicyId,hostelPlanId,studentName,invoiceId,instituteCourseId,occupantId,totRemaining,totstudentPayable123){
	//alert("hiii")
	//$('#studentDetailsDivTbl').html('');
	$('#studentDetailsDivTbl').html('<div style="width:100%; text-align:center;"><img src="img/ajax.gif"></div>');
	$.ajax({
		url:'getStudentReceivableDetailsNew.json',
		dataType:'json',
		data:'studentId='+studentId,
		success:function(jObject){

			var academicFee=eval(jObject.academicFees);
			var hostelFees = eval(jObject.hostelFees);
			var miscFee = eval(jObject.miscFee);
			var studentPayable =eval(jObject.studentPayable);
			var tillDatePaid = eval(jObject.studentPaidTill);
			var rollNo ="0";
			if(studentPayable==undefined)
				studentPayable=0;
			if(tillDatePaid==undefined)
				tillDatePaid=0;				
			if(academicFee>0)
			{
				academicFee=eval(jObject.academicFees);
			}
			else
			{
				academicFee=0;
				//studentPayable += -(eval(jObject.academicFees));
			}

			if(hostelFees>0)
			{
				hostelFees = eval(jObject.hostelFees);
			}
			else
			{
				hostelFees=0;
				//studentPayable += -(eval(jObject.hostelFees));
			}

			if(miscFee>0)
			{
				miscFee = eval(jObject.miscFee);
			}
			else
			{
				miscFee=0;
			}
console.log("hostelFees",hostelFees);
			var boiler ='<table class="table table-bordered" style="float:right">'+
			'<tr>'+
			'<td colspan="4" style="text-align:center">'+
			'&nbsp;&nbsp;<input type="button" class="btn btn-danger btn-mini btn-cancelAdmission" value="Hostel Admission Cancellation">&nbsp;&nbsp;'+
			'</td></tr>'+
			'<tr><td colspan="4" style="text-align:center"><input type="button" class="btn btn-primary btn-mini btn-downloadBankChallanBtn" value="Download Bank Challan" style="float:center">&nbsp;&nbsp;'+
			'<input type="button" class="btn btn-mini btn-success" value="Hostel Installment" onclick="installment('+studentId+',\''+hostelFees+'\',\''+studentName+'\',\''+instituteCourseId+'\',\''+hostelPlanId+'\',\''+occupantId+'\')">';
			boiler +='<span id="downloadChallan"></span>'+
			'</td>'+
			'</tr>'+
			'<tr><th colspan="4" class="gems_currency_label">Student Receivable </th></tr>'+
			'<tr><th class="gems_currency_label">Academic Fees </th><td id="tdAcademicFees" class="gems_currency" style="font-weight:bold">'+academicFee+'</td>'+
			'<th class="gems_currency_label">Hostel Fees</th><td class="gems_currency" id="tdHostelFees" style="font-weight:bold">'+totRemaining+'</td></tr><tr>'+
			'<th class="gems_currency_label">Miscellaneous Fees  </th><td  id="tdMiscFees" class="gems_currency" style="font-weight:bold">'+miscFee+'</td>'+
			'<th></th><td><input type="button" id="btnView" class="btn btn-inverse btn-mini btn-btnView" value="View"></td>'+
			'</tr>'+
			'<tr><th colspan="5" class="gems_currency_label">Student Payable</th></tr>'+
			'<th class="gems_currency_label">Student Payable</th><td colspan="3" class="gems_currency"style="font-weight:bold">'+totstudentPayable123+'</td></tr>'+
			'<tr><th  class="gems_currency_label">Paid To Student<br> Till Date </th><td  class="gems_currency" colspan="3" id="tdTillDatePaid" style="font-weight:bold">'+tillDatePaid+'</td></tr>'+
			'</table>';
			$('#studentDetailsDivTbl').html(boiler);

			$('.btn-cancelAdmission').click(function(){
				configureStudentCancelationDetail(jArray);
			});

			$('.btn-downloadBankChallanBtn').click(function(){
				downloadBankChallan(studentId,studentName,hostelPolicyId,hostelPlanId);
			});

			$('.btn-btnView').click(function(){
				viewStudentFeeDetails(studentId);
			});
		}
	});
}
function downloadBankChallan(studentId,studentName,hostelPolicyId,hostelPlanId){
	var boiler = 
		'<div style = "width:100%;margin-top:5px" id = "downloadBankChallanModal" >'+
		'<table class = "table table-bordered table-condensed">'+
		'<tr>'+
		'<th style = "text-align:left">Name</th><td>'+studentName+'</td>'+
		'</tr>'+
		'<tr id="trAdmissionCategoryType">'+
		'<th style = "text-align:left">Challan Amount</th>'+
		'<td><input type="text" id="txtChallanAmount"></td>'+
		'</tr>'+
		'</table>'+
		'</div>';
	$('#commonDialogBody').html(boiler);
	var footerBoiler = '<input type="button" value="Download Challan" class="btn btn-mini btn-inverse" onclick="fetchAdmissionFeeInfo('+hostelPolicyId+', '+hostelPlanId+', '+studentId+')">';
	$('#commonDialogHeader').html('Bank Challan');
	$('#commonDialogFooter').html(footerBoiler);
	$('#commonDialog').modal('show');
}
function fetchAdmissionFeeInfo(hostelPolicyId, hostelPlanId, studentId) {
	var Amount=$('#txtChallanAmount').val();
	var financePolicyId = g_financePolicyId;
	var instituteCourseStrengthId = g_instituteCourseStrengthId;
	var instituteCourseId = g_instituteCourseId;
	var StudentEntranceMeritListId=0;
	
	$.ajax({
		url : 'fetchHostelAdmissionFeeDetail.json',
		dataType:'text',
		data:{Amount:Amount,hostelPolicyId:hostelPolicyId,hostelPlanId:hostelPlanId,studentId:studentId,financePolicyId:financePolicyId,
		instituteCourseStrengthId:instituteCourseStrengthId,instituteCourseId:instituteCourseId,StudentEntranceMeritListId:StudentEntranceMeritListId,
		studentInstCourseSemBatchId:gStudentBatchId},
		success:function(bankId){
		//	alert(bankId)
			$('#downloadChallan').bcpymt({sPC:'HOSTF',iFBIDs:bankId,bWFH:true,bSelf:false,sFor:studentId});	
			$('#commonDialog').modal('hide');
		},error:function(){}
	});
}
function viewStudentFeeDetails(studentId)
{

	$('#viewStudModal').modal('show').css({
		width:'1000px',
		'margin-left':function(){ return -($(this).width()/2); }
	});



	$.ajax({
		url:'viewStudentFeeDetails.json?studentId='+studentId,
		dataType:'json',
		success:function(jArray)
		{

			var boiler='';
			boiler+='<table id="getData" class="table table-bordered">'+
			'<thead>'+
			'<tr>'+
			'<th>Sr.No.</th>'+
			'<th>Student Name</th>'+
			'<th>Email</th>'+
			'<th>Programme</th>'+
			'<th>mobile No</th>'+
			'<th>Fine Against</th>'+
			'<th>Amount Receivables (In Rs.)</th>'+
			'<th>Amount Paid (In Rs.)</th>'+
			'<th>Reason(In Rs.)</th>'+
			'<th>Generated By</th>'+
			'<th>Generated Date</th>'+
			'<th>Description</th>'+
			'</tr>'+
			'</thead>'+
			'<tbody id="displaystudentData">'+
			'</tbody>'+
			'</table>';
			$('#displayStudTbl').html(boiler);

			if(jArray.length>0)
			{
				for(var i=0;i<jArray.length;i++)
				{	
					if(jArray[i]["fineAmount"]==jArray[i]["paidFineAmount"])
					{
						var studentList = '<tr class="receivablePaid">'+
						'<td>'+eval(i+1)+'</td>'+
						'<td>'+jArray[i]["studentName"]+'</td>'+
						'<td>'+jArray[i]["emailId"]+'</td>'+
						'<td>'+jArray[i]["courseName"]+'</td>'+
						'<td>'+jArray[i]["mobileNo"]+'</td>'+
						'<td>'+jArray[i]["accountName"]+'</td>'+
						'<td style="text-align:right">'+jArray[i]["fineAmount"]+'</td>'+
						'<td style="text-align:right">'+jArray[i]["paidFineAmount"]+'</td>'+
						'<td>'+jArray[i]["editReason"]+'</td>'+
						'<td>'+jArray[i]["generatedByEmployee"]+'</td>'+
						'<td>'+jArray[i]["generatedDate"]+'</td>'+
						'<td>'+jArray[i]["description"]+'</td>'+
						'</tr>';

						$('#displaystudentData').append(studentList);
					}
					else
					{
						var studentList = '<tr class="paidReceivable">'+
						'<td>'+eval(i+1)+'</td>'+
						'<td>'+jArray[i]["studentName"]+'</td>'+
						'<td>'+jArray[i]["emailId"]+'</td>'+
						'<td>'+jArray[i]["courseName"]+'</td>'+
						'<td>'+jArray[i]["mobileNo"]+'</td>'+
						'<td>'+jArray[i]["accountName"]+'</td>'+
						'<td style="text-align:right">'+jArray[i]["fineAmount"]+'</td>'+
						'<td style="text-align:right">'+jArray[i]["paidFineAmount"]+'</td>'+
						'<td>'+jArray[i]["editReason"]+'</td>'+
						'<td>'+jArray[i]["generatedByEmployee"]+'</td>'+
						'<td>'+jArray[i]["generatedDate"]+'</td>'+
						'<td>'+jArray[i]["description"]+'</td>'+
						'</tr>';

						$('#displaystudentData').append(studentList);

					}

					$('.paidReceivable').css("background-color", "#FCF8EC");
					$('.receivablePaid').css("background-color", "#DFF0D8");

				}
			}
			else
			{
				var testBoiler='';
				testBoiler+='<tr><td colspan="12">No data available in table </td></tr>';
				$('#displaystudentData').append(testBoiler);


			}


		}
	});
}
function getAccountHeadbyPaymentMode(institutecourseId,paymentMode){
	if(paymentMode==undefined || paymentMode=='' || paymentMode=='0')
		 paymentMode =$('.paymentMode:visible').val();
		// url:'getaccountHeadOfHostelPaymentMode.json?instituteCourseId='+institutecourseId,
	$.ajax({
		url:'getaccountHeadOfPaymentMode.json?instituteCourseId='+institutecourseId,
		dataType:'json',
		async:false,
		data:{paymentMode:paymentMode},
		success:function(jArray){
			$('#configuredBankname').html('Account Head:-<br>'+jArray.AccountName).show();
			$('#configuredBankname1').html('Account Head:-<br>'+jArray.AccountName).show();
			var billIIId=$('.paymentMode:visible').attr('editAttrBill');
			if(jArray.AccountName=='Not Configured'  && billIIId==undefined){
				$('#configuredBankname').html('Account Head:<br><select id = "otherFeeAccountHeadpmt1"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
				$('#configuredBankname1').html('Account Head:<br><select id = "otherFeeAccountHeadpmt"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
				getAccountHeadDetailsForHostel(institutecourseId,paymentMode);
			}else{
					$('#configuredBankname'+billIIId).html('Account Head:<br><select id = "otherFeeAccountHeadpmt1"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
					$('#configuredBankname1'+billIIId).html('Account Head:<br><select id = "otherFeeAccountHeadpmt"  style="width:100px" class="AccountHeadcls" onchange = "" ></select>').show();
					getAccountHeadDetailsForHostel(institutecourseId,paymentMode);
			}
		}
	});
	var manualAccountHeadId=$('.paymentMode').data('manualAccountHeadId');
	if(manualAccountHeadId!=undefined){
		$('#otherFeeAccountHeadpmt').val(manualAccountHeadId)
		//$('.paymentMode').attr('disabled',true);
		//$('#otherFeeAccountHeadpmt').attr('disabled',true);
	}
}

function getAccountHeadDetails(institutecourseId,paymentMode)
{
	if(paymentMode==undefined || paymentMode=='' || paymentMode=='0')
		paymentMode='';
	$.ajax({
		url:'getAccountHeadsforEvaluationParametersForHostel.json?instituteCourseId='+institutecourseId,
		dataType:'json',
		async:false,
		data:{paymentMode:paymentMode},
		success:function(jArray){
			var boiler = '<option value = "0">Select</option>';
			var boiler1 = '<option value = "0">Select</option>';
			var boiler0 = '<option value = "0">Select</option>';
			for(var i = 0 ; i < jArray.length ; i++){
				boiler += '<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
				if(jArray[i]["accountFor"]=='AccountHead_Bank'){
					boiler1+='<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
				}
				if(jArray[i]["accountFor"]==undefined)
					boiler0+='<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
			}
			
			$('.AccountHeadcls').html(boiler);
			$('#otherFeeAccountHeadpmt').html(boiler1);
			$('#otherFeeAccountHeadpmt1').html(boiler1);
			$('#otherFeeAccountHeadcmb').html(boiler);
			$('#otherFeeAccountHeadcmb11').html(boiler);
			if(paymentMode=='concession' || paymentMode=='Concession'){
				$('.AccountHeadcls').html(boiler0);
				$('#otherFeeAccountHeadpmt').html(boiler0);
				$('#otherFeeAccountHeadpmt1').html(boiler0);
				$('#otherFeeAccountHeadcmb').html(boiler0);
				$('#otherFeeAccountHeadcmb11').html(boiler0);
			}
			convertComboToSearchable('#otherFeeAccountHeadpmt');
		}
	});
}
function checkConfiguration(){
	var value = $('input[name = "charges"]:checked').val();
    if(value!='Yes'){
    	$('#Percentage').attr('readonly',true);
    	$('#TotalAmoount').attr('readonly',true);
    	$('#otherFeeAccountHeadcmb11').attr('disabled',true);
    	$('#otherFeeAccountHeadcmb12').attr('disabled',true);
    }else{
    	$('#Percentage').attr('readonly',false);
    	$('#TotalAmoount').attr('readonly',false);
    	$('#otherFeeAccountHeadcmb11').attr('disabled',false);
    	$('#otherFeeAccountHeadcmb12').attr('disabled',false);
    }
}
function calculatecardpayment(){
	var billAmount=$('#txtBillPaymentAmount').val();
	if(billAmount=='' || billAmount==undefined  || billAmount==0 || billAmount=='0'){
		jAlert('Please enter bill amount to calculate charges amount');
		return false
		}
	var per=$('.cardPercentage').val();
	var totabillAmountWithCharges=(eval(billAmount)*eval(per)/100);
	$('#TotalAmoount').val(totabillAmountWithCharges);
}

function MakePaymentOfflineMainHostel(studentId,InstituteCourseId) {
	$('#commonDialogHeadermakeofflinePaymentHostel').html('');
	$('#commonDialogmakeofflinePaymentHostel').modal({
		keyboard: false,
	}).css({
		width: '1000px',
		'margin-left': function () {
			return -($(this).width() / 2);
		}
	});
	$('#chkAgreeTermsAcademicBMLoffline').attr('checked',false);

	offlinePaymentMain(studentId,InstituteCourseId);
	$.ajax({      
		url:'getStudentPaymentDetailsHostel.json',
		data:{studentId:studentId},
		dataType:'json',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			var boiler ='<br><br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="">'+
					'<tr><th>Sr. No.</th><th>UTR Code</th><th>Bank Name</th><th>IFSC No</th><th>Type</th><th>Payment Date</th><th>Settled Voucher No</th><th>Particulars</th><th>Action</th></tr>';

			if(jArray.length>0 && jArray[0].length>0){
				for(var i=0;i<jArray[0].length;i++){
					boiler+='<tr class="trstudentFeeStructure">'+
							'<td style="text-align:right">'+(i+1)+'</td>'+
							'<td>'+jArray[0][i]["utrCode"]+'</td>'+
							'<td>'+jArray[0][i]["bankName"]+'</td>'+
							'<td>'+jArray[0][i]["ifscCode"]+'</td>'+
							'<td>'+jArray[0][i]["type"]+'</td>'+
							'<td>'+jArray[0][i]["paymentDate"]+'</td>'+
							'<td>'+jArray[0][i]["settledVoucherNo"]+'</td>'+
							'<td>'+jArray[0][i]["feeHeads"]+'</td>'+
							'<td>';

					if(jArray[0][i]["settledVoucherNo"]==''){
						boiler+='<a style="cursor:pointer;" onClick="deleteOfflineStudentPaymentEntry(\''+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'\','+studentId+');" id="linkDelete_'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" onlineTransactionPaymentSplitDetailsId="'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" title="Delete"><i class="fa fa-trash-o fa-1x"></i>&nbsp;</a>&nbsp;&nbsp;';
						if(jArray[0][i]["isPutForFinance"]!='Yes'){
							boiler+='<a style="cursor:pointer;" onlineTransactionPaymentSplitDetailsId="'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" id="linkFinanceApproval_'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" onClick="putForFinanceOfflineStudentPaymentEntry(\''+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'\','+studentId+');" title="Put for Finance"><i class="fa fa-share-square-o fa-1x"></i>&nbsp;</a>';
						}else{
							boiler +='<label>Sent to Finance Authority</label>';
						}
					}else{
						boiler+='<label>Accepted by Finance Authority</label>';
					}
					boiler+='</td>'+
							'</tr>';
				}

			}else{
				boiler+='<tr><td colspan="12">Data Not Found</td></tr>';
			}
			boiler+='</table>';
			$('#AllStudentPaymentDetailsofflineHostel').html(boiler);

			var boiler='<br>'+
					'<div><table style="display:none" class="table table-condensed" id="tblFeePaidOption">'+
					'<tr><th style="text-align:left" class="gems_currency_label">Enter Fee Amount:</th>'+
					'<td  colspan="3" id="tdAmountToBePay" class="gems_currency" style="text-align:left">'+
					'<input id="txtAmountToBePay" class="gems_currency" style="width:110px;text-align:right;" type="text" value="0">&nbsp;&nbsp;'+
					'<label class="btn btn-mini btn-inverse  btnColorBlack" id="PayId" onclick="getValidationData('+studentId+');">Pay</label>&nbsp;&nbsp;'+
					'<label class="btn btn-mini btn-inverse  btnColorBlack " onClick="resetAmount('+studentId+','+InstituteCourseId+');">Reset</label></td>'+
					'</tr></table>'+
					( jArray.length>2 ?'<br><input type="checkbox" class="" id="ckbPayFeesAmount" onclick="payFeeAmount()">&nbsp;&nbsp;<b>Do you want to Put Amount ?</b>'+
							'</br><input type="checkbox" class="" id="ckbPayExceedFees" onclick="payExceedFee()">&nbsp;&nbsp;<b>Please Select for Excess Fee ?</b>':'')+
					'<span id="idAdvancePayment" style="display:none"></br><input type="checkbox" class="" id="ckbPayAdvanceFees" onclick="payAdvanceFeeForHostel()">&nbsp;&nbsp;<b>Please Select for Advance Fee ?</b></span></div>'+

					'<br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="studentOfflinePaymentDetails">'+
					'<tr><th>Sr. No.</th><th></th><th>Fee Structure Name</th><th>Particulars</th><th class="gems_currency_label">Invoice Amount</th><th class="gems_currency_label">Amount In-process</th><th class="gems_currency_label">Payment Amount</th></tr>';
			if(jArray.length>0){
				for(var i=2;i<jArray.length;i++){
					var feeHeads = 'amtstud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "");
					var type='checkBox';
					boiler+='<tr class="trstudentFeeStructure">'+
							'<td style="text-align:right">'+(i-1)+'</td>';
					if(jArray[i]["unitPrice"]!="0.0"){
						boiler+='<td style="text-align:center" id="chk_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'">'+
								'<input type="checkbox" checked types="'+jArray[i]["academics"]+'" class="claAmts chks_'+jArray[i]["studentExceptionInvoiceId"]+'" '+
								' feeHead="chk_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" value="'+jArray[i]["studentExceptionInvoiceId"]+'" '+
								' id="'+jArray[i]["studentExceptionInvoiceId"]+'_'+jArray[i]["academics"]+'" onclick="calculateAmountsHostel(\''+type+'\','+jArray[i]["studentExceptionInvoiceId"]+',\''+feeHeads+'\',\''+studentId+'\','+InstituteCourseId+')"></td>';
					}else{
						boiler+='<td style="text-align:center"></td>';
					}
					boiler+='<td>'+jArray[i]["feeStructureName"]+'</td>'+
					'<td id="desc_'+jArray[i]["studentExceptionInvoiceId"]+'">'+jArray[i]["description"]+'</td>'+
							'<td class="gems_currency amts_'+jArray[i]["studentExceptionInvoiceId"]+' invAmt" id="amtsStud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" style="text-align:right">'+jArray[i]["unitPrice"]+'</td>'+
							'<td class="gems_currency amtInProcess" id="amtstud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" style="text-align:right"></td>'+
							'<td class="editamt paymentAmt" id="editamts_'+jArray[i]["studentExceptionInvoiceId"]+'" style="text-align:right"></td>'+
							'</tr>';
				}
				boiler+='<tr id="trPayExceedFees" style="display:none"><td colspan="3" style="text-align:right" class="gems_currency_label">Excess Fee Amount</td><td colspan="3" id="paymentExceed" class="gems_currency" style="text-align:right"><input id="txtPayExceedFees" class="gems_currency" style="width:90px;text-align:right;" onkeyup="calculateAmountAccess();" type="text"></td></tr>';
				boiler+='<tr><td colspan="3" style="text-align:right" class="gems_currency_label">Total</td><td id="invAmt" class="gems_currency"></td><td id="amtInProcess" class="gems_currency"></td><td id="paymentAmt" class="gems_currency"></td></tr>';
			}else{
				boiler+='<tr><td colspan="2">Data Not Found</td></tr>';
			}

			//Advance 
			boiler +='<br>'+
					'<br><table class="table table-bordered table-striped table-condensed" style="width:100%;display:none" id="tblStudentAdvancePayment">'+
					'<thead><tr><th>Sr. No.</th><th>Particulars</th><th class="gems_currency_label">Payment Amount</th></tr>'+
					'</thead><tbody>'+
					'<tr><td class="gems_integer">1</td><td>Advance payment</td>'+
					'<td id="tdAdvancePayment" class="gems_currency" style="text-align:right">'+
					'<input id="txtPayAdvanceFees" style="width:90px;text-align:right;" onkeyup="calculateAmountAdvanceForHostel();" type="text"></td></tr>'+
					'</tbody><tfoot><tr><td colspan="2" style="text-align:right" class="gems_currency_label">Total</td>'+
					'<td id="payAdvanceAmt" class="gems_currency"></td></tr></tfoot></table>';

			$('#AllStudentPaymentDetailsofflineHostel').append(boiler);

			$('#commonDialogHeadermakeofflinePaymentHostel').html('Student Name:');
			setTimeout(function(){
				$('.claAmts').trigger('onclick');
			},1000);
			$('.clsExceed').numeric();

			if(jArray.length>0 && jArray[1].length>0){
				for(var i=0;i<jArray[1].length;i++){
					var studId = jArray[1][i]["studId"];
					var feeHeads = jArray[1][i]["feeHeads"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "");
					var amount = jArray[1][i]["amount"]!=undefined && jArray[1][i]["amount"]!='' ? eval(jArray[1][i]["amount"]):0;;
					var amt = $('#amtsStud_'+feeHeads).text()!=undefined && $('#amtsStud_'+feeHeads).text()!='' ? eval($('#amtsStud_'+feeHeads).text()):0;
					$('#amtstud_'+feeHeads).text(amount);
					console.log(amt+':::'+amount);
					if((amt-amount)==0 || amt == 0){
						$('#chk_'+feeHeads).text('');
					}
				}
			}

			var invAmt = 0;
			$('.invAmt').each(function(){
				var tmp = $(this).text()!=undefined && $(this).text()!='' ? $(this).text() :'0';
				invAmt +=eval(tmp);
			});
			$('#invAmt').text(invAmt);

			var amtInProcess = 0;
			$('.amtInProcess').each(function(){
				var tmp = $(this).text()!=undefined && $(this).text()!='' ? $(this).text() :'0';
				amtInProcess +=eval(tmp);
			});
			$('#amtInProcess').text(amtInProcess);
		},
		error:function(){
			jAlert("No Records","Error");
		}
	});
}

function MakePaymentOfflineMainHostelPolicyWise(studentId,InstituteCourseId) {
	$('#commonDialogHeadermakeofflinePaymentHostel').html('');
	$('#paydetailsofflineHostel').html('');
	$('#commonDialogmakeofflinePaymentHostel').modal({
		keyboard: false,
	}).css({
		width: '1000px',
		'margin-left': function () {
			return -($(this).width() / 2);
		}
	});
	$('#chkAgreeTermsAcademicBMLoffline').attr('checked',false);

	//offlinePaymentMain(studentId,InstituteCourseId);
	
	let tampBoiler = `<table class="table table-bordered table-condensed">
						<tr>
							<th>Hostel Finance Policy</th>
							<td><select id="hostelFinancePolicyId" onchange="getHostelFeesDetailsByPolicyId(${studentId},${InstituteCourseId});"><option value="0">Select</option></select></td>
						</tr>
					  </table>
					  <div id="studentHostelOfflinePaymentDetails" style="height:200px"></div>`;
	
	$('#AllStudentPaymentDetailsofflineHostel').html(tampBoiler);
	getAllHostelFinancePolicy(studentId);
	
}

function getHostelFeesDetailsByPolicyId(studentId,InstituteCourseId){
	$('#studentHostelOfflinePaymentDetails').css('height', 'auto'); 
	let hostelFinacePolicyId = $('#hostelFinancePolicyId option:selected').val();
	$.ajax({    
		url:'getStudentPaymentDetailsByHostelFinancePolicyId.json',
		data:{
			studentId:studentId,
			hostelFinacePolicyId:hostelFinacePolicyId
			},
		dataType:'json',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			var boiler ='<br><br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="">'+
					'<tr><th>Sr. No.</th><th>UTR Code</th><th>Bank Name</th><th>IFSC No</th><th>Type</th><th>Payment Date</th><th>Settled Voucher No</th><th>Particulars</th><th>Action</th></tr>';

			if(jArray.length>0 && jArray[0].length>0){
				for(var i=0;i<jArray[0].length;i++){
					boiler+='<tr class="trstudentFeeStructure">'+
							'<td style="text-align:right">'+(i+1)+'</td>'+
							'<td>'+jArray[0][i]["utrCode"]+'</td>'+
							'<td>'+jArray[0][i]["bankName"]+'</td>'+
							'<td>'+jArray[0][i]["ifscCode"]+'</td>'+
							'<td>'+jArray[0][i]["type"]+'</td>'+
							'<td>'+jArray[0][i]["paymentDate"]+'</td>'+
							'<td>'+jArray[0][i]["settledVoucherNo"]+'</td>'+
							'<td>'+jArray[0][i]["feeHeads"]+'</td>'+
							'<td>';

					if(jArray[0][i]["settledVoucherNo"]==''){
						boiler+='<a style="cursor:pointer;" onClick="deleteOfflineStudentPaymentEntry(\''+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'\','+studentId+');" id="linkDelete_'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" onlineTransactionPaymentSplitDetailsId="'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" title="Delete"><i class="fa fa-trash-o fa-1x"></i>&nbsp;</a>&nbsp;&nbsp;';
						if(jArray[0][i]["isPutForFinance"]!='Yes'){
							boiler+='<a style="cursor:pointer;" onlineTransactionPaymentSplitDetailsId="'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" id="linkFinanceApproval_'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" onClick="putForFinanceOfflineStudentPaymentEntry(\''+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'\','+studentId+');" title="Put for Finance"><i class="fa fa-share-square-o fa-1x"></i>&nbsp;</a>';
						}else{
							boiler +='<label>Sent to Finance Authority</label>';
						}
					}else{
						boiler+='<label>Accepted by Finance Authority</label>';
					}
					boiler+='</td>'+
							'</tr>';
				}

			}else{
				boiler+='<tr><td colspan="12">Data Not Found</td></tr>';
			}
			boiler+='</table>';
			$('#studentHostelOfflinePaymentDetails').html(boiler);

			var boiler='<br>'+
					'<div><table style="display:none" class="table table-condensed" id="tblFeePaidOption">'+
					'<tr><th style="text-align:left" class="gems_currency_label">Enter Fee Amount:</th>'+
					'<td  colspan="3" id="tdAmountToBePay" class="gems_currency" style="text-align:left">'+
					'<input id="txtAmountToBePay" class="gems_currency" style="width:110px;text-align:right;" type="text" value="0">&nbsp;&nbsp;'+
					'<label class="btn btn-mini btn-inverse  btnColorBlack" id="PayId" onclick="getValidationData('+studentId+');">Pay</label>&nbsp;&nbsp;'+
					'<label class="btn btn-mini btn-inverse  btnColorBlack " onClick="resetAmount('+studentId+','+InstituteCourseId+');">Reset</label></td>'+
					'</tr></table>'+
					( jArray.length>2 ?'<br><input type="checkbox" class="" id="ckbPayFeesAmount" onclick="payFeeAmount()">&nbsp;&nbsp;<b>Do you want to Put Amount ?</b>'+
							'</br><input type="checkbox" class="" id="ckbPayExceedFees" onclick="payExceedFee()">&nbsp;&nbsp;<b>Please Select for Excess Fee ?</b>':'')+
					'<span id="idAdvancePayment" style="display:none"></br><input type="checkbox" class="" id="ckbPayAdvanceFees" onclick="payAdvanceFeeForHostel()">&nbsp;&nbsp;<b>Please Select for Advance Fee ?</b></span></div>'+

					'<br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="studentOfflinePaymentDetails">'+
					'<tr><th>Sr. No.</th><th></th><th>Fee Structure Name</th><th>Particulars</th><th class="gems_currency_label">Invoice Amount</th><th class="gems_currency_label">Amount In-process</th><th class="gems_currency_label">Payment Amount</th></tr>';
			if(jArray.length>0){
				for(var i=2;i<jArray.length;i++){
					var feeHeads = 'amtstud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "");
					var type='checkBox';
					boiler+='<tr class="trstudentFeeStructure">'+
							'<td style="text-align:right">'+(i-1)+'</td>';
					if(jArray[i]["unitPrice"]!="0.0"){
						boiler+='<td style="text-align:center" id="chk_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'">'+
								'<input type="checkbox" checked types="'+jArray[i]["academics"]+'" class="claAmts chks_'+jArray[i]["studentExceptionInvoiceId"]+'" '+
								' feeHead="chk_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" value="'+jArray[i]["studentExceptionInvoiceId"]+'" '+
								' id="'+jArray[i]["studentExceptionInvoiceId"]+'_'+jArray[i]["academics"]+'" onclick="calculateAmountsHostel(\''+type+'\','+jArray[i]["studentExceptionInvoiceId"]+',\''+feeHeads+'\',\''+studentId+'\','+InstituteCourseId+')"></td>';
					}else{
						boiler+='<td style="text-align:center"></td>';
					}
					boiler+='<td>'+jArray[i]["feeStructureName"]+'</td>'+
					'<td id="desc_'+jArray[i]["studentExceptionInvoiceId"]+'">'+jArray[i]["description"]+'</td>'+
							'<td class="gems_currency amts_'+jArray[i]["studentExceptionInvoiceId"]+' invAmt" id="amtsStud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" style="text-align:right">'+jArray[i]["unitPrice"]+'</td>'+
							'<td class="gems_currency amtInProcess" id="amtstud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" style="text-align:right"></td>'+
							'<td class="editamt paymentAmt" id="editamts_'+jArray[i]["studentExceptionInvoiceId"]+'" style="text-align:right"></td>'+
							'</tr>';
				}
				boiler+='<tr id="trPayExceedFees" style="display:none"><td colspan="3" style="text-align:right" class="gems_currency_label">Excess Fee Amount</td><td colspan="3" id="paymentExceed" class="gems_currency" style="text-align:right"><input id="txtPayExceedFees" class="gems_currency" style="width:90px;text-align:right;" onkeyup="calculateAmountAccess();" type="text"></td></tr>';
				boiler+='<tr><td colspan="4" style="text-align:right" class="gems_currency_label">Total</td><td id="invAmt" class="gems_currency"></td><td id="amtInProcess" class="gems_currency"></td><td id="paymentAmt" class="gems_currency"></td></tr>';
			}else{
				boiler+='<tr><td colspan="2">Data Not Found</td></tr>';
			}

			//Advance 
			boiler +='<br>'+
					'<br><table class="table table-bordered table-striped table-condensed" style="width:100%;display:none" id="tblStudentAdvancePayment">'+
					'<thead><tr><th>Sr. No.</th><th>Particulars</th><th class="gems_currency_label">Payment Amount</th></tr>'+
					'</thead><tbody>'+
					'<tr><td class="gems_integer">1</td><td>Advance payment</td>'+
					'<td id="tdAdvancePayment" class="gems_currency" style="text-align:right">'+
					'<input id="txtPayAdvanceFees" style="width:90px;text-align:right;" onkeyup="calculateAmountAdvanceForHostel();" type="text"></td></tr>'+
					'</tbody><tfoot><tr><td colspan="2" style="text-align:right" class="gems_currency_label">Total</td>'+
					'<td id="payAdvanceAmt" class="gems_currency"></td></tr></tfoot></table>';

			$('#studentHostelOfflinePaymentDetails').append(boiler);

			$('#commonDialogHeadermakeofflinePaymentHostel').html('Student Hostel Offline Payment Details');
			setTimeout(function(){
				$('.claAmts').trigger('onclick');
			},1000);
			$('.clsExceed').numeric();

			if(jArray.length>0 && jArray[1].length>0){
				for(var i=0;i<jArray[1].length;i++){
					var studId = jArray[1][i]["studId"];
					var feeHeads = jArray[1][i]["feeHeads"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "");
					var amount = jArray[1][i]["amount"]!=undefined && jArray[1][i]["amount"]!='' ? eval(jArray[1][i]["amount"]):0;;
					var amt = $('#amtsStud_'+feeHeads).text()!=undefined && $('#amtsStud_'+feeHeads).text()!='' ? eval($('#amtsStud_'+feeHeads).text()):0;
					$('#amtstud_'+feeHeads).text(amount);
					console.log(amt+':::'+amount);
					if((amt-amount)==0 || amt == 0){
						$('#chk_'+feeHeads).text('');
					}
				}
			}

			var invAmt = 0;
			$('.invAmt').each(function(){
				var tmp = $(this).text()!=undefined && $(this).text()!='' ? $(this).text() :'0';
				invAmt +=eval(tmp);
			});
			$('#invAmt').text(invAmt);

			var amtInProcess = 0;
			$('.amtInProcess').each(function(){
				var tmp = $(this).text()!=undefined && $(this).text()!='' ? $(this).text() :'0';
				amtInProcess +=eval(tmp);
			});
			$('#amtInProcess').text(amtInProcess);
			offlinePaymentMain(studentId,InstituteCourseId);
		},
		error:function(){
			jAlert("No Records","Error");
		}
	});
}

function getAllHostelFinancePolicy(studentId){
	
	let shorts = {
				policyId	:0,
				policyName  :1,
			};
	$.ajax({
		url:'getAllHostelFinancePolicy.json', 
		dataType:'json',
		data:{
			studentId:studentId
		},
		type:'GET',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jObj) {
			let jArray = jObj.data
			let boiler = '';
			if(!jObj.error) {
				boiler += '<option value="0">Select</option>';
				for(var i=0; i<jArray.length; i++){
					boiler += '<option value='+jArray[i][shorts.policyId]+'>'+jArray[i][shorts.policyName]+'</option>';
				}
				$('#hostelFinancePolicyId').html(boiler);
				convertComboToSearchable('#hostelFinancePolicyId');
			}
		}
	});
}

function offlinePaymentMain(studentId,institutecourseId){
	var boiler='<br><br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="">'+
	'<tr><th>NEFT/RTGS/IMPS<b style="color: red; font-size: 16px;">*</b></th><td><select id="neftregs" onchange="changepaymentMode('+institutecourseId+');">'+
	'<option value="DD">Demand Draft</option>'+
	'<option value="NEFT">NEFT</option>'+
	'<option value="RTGS">RTGS</option>'+
	'<option value="IMPS">IMPS</option>'+
	'<option value="Cash">Cash</option>'+
	'<option value="Concession">Concession</option>'+
	'<option value="Cheque">Cheque</option>'+
	'<option value="DistressFund">Distress Fund</option>'+
	'<option value="Card Payment">Card Payment</option>'+
	'<option value="BankChallan">Bank Challan</option>'+
	'<option value="hostelBuddy">Hostel Buddy</option>';
	if($('#customerHelper').val() =="GC_UNIVERSITY") {
        boiler+='<option value="Direct Credit">Direct Credit</option>';
    }
	boiler+='<option value="UPI">UPI</option>'+
	'<option value="Other">Other</option>'+
	'</td><th>DD Bank Name<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span></th><td id="bankDetailsTD"></td></tr>'+
	
	'<tr><th id="thbranch">Branch Name<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span></th><td><input type="text" id="branchName" class="clspaymentMode"></td>'+
	'<th id="thifsc">IFSC Code<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span></th><td><input type="text" id="ifsccode" class="clspaymentMode"></td></tr>'+
	'<tr><th>Transaction Date<b style="color: red; font-size: 16px;">*</b></span></th><td><input type="text" readonly id="paymentDate"><th id="thUTR">DD No.<b style="color: red; font-size: 16px;">*</b></th><td><input type="text" id="utrcode"></td>'+
	'<tr><th id="thBankName">Bank Name<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span></th><td><select id="banklist" onchange="" class="clspaymentModedis" ></select></td>'+
	'<th>Transaction Settlement Date<span class="clsmand TsdMand"><b style="color: red; font-size: 16px;">*</b></span></th><td><input type="text" readonly id="paymentSettelmentDate" class="clspaymentMode"></td></tr>'+
	'<tr><th id="thRemark">Desc/Remark<span class="clsmand"></span></th><td colspan="3" ><input id="txtBillRemark" type="text" value="-"></td></tr>'+
	'<tr class="cardpaymentMode" style="display:none"><td>Charges:<br>'+
	'<input type="radio" name="charges" id="male" value="Yes" onclick="checkConfiguration();" class="contactvalidator">Yes'+
	'<input type="radio" name="charges" value="No" id="female" onclick="checkConfiguration();" class="contactvalidator" >No</td>'+
	'<td class="againstCharges">Charges Agaist:<br><select id = "otherFeeAccountHeadcmb11"  style="width:100px" class="otherFeeAccountHead11" onchange = "" ></select></td>'+
	'<td class="typeOfCard">Card type:<br><select id = "otherFeeAccountHeadcmb12"  style="width:100px" class="otherFeeAccountHead11" onchange = "" >'+
	'<option value = "Debit" class="Debit">Debit Card</option><option value = "Credit" class="Credit">Credit Card</option></select></td>'+
	'<td>Percentage:<input type = "text" id = "Percentage" value="0" class="cardPercentage" onkeyUp="calculatecardpayments();" style="width:100px;text-align:right;" placeholder="Percent"><br><br>'+
	'Total Amounr:<input type = "text" id = "TotalAmoount"   style="width:100px;text-align:right;" placeholder="TotalAmoount"></td></tr>'+
	'<tr id="trBankChanges" style="display:none"><td colspan="4">'+
	'<input type="checkbox" id="isBankCharges" onclick="displayIsBankCharges();">&nbsp;&nbsp;&nbsp;<b>Select to bank charges included.</b></td></tr>'+
	
	'<tr id="trIsBankChanges" style="display:none"><th id="thBankCharge">Bank Charges<br>Account Head<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span></th>'+
	'<td><select id="bankChargelist"></select></td>'+
	'<th>Bank Charge Amount<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span></th>'+
	'<td><input type="text" id="bankChargeAmount" style="text-align:right"></td></tr>'+
	
	'<tr><td colspan="4" style="text-align:center"><label class="btn btn-mini btn-inverse  btnColorBlack" onClick="saveOflinePaymentDetailsHostel('+studentId+','+institutecourseId+');">Save</label>&nbsp;&nbsp;'+
	'<label class="btn btn-mini btn-inverse" data-dismiss="modal" aria-hidden="true">Cancel</label></td></tr>';
	$('#paydetailsofflineHostel').html(boiler);
	$('#commonDialogFootermakeofflinePaymentHostel').html('&nbsp;&nbsp;<label style="align:right" class="btn btn-mini btn-inverse" data-dismiss="modal" aria-hidden="true">Cancel</label>');
	$('.cardPercentage').numeric();
	$('#TotalAmoount').numeric();
	$('#bankChargeAmount').numeric();
	$('#paymentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
	$('#paymentSettelmentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
	//$('#ifsccode').attr('placeholder','Not Required');
	
	$('#paymentDate').datepicker({
		dateFormat : "M dd,yy",
		inline : true,
		changeMonth : true,
		changeYear : true,
		maxDate:new Date(),
		yearRange : "-40:+0",
		firstDay : 1,
	});

	$('#paymentSettelmentDate').datepicker({
		dateFormat : "M dd,yy",
		inline : true,
		changeMonth : true,
		changeYear : true,
		maxDate:new Date(),
		yearRange : "-40:+0",
		firstDay : 1,
	});
	getHostelBankNameList();
	getAccountHeadDetailsHostel(institutecourseId,'banklist','DD');
}

function getHostelBankNameList()
{
	$.ajax({
		url:'getBankDetailsList.json', 
		dataType:'json',
		type:'GET',
		async:false,
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function()
		{
			stopCommonAjaxSpinner();
		},
		success:function(jArray1)
		{
			var boiler = '';
			if(jArray1.length > 0 )
			{
				boiler += '<select id = "bankNamesss"  class="clspaymentModedis" onchange = "" >';
				boiler += '<option value="0">Select</option>';
				for(var i=0; i<jArray1.length; i++){
					var bnkNAme = jArray1[i]["bankName"];
							boiler += '<option value="' + bnkNAme + '">' + bnkNAme + '</option>';
				}
				$('#bankNamesss').html(boiler);
				convertComboToSearchable('#bankNamesss');
			}
			else{
				boiler +='<input type="text" id="bankNamesss" class="clspaymentMode" >';
			}
			$('#bankDetailsTD').html(boiler);
		}
	});
}

var global_acHeadByInstiCourseId=new Array();
function getAccountHeadDetailsHostel(institutecourseId,id,mode)
{
	if($('#financeOnBuilding').val()=="true"){
		let hostelFinacePolicyId = $('#hostelFinancePolicyId option:selected').val();
		$.ajax({
			url:'getActiveAccountListByUserAndRoleId.json',
			dataType:'json',
			data:{
				hostelFinacePolicyId : hostelFinacePolicyId
			},
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray){
				global_acHeadByInstiCourseId[institutecourseId] = jArray;
				bind_accHeadBoiler(jArray, id, mode);
			}
		});
	}else{
		if(global_acHeadByInstiCourseId[institutecourseId]==undefined){
		$.ajax({
			url:'getAccountHeadsforEvaluationParametersForHostel.json',
			data:{
				instituteCourseId:institutecourseId,
				paymentMode:mode
			},
			dataType:'json',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray){
				global_acHeadByInstiCourseId[institutecourseId] = jArray;
				bind_accHeadBoiler(jArray, id, mode);
			}
		});
	}else{
		bind_accHeadBoiler(global_acHeadByInstiCourseId[institutecourseId],id,mode);
	}
	}
}

function bind_accHeadBoiler(jArray,id,mode){
	var boiler = '<option value = "0">Select</option>';
	var boiler1= '<option value = "0">Select</option>';
	var boiler0= '<option value = "0">Select</option>';
	for(var i = 0 ; i < jArray.length ; i++){
		if(jArray[i]["accountFor"]=='AccountHead_Student_Miscellaneous' || jArray[i]["accountFor"]=='AccountHead_Fee_Head' || jArray[i]["accountFor"]=='AccountHead_Fee_Advance'  
				|| jArray[i]["accountFor"]=='AccountHead_Fee_Payable' ||  jArray[i]["accountFor"]=='AccountHead_Fees_Advance' 
				|| jArray[i]["accountFor"]=='AccountHead_Fee_Receivable' || jArray[i]["accountFor"]=='AccountHead_Scholarship' 
				|| jArray[i]["accountFor"]=='AccountHead_Fee_Hostel_Advance' || jArray[i]["accountFor"]=='AccountHead_Other'   )
			boiler += '<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
		if(jArray[i]["isBank"]=='true' || jArray[i]["isBank"]==true)
			boiler1 += '<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
		if(jArray[i]["isCash"]=='true' || jArray[i]["isCash"]==true)
			boiler0 += '<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
	}
	if(mode!=''&& mode!=undefined && mode=='Cash'){
		$('#'+id).html(boiler0);
	}else if(mode!=''&& mode!=undefined && (mode=='DistressFund' || mode=='hostelBuddy' || mode=='Concession' || mode=='Other'))
		$('#'+id).html(boiler);
	else
		$('#'+id).html(boiler1);
	
	$('#bankChargelist').html(boiler);
	convertComboToSearchable('#bankChargelist');
	convertComboToSearchable('#'+id);
}

function calculateAmountsHostel(type,studentExceptionInvoiceId,feeHeads,studentId,InstituteCourseId){
	var amt1 = $('#'+feeHeads).text()!=undefined && $('#'+feeHeads).text()!='' ? eval($('#'+feeHeads).text()):0;
	if($('.chks_'+studentExceptionInvoiceId).is(':checked')){
		var amt=eval($('.amts_'+studentExceptionInvoiceId).text()) - eval(amt1);
		$('#editamts_'+studentExceptionInvoiceId).html('<input type="text" id="txtUnitPriceid_'+studentExceptionInvoiceId+'" class="clsExceed gems_currency" style="width:90px;text-align:right;" onkeyup="calculateAmountsHostel();validationAmountHostel(\''+amt+'\',\''+studentExceptionInvoiceId+'\');" value="'+amt+'">');
	}else{
		var amt=eval($('.amts_'+studentExceptionInvoiceId).text()) - eval(amt1);
		$('#editamts_'+studentExceptionInvoiceId).html('');
	}
	var Amount=0.0;
	$('.claAmts:checked').each(function(){
		var studentExceptionInvoiceId=$(this).val();
		var feeHead=$(this).attr('feeHead');
		var amt1 = $('#'+feeHead).text()!=undefined && $('#'+feeHead).text()!='' ? eval($('#'+feeHead).text()):0;
		var amt=$('#txtUnitPriceid_'+studentExceptionInvoiceId).val()!=undefined || $('#txtUnitPriceid_'+studentExceptionInvoiceId).val()!='' ? eval($('#txtUnitPriceid_'+studentExceptionInvoiceId).val()):0;
		amt = amt - amt1;
		if(amt>0){
			Amount+=eval(amt);
		}
		else{
			flag=false;	
		}
	});
	$('#paymentAmt').text(Amount);
	$('.cardPercentage').trigger('keyup');
	applyGemsPlugins();
}
function displayIsBankCharges(){
	if($('#isBankCharges').is(":checked")){
		$('#trIsBankChanges').show();
	}else{
		$('#trIsBankChanges').hide();
	}
}
function calculatecardpayments(){
	var value = $('input[name = "charges"]:checked').val();
	if(value==''){
		jAlert('Please select charges');
		return false;
	}
	var billAmount=$('#paymentAmt').text();
	
	if(billAmount=='' || billAmount==undefined  || billAmount==0 || billAmount=='0'){
		jAlert('Please enter bill amount to calculate charges amount');
		return false
	}
	var per=$('.cardPercentage').val();
	if(eval(per)>100 || per.includes('-')){
		jAlert('Please Enter Valid Percentage');
		$('.cardPercentage').val('');
		return false
	}
	var totabillAmountWithCharges=(eval(billAmount)*eval(per)/100);
	$('#TotalAmoount').val(totabillAmountWithCharges.toFixed(2));
}
function checkConfiguration(){
	var value = $('input[name = "charges"]:checked').val();
    if(value!='Yes'){
    	$('#Percentage').attr('readonly',true);
    	$('#TotalAmoount').attr('readonly',true);
    	$('#Percentage').val('0');
    	calculatecardpayments();
    	//$('#otherFeeAccountHeadcmb11').attr('disabled',true);
    	//$('#otherFeeAccountHeadcmb12').attr('disabled',true);
    }else{
    	$('#Percentage').attr('readonly',false);
    	$('#TotalAmoount').attr('readonly',false);
    	//$('#otherFeeAccountHeadcmb11').attr('disabled',false);
    	//$('#otherFeeAccountHeadcmb12').attr('disabled',false);
    }
}
function changepaymentMode(institutecourseId){
	var paymentMode=$('#neftregs').val();
	$('.cardpaymentMode').hide();
	if(paymentMode=='Cash'){
		$('.clspaymentMode').attr('readonly',true);
		$('.clspaymentMode').attr('placeholder','Not Required');
		$('#thBankName').html('Cash Account Head');
		$('.clspaymentModedis').attr('disabled',true);
		$('.clsmand').hide();
		$('#paymentSettelmentDate').attr('placeholder','Not Required');
		$('#paymentSettelmentDate').val('');
		$('#paymentSettelmentDate').attr('disabled',true);
		$('#utrcode').attr('disabled',true);
		$('#utrcode').attr('placeholder','Not Required');
		$('#thUTR').html('UTR Code');
		$('#paymentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		getAccountHeadDetailsHostel(institutecourseId,'banklist',paymentMode);
		$('#banklist').attr('disabled',false);
	}
	else if(paymentMode=='DistressFund' || paymentMode=='Concession'|| paymentMode=='hostelBuddy' || paymentMode=='Other' || paymentMode=='Direct Credit'){
		$('.clspaymentMode').attr('readonly',true);
		$('.clspaymentMode').attr('placeholder','Not Required');
		if(paymentMode=='hostelBuddy'){
			$('#thBankName').html('Hostel Boddy <br>Account Head');
			$('.clspaymentModedis').attr('disabled',false);
		}else if(paymentMode=='DistressFund'){
			$('#thBankName').html('Distress Fund <br>Account Head');
			$('.clspaymentModedis').attr('disabled',false);
		}else if(paymentMode=='Concession'){
			$('#thBankName').html('Concession <br>Account Head');
			$('.clspaymentModedis').attr('disabled',false);
		}else if(paymentMode=='Other'){
			$('#thBankName').html('Other <br>Account Head');
			$('.clspaymentModedis').attr('disabled',false);
		}else if(paymentMode=='Direct Credit'){
			$('#thBankName').html('Direct Credit <br>Account Head');
			$('.clspaymentModedis').attr('disabled',false);
		}else{
			$('#thBankName').html('Bank Name');
			$('.clspaymentModedis').attr('disabled',true);
		}
		$('.clsmand').hide();
		$('#paymentSettelmentDate').attr('placeholder','Not Required');
		$('#paymentSettelmentDate').val('');
		$('#paymentSettelmentDate').attr('disabled',true);
		$('#utrcode').attr('disabled',true);
		$('#utrcode').attr('placeholder','Not Required');
		$('#thUTR').html('UTR Code');
		$('#paymentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		getAccountHeadDetailsHostel(institutecourseId,'banklist',paymentMode);
	}else if(paymentMode=='Card Payment'){
		$('#thBankName').html('Bank Name');
		$('.clspaymentMode').attr('readonly',true);
		$('.clspaymentMode').attr('placeholder','Not Required');
		$('.clsmand').hide();
		
		$('.clspaymentModedis').attr('disabled',false);
		$('.cardpaymentMode').show();
		$('#paymentSettelmentDate').attr('disabled',true);
		$('#paymentSettelmentDate').attr('placeholder','Not Required');
		
		$('#utrcode').attr('disabled',false);
		$('#utrcode').attr('placeholder','');
		$('#thUTR').html('UTR Code <b style="color: red; font-size: 16px;">*</b>');
		$('#paymentSettelmentDate').val('');
		getAccountHeadDetailsHostel(institutecourseId,'otherFeeAccountHeadcmb11','Concession');
		getAccountHeadDetailsHostel(institutecourseId,'banklist',paymentMode);
	}else if(paymentMode=='BankChallan' || paymentMode=='DD' || paymentMode=='Cheque'){
		$('#thBankName').html('Bank Name<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span>');
		$('.clspaymentMode').attr('readonly',false);
		$('.clspaymentMode').attr('placeholder','');
		$('.clsmand').show();
		
		$('#paymentSettelmentDate').attr('disabled',false);
		$('#paymentSettelmentDate').attr('placeholder','');
		
		$('#utrcode').attr('disabled',false);
		$('#utrcode').attr('placeholder','');
		if(paymentMode=='BankChallan')
			$('#thUTR').html('Bank Challan No.<b style="color: red; font-size: 16px;">*</b>');
		else if(paymentMode=='DD')
			$('#thUTR').html('DD No.<b style="color: red; font-size: 16px;">*</b>');
		else
			$('#thUTR').html('Cheque No.<b style="color: red; font-size: 16px;">*</b>');
		$('.clspaymentModedis').attr('disabled',false);
		$('.clspaymentModedis').attr('placeholder','');
		$('#paymentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		$('#paymentSettelmentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		$('#paymentSettelmentDate').attr('disabled',true);
		$('#thifsc').html('IFSC Code');
		$('#ifsccode').attr('placeholder','Not Required');
	//	$('#branchName').attr('placeholder','Not Required');//banklist
		getAccountHeadDetailsHostel(institutecourseId,'banklist',paymentMode);
	}else if(paymentMode=='IMPS' ||paymentMode=='RTGS'||paymentMode=='NEFT'){
		$('.clspaymentMode').attr('readonly',false);
		$('.clspaymentMode').attr('placeholder','');
		$('.clsmand').show();
		$('#thBankName').html('Bank Name<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span>');
		$('#paymentSettelmentDate').attr('readonly',true);
		$('#paymentSettelmentDate').attr('placeholder','');
		$('#paymentDate').val('');
		$('#utrcode').attr('disabled',false);
		$('#utrcode').attr('placeholder','');
		
		$('.clspaymentModedis').attr('disabled',false);
		$('.clspaymentModedis').attr('placeholder','');
		$('#thUTR').html('UTR Code<b style="color: red; font-size: 16px;">*</b>');
		$('#paymentSettelmentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		$('#paymentSettelmentDate').attr('disabled',false);
		$('#thifsc').html('IFSC Code<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span>');
		//$('#thbranch').html('Branch Name<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span>');
		getAccountHeadDetailsHostel(institutecourseId,'banklist',paymentMode);
	}else if(paymentMode=='UPI'){
	
		$('.clsmand').hide();
   		$('.TsdMand').show();
		$('#bankNamesss').attr('readonly',true);
		$('#bankNamesss').attr('placeholder','Not Required');
		
		$('#thbranch').html('Branch Name');
		$('#branchName').attr('readonly',true);
		$('#branchName').attr('placeholder','Not Required');
		
		$('#thifsc').html('IFSC Code');
		$('#ifsccode').attr('readonly',true);
		$('#ifsccode').attr('placeholder','Not Required');
		
		$('#ifsccode').attr('readonly',true);
		$('#ifsccode').attr('placeholder','Not Required');
		
		$('#thUTR').html('UTR Details<b style="color: red; font-size: 16px;">*</b>');
		$('#utrcode').attr('disabled',false);
		$('#utrcode').attr('placeholder','');
		
		$('#thBankName').html('Bank Name<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span>');
		
		$('#paymentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		$('#paymentSettelmentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		$('#paymentSettelmentDate').attr('disabled',false);
		getAccountHeadDetailsHostel(institutecourseId,'banklist',paymentMode);
		
	}
	else{
		getAccountHeadDetailsa(institutecourseId,'banklist',paymentMode);
		$('.clspaymentMode').attr('readonly',false);
		$('.clspaymentMode').attr('placeholder','');
		$('.clsmand').show();
		
		$('#paymentSettelmentDate').attr('disabled',false);
		$('#paymentSettelmentDate').attr('placeholder','');
		
		$('#utrcode').attr('disabled',false);
		$('#utrcode').attr('placeholder','');
		
		$('.clspaymentModedis').attr('disabled',false);
		$('.clspaymentModedis').attr('placeholder','');
		$('#thUTR').html('UTR Code<b style="color: red; font-size: 16px;">*</b>');
	}
	
	if(paymentMode=='IMPS' ||paymentMode=='RTGS'||paymentMode=='NEFT'){
		$('#trBankChanges').show();
	}else{
		$('#trBankChanges').hide();
	}
}

function validationAmountHostel(feeHeads,studentExceptionInvoiceId){
	calculateAmountsHostel();
	var amt1 =($('.amts_'+studentExceptionInvoiceId).text()!=null || $('.amts_'+studentExceptionInvoiceId).text()!='')?$('.amts_'+studentExceptionInvoiceId).text():0;
	var amt0=$('#txtUnitPriceid_'+studentExceptionInvoiceId).val();
	if(!amt0.includes("-")){
		if(eval(amt0)>eval(amt1)){
			jAlert("Entered Payment Amount is greater Than Invoice Amount");
			$('#txtUnitPriceid_'+studentExceptionInvoiceId).val(amt1);
			return false;
		};
	}else{
		jAlert("Please Enter valid Payment Amount");
		$('#txtUnitPriceid_'+studentExceptionInvoiceId).val(amt1);
		return false;
	}
}

function saveOflinePaymentDetailsHostel(studentId,institutecourseId){
	var flagForHostel="Hostel";
	var courseType = "Hostel";
	var lblCustomerHelper =$('#customerHelper').val();
	var dataString = "";
	var misDataString ="";
	var totalAmount =0;
	var ExcessFee=$('#txtPayExceedFees').val()!=null||$('#txtPayExceedFees').val()!=''?$('#txtPayExceedFees').val():0;
	var advanceAmount=0;
	if($('#ckbPayExceedFees').is(":checked")){
		if(ExcessFee==0 ||ExcessFee==''){
			jAlert("Please enter Excess Fee Amount ");
			return;
		}
	}
	
	if($('#ckbPayAdvanceFees').is(":checked")){
		advanceAmount=eval(($('#txtPayAdvanceFees').val()!=''||$('#txtPayAdvanceFees').val()!=null)?$('#txtPayAdvanceFees').val():0);
		if(advanceAmount<=0){
			jAlert("Please Enter Advance Amount");
			return false;
		}
	}else {
		$('.claAmts:checked').each(function(){
			var studentExceptionInvoiceId = $(this).val();
			var amount =$('#txtUnitPriceid_'+studentExceptionInvoiceId).val();
			var description = $('#desc_'+studentExceptionInvoiceId).html();
			var type = $(this).attr('types');
			totalAmount+=eval(amount);

			if(type=="Hostel")
				dataString += studentExceptionInvoiceId+"@"+amount+"@"+description+"~";
			else
				misDataString += studentExceptionInvoiceId+"@"+amount+"@"+description+"~";
		});
		totalAmount=eval(totalAmount)+eval(ExcessFee);
		if(misDataString.length>1)
			misDataString=misDataString.substring(0, misDataString.length-1);

		if(dataString.length>1)
			dataString=dataString.substring(0, dataString.length-1);
	}
	var type=$('#neftregs option:selected').val();
	if(type==''){
		jAlert("Please select NEFT/RTGS/IMPS");
		return;
	}
	var paymentMode=$('#neftregs').val();
	var bankName=$('#bankNamesss').val();
	var branchName=$('#branchName').val();
	var ifsccode=$('#ifsccode').val();
	var utrcode=$('#utrcode').val();
	var accountHeadId=$('#banklist option:selected').val();
	var paymentSettelmentDate=$('#paymentSettelmentDate').val();
	var paymentDate=$('#paymentDate').val();
	var remark=$('#txtBillRemark').val();
		
	if(paymentDate==""){
		jAlert("Please Select Payment Date");
		return;
	}
	if(paymentMode !='Cash' && paymentMode!='Concession'&& paymentMode!='Other' &&  paymentMode !='DistressFund' && paymentMode !='Card Payment' &&  paymentMode !='hostelBuddy' &&  paymentMode !='UPI' && paymentMode !='Direct Credit'){
		if(bankName==""){
			jAlert("Please Enter Bank Name");
			return false;
		}

		if(branchName==""){
			jAlert("Please Enter Branch Name");
			return false;
		}

		if(paymentMode =='NEFT' || paymentMode =='RTGS' || paymentMode =='IMPS'){
			if(ifsccode==""){
				jAlert("Please Enter IFSC Code");
				return false;
			}
		}
		if(utrcode=="" || utrcode==0 || utrcode==undefined){
			if(paymentMode=='Cheque')
				jAlert("Please Enter Cheque No");
			else if(paymentMode=='BankChallan')
				jAlert("Please Enter Bank Challan No.");
			else if(paymentMode=='DD')
				jAlert("Please Enter DD No.");
			else if(paymentMode=='UPI')
				jAlert("Please Enter UTR Details");
			else 
				jAlert("Please Enter UTR Code");
			return false;
		}
		if(paymentSettelmentDate==""){
			jAlert("Please select Payment Settlement Date");
			return false;
		}
		if(accountHeadId=="" || accountHeadId==0 || accountHeadId==undefined){
			jAlert("Please Select bank head");
			return false;
		} 
	}
	if(paymentMode =='Concession' ||paymentMode =='DistressFund'|| paymentMode =='hostelBuddy' || paymentMode =='Cash'|| paymentMode=='Other' || paymentMode=='Direct Credit'){
		if(accountHeadId=="" || accountHeadId==0 || accountHeadId==undefined){
			jAlert("Please Select "+paymentMode+" Account Head");
			return false;
		} 
	}
	
	if(paymentMode =='UPI'){
		if(utrcode=="" || utrcode==0 || utrcode==undefined){
			jAlert("Please enter UTR Details");
			return false;
		}
		if(paymentSettelmentDate==""){
			jAlert("Please select Transaction Settlement Date");
			return false;
		}
		if(accountHeadId=="" || accountHeadId==0 || accountHeadId==undefined){
			jAlert("Please Select Bank Name");
			return false;
		} 
	}
	var Taxdetails="";
	if(paymentMode =='Card Payment'){
		var value = $('input[name = "charges"]:checked').val();
		if(value=='' || value==undefined || value=='0' || value==0){
			jAlert('Please Select Charges Mode');
			flag=false;
			return false;
		}
		var taxpercentage=$('#Percentage').val();
		var accno=$('#otherFeeAccountHeadcmb11 option:selected').val();
		var taxamount=$('#TotalAmoount').val();
		if(value=='Yes'){
			if(accno=='' || accno==undefined || accno=='0' || accno==0){
				jAlert('Please Select Charges Agaist');
				flag=false;
				return false;
			}

			if(taxpercentage=='' || taxpercentage==undefined || taxpercentage=='0' || taxpercentage==0){
				jAlert('Please enter Percentage');
				flag=false;
				return false;
			}
			if(taxamount=='' || taxamount==undefined || taxamount=='0' || taxamount==0){
				jAlert('Please Select Total Amount');
				flag=false;
				return false;
			}
		}
		var cardtype=$('#otherFeeAccountHeadcmb12 option:selected').val();
		if(cardtype=='' || cardtype==undefined || cardtype=='0' || cardtype==0){
			jAlert('Please Select Card Type');
			flag=false;
			return false;
		}
		if(accountHeadId=="" || accountHeadId==0 || accountHeadId==undefined){
			jAlert("Please Select bank head");
			return false;
		} 
		Taxdetails+=accno+'~'+cardtype+'~'+taxpercentage+'~'+taxamount;
	}
	
	var bankChargeAmount=0;var bankChargeAccountHeadId=0;
	if($('#isBankCharges').is(":checked")){
		bankChargeAmount=$('#bankChargeAmount').val();
		if(bankChargeAmount==0 || bankChargeAmount=='0'){
			jAlert("Please Select bank Charge Account Head");
			return false;
		}
		bankChargeAccountHeadId=$('#bankChargelist option:selected').val();
		if(bankChargeAccountHeadId==0 || bankChargeAccountHeadId=='0'){
			jAlert("Please Select bank Charge Amount");
			return false;
		}
	}
		
	if($('#ckbPayAdvanceFees').is(":checked")){
		var totalAmount=advanceAmount;
		$.ajax({      
			url:'saveStudentAdvancepaymentOffline.json',
			data:{
				type:type,
				branchName:branchName,
				ifsccode:ifsccode,
				utrcode:utrcode,
				paymentDate:paymentDate,
				bankName:bankName,
				Taxdetails:Taxdetails,
				studentId:studentId,
				accountHeadId:accountHeadId,
				institutecourseId:institutecourseId,
				totalAmount:totalAmount,
				paymentSettelmentDate:paymentSettelmentDate,
				dataString:dataString.toString(),
				misDataString:misDataString.toString(),
				ExcessFee:ExcessFee,
				bankChargeAmount:bankChargeAmount,
				bankChargeAccountHeadId:bankChargeAccountHeadId,
				remark:remark,
				advanceAmount:advanceAmount,
				flagForHostel:flagForHostel
			},
			dataType:'JSON',
			async:false,
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray){
				if(jArray[0].Error=='true' || jArray[0].Error==true){
					jAlert(jArray[0].Description);
					return false;	
				}
				else if(jArray[0].Error=='false' || jArray[0].Error==false){
					
					$('#commonDialogmakeofflinePaymentHostel').modal('hide');
					var studentBatchId=$('#txtStudentSearchBarInvoiceHostel').attr('studentBatchId');
					// getStudentFeeDueReportOverallByStudentBatchId1(studentId);
					getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(studentBatchId);
					//$('#commonDialogmakeofflinePayment').modal('hide');
					jAlert("Record saved successfully...!!");
					setTimeout(function(){
						if(lblCustomerHelper=="WESCHOOL"){
							var flag='TRUE', printType="Original", invoiceType='OPEN';
							window.location.replace('printPaymentWiseStudentReceiptPDFforWeschool.json?studentBillId='+jArray[0].studentBillId+'&hasStudentCopy='+flag+'&hasOfficeCopy='+flag+'&invoiceType='+invoiceType+'&printLogo='+flag+'&printType='+printType);
						}else if(lblCustomerHelper=="REVA_UNIVERSITY"){
							window.location.replace('printStudentFeeReceiptReceiptPDFforREVA.json?studentBillId='+jArray[0].studentBillId+'&printType="Original"');
						}
					},1500);
				}else{
					jAlert("Record not saved successfully...!!");
				}
			},
			error:function(){
				jAlert("No Records","Error");
			}
		});
	}else {
		$.ajax({      
			url:'saveOfflinePaymentDetailsfromAdminSideHostel.json',
			data:{
				type:type,
				branchName:branchName,
				ifsccode:ifsccode,
				utrcode:utrcode,
				paymentDate:paymentDate,
				bankName:bankName,
				Taxdetails:Taxdetails,
				studentId:studentId,
				accountHeadId:accountHeadId,
				institutecourseId:institutecourseId,
				totalAmount:totalAmount,
				paymentSettelmentDate:paymentSettelmentDate,
				dataString:dataString.toString(),
				misDataString:misDataString.toString(),
				ExcessFee:ExcessFee,
				bankChargeAmount:bankChargeAmount,
				bankChargeAccountHeadId:bankChargeAccountHeadId,
				remark:remark,
				flagForHostel:flagForHostel,
				courseType:courseType
			},
			dataType:'JSON',
			async:false,
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray){
				if(jArray[0].Error=='true' || jArray[0].Error==true){
					jAlert(jArray[0].Description);
					return false;	
				}
				else if(jArray[0].Error=='false' || jArray[0].Error==false){
					$('#commonDialogmakeofflinePaymentHostel').modal('hide');
					var studentBatchId=$('#txtStudentSearchBarInvoiceHostel').attr('studentBatchId');
					getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(studentBatchId);
					jAlert("Record saved successfully...!!"+studentBatchId);
				}else{
					jAlert("Record not saved successfully...!!");
				}
			},
			error:function(){
				jAlert("No Records","Error");
			}
		});
	}
}

/*****************************Hostel FEE Invoice Adjustment Entry ********************/
/* ajit and Vaibhav
Hostel FEE Invoice Provision to Add Adjustment Entry adn Refund Entry
Date-17th march 2022*/

var glob_StudArray=new Array();
 var otheramt=0.0;
 function MakePaymentOfflineHostel(studentId,InstituteCourseId,type,otheramount,accountHeadId,accountname,studentFeeInvoiceId){
	 var types=type!=undefined?type:'Adjustment';
	 otheramount=otheramount!=undefined?otheramount:0.0;
	 var financePolicyId=$('#cmbFinancePolicy').val()!=undefined?$('#cmbFinancePolicy').val():0;
	 $.ajax({      
		 url:'getStudentAdjustmentEntryHostel.json',
		 data:{studentId:studentId,financePolicyId:financePolicyId},
		 dataType:'json',
		 async:false,
		 beforeSend: function() {
			 startCommonAjaxSpinner();
		 },
		 complete: function() {
			 stopCommonAjaxSpinner();
		 },
		 success:function(jArray){
			 glob_StudArray=jArray[1];
			 $('#cmbPolicy').data('accountArray',jArray[5]);
			 $('#cmbFinancePolicy').data('accountArray',jArray[5]);
			 MakePaymentOfflineEntryHostel(studentId,InstituteCourseId,studentFeeInvoiceId,0,types,otheramount,accountHeadId,accountname);
			 console.log(jArray);
		 },
		 error:function(){
			 jAlert("No Records","Error");
		 }
	 });
 }
 function MakePaymentOfflineEntryHostel(studentId,InstituteCourseId,studentFeeInvoice,cnt,types,otheramount,accountHeadId,accountname){
		$('#commonDialogHeadermakeofflinePaymentHostel').html('');
		$('#commonDialogmakeMakePaymentOfflineHostel').modal({
			keyboard: false,
		}).css({
			width: '1000px',
			'margin-left': function () {
				return -($(this).width() / 2);
			}
		});
		
		$('#chkAgreeTermsAcademicBMLoffline').attr('checked',false);
		$.ajax({      
			url:'getStudentPaymentDetailsHostel.json',
			data:{studentId:studentId},
			dataType:'json',
			async:false,
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray){
				var boiler ='<br><br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="">'+
				'<tr><th>Sr. No.</th><th>UTR Code</th><th>Adjustment Head</th><th>IFSC No</th><th>Type</th><th>Payment Date</th><th>Settled Voucher No</th><th>Particulars</th><th>Action</th></tr>';
				
				if(jArray.length>0 && jArray[0].length>0){
					for(var i=0;i<jArray[0].length;i++){
						boiler+='<tr class="trstudentFeeStructure">'+
						'<td style="text-align:right">'+(i+1)+'</td>'+
						'<td>'+jArray[0][i]["utrCode"]+'</td>'+
						'<td>'+jArray[0][i]["bankName"]+'</td>'+
						'<td>'+jArray[0][i]["ifscCode"]+'</td>'+
						'<td>'+jArray[0][i]["type"]+'</td>'+
						'<td>'+jArray[0][i]["paymentDate"]+'</td>'+
						'<td>'+jArray[0][i]["settledVoucherNo"]+'</td>'+
						'<td>'+jArray[0][i]["feeHeads"]+'</td>'+
						'<td>';
				
						if(jArray[0][i]["settledVoucherNo"]==''){
							boiler+='<a style="cursor:pointer;" onClick="deleteOfflineStudentPaymentEntry(\''+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'\','+studentId+','+InstituteCourseId+',\''+type+'\',\''+otheramount+'\','+accountHeadId+',\''+accountname+'\','+studentFeeInvoiceId+');" '+
							'id="linkDelete_'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" onlineTransactionPaymentSplitDetailsId="'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" title="Delete"><i class="fa fa-trash-o fa-1x"></i>&nbsp;</a>&nbsp;&nbsp;';
							if(jArray[0][i]["isPutForFinance"]!='Yes'){
								boiler+='<a style="cursor:pointer;" onlineTransactionPaymentSplitDetailsId="'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" id="linkFinanceApproval_'+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'" onClick="putForFinanceOfflineStudentPaymentEntry(\''+jArray[0][i]["onlineTransactionPaymentSplitDetailsId"]+'\','+studentId+');" title="Put for Finance"><i class="fa fa-share-square-o fa-1x"></i>&nbsp;</a>';
							}else{
								boiler +='<label>Sent to Finance Authority</label>';
							}
						}else{
							boiler+='<label>Accepted by Finance Authority</label>';
						}
						boiler+='</td>'+
						'</tr>';
					}

				}else{
					boiler+='<tr><td colspan="2">Data Not Found</td></tr>';
				}
				boiler+='</table>';
				
				$('#AllStudentPaymentDetails123Hostel').html(boiler);
				var boiler='<br>';
				if(types=='Adjustment')
					boiler+='<div> <span  style="color: red; font-size: 12px;">To adjust amount for Rs <span id="tramts" class="">0.00</span></span></div><br><div class="span5" id="transactiondetls"></div>';
				else
					boiler+='<div> <span  style="color: red; font-size: 12px;">Deposit To adjust amount for Rs <span id="deposittramts" class="">'+otheramount+'</span></span></div><br><div class="span5" id="transactiondetls"></div>';
	
				
					boiler+='<br><br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="studentOfflinePaymentDetails">'+
				'<tr><th>Sr. No.</th><th></th><th>Particulars</th><th class="gems_currency_label">Invoice Amount</th><th class="gems_currency_label">Amount In-process</th><th class="gems_currency_label">Payment Amount</th></tr>';
				if(jArray.length>0){
					for(var i=2;i<jArray.length;i++){
						var feeHeads = 'amtstud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "");
	                    var type='checkBox';
						boiler+='<tr class="trstudentFeeStructure">'+
						'<td style="text-align:right">'+(i-1)+'</td>';
						if(jArray[i]["unitPrice"]!="0.0"){
							boiler+='<td style="text-align:center" id="chk1_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'">'+
							'<input type="checkbox"  types="'+jArray[i]["academics"]+'" class="claAmts1 chks1_'+jArray[i]["studentExceptionInvoiceId"]+'" studentFeeInvoiceId="'+jArray[i]["studentFeeInvoiceId"]+'"'+
							' feeHead="chk1_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" value="'+jArray[i]["studentExceptionInvoiceId"]+'" '+
							' id="'+jArray[i]["studentExceptionInvoiceId"]+'_'+jArray[i]["academics"]+'" onclick="calculateAmountsHostelnew(\''+type+'\','+jArray[i]["studentExceptionInvoiceId"]+',\''+feeHeads+'\',\''+studentId+'\','+InstituteCourseId+',\''+types+'\')"></td>';
						}else{
							boiler+='<td style="text-align:center"></td>';
						}
						EnrollmentNo=jArray[i]["studentuniqueId"]!=undefined && jArray[i]["studentuniqueId"]!='-'?jArray[i]["studentuniqueId"]:jArray[i]["studentuniqueNo"];
						boiler+='<td id="desc_'+jArray[i]["studentExceptionInvoiceId"]+'">'+jArray[i]["description"]+'</td>'+
						'<td class="gems_currency amts1_'+jArray[i]["studentExceptionInvoiceId"]+' invAmt1" id="amtsStud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" style="text-align:right">'+jArray[i]["unitPrice"]+'</td>'+
						'<td class="gems_currency amtInProcess1" id="amtstud_'+jArray[i]["description"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "")+'" style="text-align:right"></td>'+
						'<td class="editamt paymentAmt1" id="editamts1_'+jArray[i]["studentExceptionInvoiceId"]+'" style="text-align:right"></td>'+
						'</tr>';
					}
				boiler+='<tr><td colspan="3" style="text-align:right" class="gems_currency_label">Total</td><td id="invAmt1" class="gems_currency"></td><td id="amtInProcess1" class="gems_currency"></td><td id="paymentAmt1" class="gems_currency"></td></tr>';
				}else{
					boiler+='<tr><td colspan="2">Data Not Found</td></tr>';
				}
			
				$('#AllStudentPaymentDetails123Hostel').append(boiler);
				$('.clsExceed').numeric();

				if(glob_StudArray[cnt]!=undefined){
					var dataoftrans=`<table class="table table-bordered "><tr><th>Sr.No</th><th>Account Head</th><th>Amount</th>`;
					var studName=glob_StudArray[cnt].studName;
					var headArray=glob_StudArray[cnt].headArray;
					var studentPayable=glob_StudArray[cnt].studentPayable;
					$('#commonDialogBodymakePaymentOfflineHostel').html('Adjustment Entry for Student Name:'+studName);
					var s=1;
					for(var j in headArray){
						const {universeName,amt} = headArray[j];
						 var universeNames=universeName.replace(/ /g,'').replace(/[^a-z0-9\s]/gi, '_');

						if(amt>0)
							dataoftrans+=`<tr><td>${s++}</td><td>${universeName}</td><td class="clsof_${universeNames}">${amt}</td></tr>`;
					}
					if(studentPayable>0)
						dataoftrans+=`<tr><td>${s++}</td><td>Student Payable</td><td class="gems_currency clsof_StudentPayable">${studentPayable}</td></tr>`;

					if(types=='Adjustment')
						$('#transactiondetls').html(dataoftrans);
				}else{
					var amt= $('#studentPayable123').text(); //$('.payable_'+studentFeeInvoice).text()!=undefined?$('.payable_'+studentFeeInvoice).text():0;
					$('#tramts').html(amt);
				}
				
				$('.clspaymentModedis').trigger('change');
				if(jArray.length>0 && jArray[1].length>0){
					for(var i=0;i<jArray[1].length;i++){
						var feeHeads = jArray[1][i]["feeHeads"].replace(/\s+/g, '').replace(/[^a-zA-Z ]/g, "");
						var amount = jArray[1][i]["amount"]!=undefined && jArray[1][i]["amount"]!='' ? eval(jArray[1][i]["amount"]):0;;
						var amt = $('#amtsStud_'+feeHeads).text()!=undefined && $('#amtsStud_'+feeHeads).text()!='' ? eval($('#amtsStud_'+feeHeads).text()):0;
						$('#amtstud_'+feeHeads).text(amount);
						console.log(amt+':::'+amount);
						if((amt-amount)==0 || amt == 0){
							$('#chk1_'+feeHeads).text('');
						}
					}
				}
				
				var invAmt1 = 0;
				$('.invAmt1').each(function(){
					var tmp = $(this).text()!=undefined && $(this).text()!='' ? $(this).text() :'0';
					invAmt1 +=eval(tmp);
				});
				$('#invAmt1').text(invAmt1);
				
				var amtInProcess = 0;
				$('.amtInProcess1').each(function(){
					var tmp = $(this).text()!=undefined && $(this).text()!='' ? $(this).text() :'0';
					amtInProcess +=eval(tmp);
				});
				$('#amtInProcess1').text(amtInProcess);
			},
			error:function(){
				jAlert("No Records","Error");
			}
		});
		ProccedHostelToPayforBMLofflinepmt(studentId,InstituteCourseId,studentFeeInvoice,cnt,types,accountHeadId,accountname);
	}
	function ProccedHostelToPayforBMLofflinepmt(studentId1,institutecourseId1,studentFeeInvoice1,cnt,type,accountHeadId,accountname){
		
		
		if(glob_StudArray[cnt]!=undefined){
			 studName=glob_StudArray[cnt].studName;
			 headArray=glob_StudArray[cnt].headArray;
		}
		var boiler='<table class="table table-bordered table-striped table-condensed" style="width:100%;" id="">'+
		'<tr><th>NEFT/RTGS/IMPS<b style="color: red; font-size: 16px;">*</b></th><td><select id="neftregs" onchange="changepaymentMode('+institutecourseId1+');">'+
		
		'<option value="'+type+'">'+type+'</option>'+
		'<option value="select">select</option>'+
		
		'<th>Transaction Date<b style="color: red; font-size: 16px;">*</b></span></th><td><input type="text" readonly id="paymentDatenew">'+
		'<tr><th id="thBankName">Adjustment Head<span class="clsmand"><b style="color: red; font-size: 16px;">*</b></span></th><td><select id="banklist1" onchange="getamtsHostel('+studentFeeInvoice1+');" class="clspaymentModedis" disabled><option value="0">Select</option><option:selected value="-1">Student Payable</option></select></td>'+

		'<tr class="cardpaymentMode" style="display:none"><td>Charges:<br>'+
		'<input type="radio" name="charges" id="male" value="Yes" onclick="checkConfiguration();" class="contactvalidator">Yes'+
		'<input type="radio" name="charges" value="No" id="female" onclick="checkConfiguration();" class="contactvalidator" >No</td>'+
		'<td class="againstCharges">Charges Agaist:<br><select id = "otherFeeAccountHeadcmb11"  style="width:100px" class="otherFeeAccountHead11" onchange = "" ></select></td>'+
		'<td class="typeOfCard">Card type:<br><select id = "otherFeeAccountHeadcmb12"  style="width:100px" class="otherFeeAccountHead11" onchange ="" >'+
		'<option value = "Debit" class="Debit">Debit Card</option><option value = "Credit" class="Credit">Credit Card</option></select></td>'+
		'<td>Percentage:<input type = "text" id = "Percentage" value="0" class="cardPercentage" onkeyUp="calculatecardpaymentsHostelnew();" style="width:100px;text-align:right;" placeholder="Percent"><br><br>'+
		'Total Amounr:<input type = "text" id = "TotalAmoount"   style="width:100px;text-align:right;" placeholder="TotalAmoount"></td></tr>'+
		'<tr><td colspan="4" ></td></tr>';

		$('#AllStudentPaymentDetails123Hostel').append(boiler);
		$('#commonDialogFootermakePaymentOfflineHostel').html('<label class="btn btn-mini btn-inverse  btnColorBlack " onClick="SaveOflinePaymentDetailsHostelnew('+studentId1+','+institutecourseId1+',\''+type+'\');">Save Adjustment</label>'+
				'&nbsp;&nbsp;<label class="btn btn-mini btn-inverse" data-dismiss="modal" aria-hidden="true">Cancel</label>');
		$('.cardPercentage').numeric();
		$('#TotalAmoount').numeric();
		$('#paymentDatenew').val($.datepicker.formatDate("M dd,yy",new Date()));
		$('#paymentSettelmentDate').val($.datepicker.formatDate("M dd,yy",new Date()));
		$('#ifsccode').attr('placeholder','Not Required');
		
		$('#paymentDatenew').datepicker({
			dateFormat : "M dd,yy",
			inline : true,
			changeMonth : true,
			changeYear : true,
			maxDate:new Date(),
			yearRange : "-40:+0",
			firstDay : 1,
		});

		$('#paymentSettelmentDate').datepicker({
			dateFormat : "M dd,yy",
			inline : true,
			changeMonth : true,
			changeYear : true,
			maxDate:new Date(),
			yearRange : "-40:+0",
			firstDay : 1,
		});
		
		var boilers='';
		if($('#cmbPolicy').data('accountArray')!=undefined){
		 accountArray=$('#cmbPolicy').data('accountArray');
		}else if($('#cmbFinancePolicy').data('accountArray')!=undefined){
			accountArray=$('#cmbFinancePolicy').data('accountArray');
		}
		
		if(type=='Adjustment'){
			boilers += '<option value="-1">Student Payable</option>';	
		}else{
			boilers += '<option value="'+accountHeadId+'">'+accountname+'</option>';	
		}
		$('#banklist1').html(boilers);
		
		if($('#cmbPolicy').data('accountArray')==undefined){
		var amt=$('#studentPayable123').text(); //$('.payable_'+studentFeeInvoice1).text()!=undefined?$('.payable_'+studentFeeInvoice1).text():0;
		$('#tramts').html(amt);
		}
		$('#banklist1').attr('disabled',false);	
	}
	
function calculateAmountsHostelnew(type,studentExceptionInvoiceId,feeHeads,studentId,InstituteCourseId,type){
		
		var amt2 = $('#'+feeHeads).text()!=undefined && $('#'+feeHeads).text()!='' ? eval($('#'+feeHeads).text()):0;
		
		var tramts=0.0;
		if(type=='Adjustment')
			tramts=eval($('#tramts').html());
			else
				tramts=eval($('#deposittramts').html());
		if(tramts<=0){

			jAlert('Adjustment Amount should be greater than 0 ');
			
			$('.claAmts1').attr('checked',false);
			
			return false;
		}
		
		if($('.chks1_'+studentExceptionInvoiceId).is(':checked')){
			var amt=eval($('.amts1_'+studentExceptionInvoiceId).text()) - eval(amt2);
			$('#editamts1_'+studentExceptionInvoiceId).html('<input type="text" id="txtUnitPriceid1_'+studentExceptionInvoiceId+'" class="clsExceed gems_currency" style="width:90px;text-align:right;" onkeyup="validationAmountHostelnew(\''+amt+'\',\''+studentExceptionInvoiceId+'\');" value="'+amt+'">');
		}else{
			var amt=eval($('.amts1_'+studentExceptionInvoiceId).text()) - eval(amt2);
			$('#editamts1_'+studentExceptionInvoiceId).html('');
		}
		var Amount=0.0;
		var flag=true;
		$('.claAmts1:checked').each(function(){
			var studentExceptionInvoiceId=$(this).val();
			var feeHead=$(this).attr('feeHead');
			var amt2 = $('#'+feeHead).text()!=undefined && $('#'+feeHead).text()!='' ? eval($('#'+feeHead).text()):0;
			var amt=$('#txtUnitPriceid1_'+studentExceptionInvoiceId).val()!=undefined || $('#txtUnitPriceid1_'+studentExceptionInvoiceId).val()!='' ? eval($('#txtUnitPriceid1_'+studentExceptionInvoiceId).val()):0;
			
			amt = amt - amt2;
			
			if(amt>0){
				Amount+=eval(amt);
			}
			else{
				flag=false;	
			}
		});
		$('#paymentAmt1').text(Amount);
		
		if(tramts>0 && tramts<Amount){

			jAlert('Please enter valid amount');
			return false;
		}
		
		applyGemsPlugins();

	}
function getamtsHostel(studentFeeInvoice){
 
		var universeName=$('.clspaymentModedis option:selected').text();
		var categoryname=universeName.replace(/ /g,'').replace(/[^a-z0-9\s]/gi, '_');
		var amt=$('.clsof_'+categoryname).text()!=undefined?$('.clsof_'+categoryname).text():0;
		if(amt!='')
		$('#tramts').html(amt);
		else
			$('#tramts').html('0.0');	
		
		
	}
		function calculatecardpaymentsHostelnew(){
		var value = $('input[name = "charges"]:checked').val();
		if(value==''){
			jAlert('Please select charges');
			return false;
		}
		var billAmount=$('#paymentAmt1').text();
		
		if(billAmount=='' || billAmount==undefined  || billAmount==0 || billAmount=='0'){
		//	jAlert('Please enter bill amount to calculate charges amount');
			return false
		}
		var per=$('.cardPercentage').val();
		if(eval(per)>100 || per.includes('-')){
			jAlert('Please Enter Valid Percentage');
			$('.cardPercentage').val('');
			return false
		}
		var totabillAmountWithCharges=(eval(billAmount)*eval(per)/100);
		$('#TotalAmoount').val(totabillAmountWithCharges.toFixed(2));
	}
 function validationAmountHostelnew(feeHeads,studentExceptionInvoiceId){
		//calculateAmounts();
		var amt2 =($('.amts1_'+studentExceptionInvoiceId).text()!=null || $('.amts1_'+studentExceptionInvoiceId).text()!='')?$('.amts1_'+studentExceptionInvoiceId).text():0;
		var amt0=$('#txtUnitPriceid1_'+studentExceptionInvoiceId).val();
		if(!amt0.includes("-")){
			if(eval(amt0)>eval(amt2)){
				jAlert("Entered Payment Amount is greater Than Invoice Amount");
				$('#txtUnitPriceid1_'+studentExceptionInvoiceId).val(amt2);
				return false;
			};
		}else{
			jAlert("Please Enter valid Payment Amount");
			$('#txtUnitPriceid1_'+studentExceptionInvoiceId).val(amt2);
			return false;
		}
		var totalamount1=0.0;
		$('.claAmts1:checked').each(function(){
			var studentExceptionInvoiceId = $(this).val();
			var amount1 =$('#txtUnitPriceid1_'+studentExceptionInvoiceId).val();
			totalamount1+=eval(amount1);
		});

		$('#paymentAmt1').text(totalamount1);
	}
	
	function SaveOflinePaymentDetailsHostelnew(studentId,institutecourseId,type){
		var courseType = "Hostel";
		var selamount=0.0;
		if(type=='Adjustment')
		selamount=eval($('#tramts').html());
		else
		selamount=eval($('#deposittramts').html());
	
		if(selamount=='' || selamount==undefined || selamount=='0' || selamount==0){
			jAlert('Adjustment amount should be greater than 0');
			return false;
		}
		
		var totamts=eval($('#paymentAmt1').text());
		if(selamount>0 && selamount<totamts){

			jAlert('Please enter valid amount');
			return false;
		}
		
		var payDetArr = new Array();
		var dataString = "";
		var misDataString ="";
		var totalAmount =0;
		var ExcessFee=$('#txtPayExceedFees').val()!=null||$('#txtPayExceedFees').val()!=''?$('#txtPayExceedFees').val():0;
		if($('#ckbPayExceedFees').is(":checked")){
			if(ExcessFee==0 ||ExcessFee==''){
				jAlert("Please enter Excess Fee Amount ");
				return;
			}
		}
		
		var studentFeeInvoiceId = 0;
		$('.claAmts1:checked').each(function(){
			
			var studentExceptionInvoiceId = $(this).val();
			var amount =$('#txtUnitPriceid1_'+studentExceptionInvoiceId).val();
			var description = $('#desc_'+studentExceptionInvoiceId).html();
			var type = $(this).attr('types');
			totalAmount+=eval(amount);
			studentFeeInvoiceId = $(this).attr('studentFeeInvoiceId');
			
			if(type=="Academic")
				dataString += studentExceptionInvoiceId+"@"+amount+"@"+description+"~";
			else
				misDataString += studentExceptionInvoiceId+"@"+amount+"@"+description+"~";
		});
		totalAmount=eval(totalAmount)+eval(ExcessFee);
		if(misDataString.length>1)
			misDataString=misDataString.substring(0, misDataString.length-1);
		
		if(dataString.length>1)
			dataString=dataString.substring(0, dataString.length-1);
		
		
			var type=$('#neftregs option:selected').val();
			if(type==''){
				jAlert("Please select NEFT/RTGS/IMPS");
				return;
			}
			var bankName=$('#bankNamesss').val();
			var branchName=$('#branchName').val();
			var ifsccode=$('#ifsccode').val();
			var utrcode=$('#utrcode').val();
			var accountHeadId=$('#banklist1 option:selected').val();
			var paymentSettelmentDate=$('#paymentSettelmentDate').val();
			var paymentDatenew=$('#paymentDatenew').val();
			if(paymentDatenew==""){
				jAlert("Please Select Payment Date");
				return;
			}
			var Taxdetails="";
			
			$.ajax({      
				url:'saveOfflinePaymentDetailsfromAdminSideHostel.json',
				data:{
					type:type,
					branchName:branchName,
					ifsccode:ifsccode,
					utrcode:utrcode,
					paymentDate:paymentDatenew,
					bankName:bankName,
					Taxdetails:Taxdetails,
					studentId:studentId,
					accountHeadId:accountHeadId,
					institutecourseId:institutecourseId,
					totalAmount:totalAmount,
					paymentSettelmentDate:paymentSettelmentDate,
					dataString:dataString.toString(),
					misDataString:misDataString.toString(),
					ExcessFee:ExcessFee,
					studentFeeInvoiceId:studentFeeInvoiceId,
					courseType:courseType
				},
				dataType:'json',
				async:false,
				beforeSend: function() {
					startCommonAjaxSpinner();
				},
				complete: function() {
					stopCommonAjaxSpinner();
				},
				success:function(jArray){
					if(jArray[0].Error=='true' || jArray[0].Error==true){
						jAlert(jArray[0].Description);
						return false;	
					}
					else if(jArray[0].Error=='false' || jArray[0].Error==false){
						jAlert("Record saved successfully...!!");
						//var linkUrl=window.location.toString().substring(window.location.toString().lastIndexOf('/') + 1)
						//var mainrul=linkUrl.substring(0,linkUrl.indexOf('?'));
						$('#commonDialogmakeMakePaymentOfflineHostel').modal('hide');
						var studentBatchId=$('#txtStudentSearchBarInvoiceHostel').attr('studentBatchId');
						getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(studentBatchId);
					}else{
						jAlert("Record not saved successfully...!!");
					}
				},
				error:function(){
					jAlert("No Records","Error");
				}
			});
		}
	function payExceedFee(){
		if($('#ckbPayExceedFees').is(":checked")){
			$('.claAmts').attr('checked',true);
			$('.claAmts').trigger('onclick');
			$('.clsExceed').attr('readonly',true);
			$('#trPayExceedFees').show();
		}else{
			$('.claAmts').attr('checked',false);
			$('.claAmts').trigger('onclick');
			$('.clsExceed').attr('readonly',false);
			$('#trPayExceedFees').hide();
		}
	}
	
function calculateAmountAccess(){
		//calculateAmounts();
		var Amt="";
		var Amt1="";
		Amt=$('#invAmt').text()!=null?$('#invAmt').text():0;
		Amt1=($('#txtPayExceedFees').val()!=''||$('#txtPayExceedFees').val()!=null)?$('#txtPayExceedFees').val():0
		if(!Amt1.includes("-")){
			if(Amt1==''||Amt1==0){
				$('#paymentAmt').text(Amt);
			}else{
				$('#paymentAmt').text(eval(Amt)+eval(Amt1));
			}
		}else{
			jAlert("Please Enter valid Excess Amount");
			$('#txtPayExceedFees').val('0');
			return false;
		}
	}
	
function hostelAdjustmentEntry(){
	
	$('#commonDialog').modal({
		keyboard: false,
		//show: false
	}).css({
		width: '900px',
		'margin-left': function () {
			return -($(this).width() / 2);
		}
	});
	var studentname=$('#tdNameOfStudent').html();
	$('#commonDialogHeader').html('Student Name:'+studentname);
	var studentFeeInvoiceId = getStudentInvoiceId();
	
	var boiler = '<table class="table table-bordered table-condensed">'+
	'<tr><td colspan="2">Please Select Date</td><td colspan="2"><input type="text" id="settleDates" readonly="readonly"  / ></td></tr>'+

	'<tbody id="trnsferFeeStructure"></tbody>';
	boiler+='<tr><td colspan="7" style="text-align:center"><input type="button" value="Transfer"  onclick="doAdjustmentEntry(\''+studentFeeInvoiceId+ '\')" class="btn btn-mini btn-inverse"></td></tr>';

	boiler+='</td></tr></table>';
	$('#commonDialogBody').html(boiler);
	$('#settleDates').datepicker({
		dateFormat:"M dd,yy",
		autoclose:true,
		maxDate: 0
	});

	var jArray1=$('#btnStudentInvoiceCancel').data('FeeItemArray');//semesterId
    
	var boiler='<tr><th>Sr No.</th><th>Fee Head Name</th><th class="gems_currency_label">'+juno.labelByCustomer('l.isInvoceToFeesLabel')+' Amount</th><th class="gems_currency_label">Paid Amount</th><th class="gems_currency_label">Difference in Amount</th><th class="gems_currency_label">Transfer From</th><th class="gems_currency_label">Transfer To</th></tr>';
	for(var i=0;i<jArray1.length;i++){
		var amt=jArray1[i]["totalAmount"]!=undefined && jArray1[i]["totalAmount"]!=''?jArray1[i]["totalAmount"]:0.0;
		var semesterId=jArray1[i]["semesterId"]!=undefined?jArray1[i]["semesterId"]:0;
		boiler+='<tr class="clsfeeDetailsadm"><input class="accountheadId" semesterid="'+semesterId+'" feeItemId="'+jArray1[i]["feeItemId"]+'" id="tdid'+jArray1[i]["feeItemId"]+'_'+semesterId+'" type="hidden" semesterId="'+semesterId+'" value="'+jArray1[i]["feeItemId"]+'">'+
		'<td class="gems_integer">'+eval(i+1)+'</td>'+
		'<td><b>'+jArray1[i]["orgFeeItemHeadName"]+'</b><br>'+jArray1[i]["description"]+'</td><td class="gems_currency" amt="'+amt+'" id="invc_'+jArray1[i]["feeItemId"]+'_'+semesterId+'">'+jArray1[i]["totalAmount"]+'</td>'+
		'<td class="gems_currency" amt="0.0" id="td_'+jArray1[i]["feeItemId"]+'_'+semesterId+'">0.0</td><td class="gems_currency" id="remains_'+jArray1[i]["feeItemId"]+'_'+semesterId+'">0.0</td>';

		boiler+='<td><input type="text" value="0" style="width:90px;text-align:right;" class="framt framt_'+jArray1[i]["feeItemId"]+'_'+semesterId+'" id="'+jArray1[i]["feeItemId"]+'_'+semesterId+'_amt" onkeyup="totamt()"></td>'+
		'<td><input type="text" value="0" style="width:90px;text-align:right;" class="toamt toamt_'+jArray1[i]["feeItemId"]+'_'+semesterId+'"  id="'+jArray1[i]["feeItemId"]+'_'+semesterId+'_amt" onkeyup="totamt()"></td></tr>';
	}
	boiler+='<tr class="clsfeeDetailsadm" id="payabletr"></tr>';
	boiler+='<th colspan="4">Total</th><td></td><td class="totfromtot gems_currency" style="text-align:center">0</td><td class="tottorom gems_currency" style="text-align:center">0</td></tr>';
	$('#trnsferFeeStructure').html(boiler);
	
	
	$.ajax({
		url:'getstudentfeeInvoiceDetailsForAdjustmentEntryHostel.json?feeInvoiceId='+studentFeeInvoiceId,
		dataType:'json',
		type:'GET',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray1){
			for(var i=0;i<jArray1.length;i++){
				$('#td_'+jArray1[i].accountname+'_'+jArray1[i].semesterId).html(jArray1[i].amountPaid);
				$('#td_'+jArray1[i].accountname+'_'+jArray1[i].semesterId).data('amt',jArray1[i].amountPaid);
				$('#tdid'+jArray1[i].accountname+'_'+jArray1[i].semesterId).val(jArray1[i].accounthead);
				if(eval(jArray1[0].payableamount)!=0 && i==0){
					var boiler='<input class="accountheadId" feeItemId="0"  type="hidden" value="'+jArray1[0].payableaccountHead+'"><td></td>'+
					'<td>Student Payable</td><td class="gems_currency">0</td><td class="gems_currency" id="td_0">'+jArray1[0].payableamount+'</td>';
					
					if(eval(jArray1[0].payableamount)>0){
						boiler+='<td></td><td><input type="text" value="0" style="width:90px;text-align:right;" class="framt" id="0_amt" onkeyup="totamt()"></td>'+
						'<td><input type="text" value="0" style="width:90px;text-align:right;" class="toamt"  id="0_amt" onkeyup="totamt()"></td></tr>';
					}
					else{
						boiler+='<td></td><td></td><td></td>';
					}
					$('#payabletr').html(boiler);
				}
			}
			
			var jArray1=$('#btnStudentInvoiceCancel').data('FeeItemArray');//studentFeeInvoiceId
			for(var i=0;i<jArray1.length;i++){
				var diffrence=eval($('#invc_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('amt'))-eval($('#td_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).data('amt')!=undefined?$('#td_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).data('amt'):0.0);
				$('#remains_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).html(diffrence);
				if(diffrence>0){
					$('.toamt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).val(diffrence);
					$('.framt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
				}
				else if(diffrence<0){
					$('.framt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).val(Math.abs(diffrence));
					$('.toamt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
				}
				else{
					$('.toamt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
					$('.framt_'+jArray1[i]["feeItemId"]+'_'+jArray1[i]["semesterId"]).attr('readonly',true);
				}
				
			}
			totamt();
		},error:function(){

		}
	});
}	

function totamt(){
	var framt=0.0;
	var toamt=0.0;

	$('.framt').each(function(){
		framt+=eval($(this).val());
	});
	$('.toamt').each(function(){
		toamt+=eval($(this).val());
	});
	$('.tottorom').html(toamt);
	$('.tottorom').data('original_value',toamt);
	$('.totfromtot').html(framt);
	$('.totfromtot').data('original_value',framt);
	applyGemsPlugins();
}

function doAdjustmentEntry(studentFeeInvoiceId){
	var feedata='';
	var billAmount=0;
   var billDate=$('#settleDates').val();
	
	if(billDate==0 || billDate==undefined || billDate==''){
		jAlert('Please select bill date');
		return false;
	}
	var famt=0.0;
	var toamt=0.0;
	$('.clsfeeDetailsadm').each(function(){
		var feeItemId=$(this).find('.accountheadId').attr('feeItemId')==undefined || $(this).find('.accountheadId').attr('feeItemId')==""?"-1":$(this).find('.accountheadId').attr('feeItemId');
		var semesterId=$(this).find('.accountheadId').attr('semesterId')==undefined || $(this).find('.accountheadId').attr('semesterId')==""?"-1":$(this).find('.accountheadId').attr('semesterId');
		var accountheadId=$(this).find('.accountheadId').val()==undefined || $(this).find('.accountheadId').val()==""?"-1":$(this).find('.accountheadId').val();
		var fromamt=$(this).find('td').eq(5).find('input').val()==undefined || $(this).find('td').eq(5).find('input').val()==""?"0":$(this).find('td').eq(5).find('input').val();
		var tomamt=$(this).find('td').eq(6).find('input').val()==undefined || $(this).find('td').eq(6).find('input').val()==""?"0":$(this).find('td').eq(6).find('input').val();

		if(eval(fromamt>0) || eval(tomamt)>0){
			feedata+=feeItemId+'~'+accountheadId+'~'+fromamt+'~'+tomamt+'~'+semesterId+'#';
			billAmount+=eval(fromamt);
		}
		famt+=eval(fromamt);
		toamt+=eval(tomamt);
	});
	if(feedata.length>2)
		feedata = feedata.substring(0,feedata.length -1);
if(famt!=toamt){
	jAlert('Amount mis match of both side');
	return false;
}
	
	if(feedata.length>1){
		$.ajax({
			url:'adjustmentEntryOfHostel.json',
			data:{studentFeeInvoiceId:studentFeeInvoiceId,
				feedata:feedata,billAmount:billAmount,billDate:billDate},
			dataType:'json',
			type:'GET',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray1){
				jAlert(jArray1.responseText);
				$('#commonDialog').modal('hide');
				getHostelStudentBillingDetails(function(jArray) {
					showStudentHostelBillingDetails(jArray);
					if (jArray.length > 0) {
						var studentInvoiceId = jArray[0].studentInvoiceId;
						// showStudentRecieptPrintOption(studentInvoiceId,jArray);
					}
				});

			},error:function(){

			}
		});
	}else{
		jAlert('Please Enter Transfer  Amount');
		return false;
	}
	
	
}

function mapToOtherFeeStructure(studentBillId,instituteCourseId,manualAccountHeadId,BillNo,receiptdate,taxDetail,installment,nextPaymentDate,studentId)
{
	
	$('#commonDialog').modal('show');
	var studentname=$('#tdNameOfStudent').html();
	$('#commonDialogHeader').html('Student Name:'+studentname);
	var boiler = '<table class="table table-bordered table-condensed">'+
	'<tr><td>Please Select Date</td><td colspan="3"><input type="text" id="settleDate"/ ></td></tr>'+
	'<tr><td>Please Select Fee Structure </td><td colspan="3"><select id="feestructure"  onchange="">/td></tr>';
	
	boiler+='<tr><td colspan="5" style="text-align:center"><input type="button" value="Map"  onclick="mapBillToOtherFeeStructure('+studentBillId+','+instituteCourseId+','+manualAccountHeadId+',\''+BillNo+ '\',\''+receiptdate+'\',\''+taxDetail+'\',\''+installment+'\',\''+nextPaymentDate+'\')" class="btn btn-mini btn-inverse"></td></tr>';

	boiler+='</table>';
	$('#commonDialogBody').html(boiler);
	$('#settleDate').datepicker({
		dateFormat:"M dd,yy",
		autoclose:true,
		maxDate: 0
	});
	FeeStructureDetails(studentId);
	$('#settleDate').val(receiptdate);
	$('#settleDate').attr('disabled',true);
}

function FeeStructureDetails(StudentId){
	$.ajax({
		url:'getfeestructureDetailsbyStudentIdforsettelentHostel.json',
		dataType:'json',
		data:{StudentId:StudentId,OccupantId:globalSource},
		type:'POST',
		async:false,
		beforeSend : function() {
			startCommonAjaxSpinner();
			$('#btn_SaveAcceptBCTransanction').hide();
		},
		complete : function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray){
			
			var typepfmapped='<option value="0">Select</option>';
			for(var i=0;i<jArray.length;i++){
				typepfmapped += '<option value = "'+jArray[i]["studentFeeInvoiceId"]+'">'+jArray[i]["feestructurename"]+'</option>';
			}
			$('#feestructure').html(typepfmapped);
			//convertComboToSearchable('#feestructure');
		}
	});
}

function mapBillToOtherFeeStructure(studentBillId,instituteCourseId,manualAccountHeadId,billNo,receiptdate,Taxdetails,installment,nextPaymentDate)
{
	
	var userId=$('#userId').val();
	var feeStructureId= $('#feestructure option:selected').val();
	var feeStructureName= $('#feestructure option:selected').text();
	if(feeStructureId==0 || feeStructureId==undefined || feeStructureId==''){
		jAlert('Please select fee Structure');
		return false;
	}
	
	var feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	var dateOfAdmission = $('#txtAdmissionDateStudent').val();
	
	console.log(Taxdetails);
	var array = new Array();
	var paymentMode='';
	$('.PaymentDetailArr'+studentBillId).each(function(){
		 amount=$(this).find('td').eq(0).text();
	     paymentMode=$(this).find('td').eq(1).text();
		var bankName=$(this).find('td').eq(3).text();
		var branch=$(this).find('td').eq(4).text();
		var chequeDDNo1=$(this).find('td').eq(2).text();
		var chequeDDNo='';
		var chequeDDDate='';
		if(chequeDDNo!=''){
			  chequeDDNo=chequeDDNo1.split(' (')[0];
			  splitstr=chequeDDNo1.split(' (')[1];
			  chequeDDDate=splitstr.replace(')','');
		}
	
		if (paymentMode != '0' && paymentMode != '') {
					var temp = '';
					
					if (paymentMode == 'Cash') {
						temp = '{' + '\"paymentMode\":\"' + paymentMode + '\",'
								+ '\"amount\":\"' + amount + '\",'
								+ '\"bankName\":\"\",' + '\"chequeDDNo\":\"\",'
								+ '\"chequeDDDate\":\"\",' + '\"branch\":\"\"'
								+ '}';
					} else {
						temp = '{' + '\"paymentMode\":\"' + paymentMode + '\",'
								+ '\"amount\":\"' + amount + '\",'
								+ '\"bankName\":\"' + bankName + '\",'
								+ '\"chequeDDNo\":\"' + chequeDDNo + '\",'
								+ '\"chequeDDDate\":\"' + chequeDDDate + '\",'
								+ '\"branch\":\"' + branch + '\"' + '}';
					}
					array.push(temp);
				}
			});
	array = '[' + array.join(',') + ']';
	jConfirm('Are you sure you want to map this '+billNo+' to the this Fee Structure '+feeStructureName,'', function(r) {
	if (r) {
	
		$.ajax({
			url:'saveBillingInformationToServerHostel.json',
			data:{
				studentBillId : studentBillId,
				feeInvoiceId : feeStructureId,
				accountHeadId:manualAccountHeadId,
			    array:array,
				billNoOld:billNo,
				userId:userId,
				instituteCourseId:instituteCourseId,
				paymentMode:paymentMode,
				receiptDate:receiptdate,
				feeItemId:feeItemId,
				Taxdetails:Taxdetails,
				dateOfAdmission:dateOfAdmission,
				installmentNo : installment,
				nextPaymentDate : nextPaymentDate
				},
			dataType:'json',
			type:'POST',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(responseJArray){
               var flag = responseJArray.responseFlag;
				if (flag.toString() == '1') {
					showSuccessMessage("Bill successfully map with "
							+ feeStructureName, 10000);
					getHostelStudentBillingDetails(function(billJArray) {
						showStudentHostelBillingDetails(billJArray);
					});
				} else {
					showErrorMessage("Bill mapping failed! "
							+ responseJArray.responseText, 20000);
					try {
						callback();
					} catch (e) {

					}
				}
			
			$('#commonDialog').modal('hide');
			},error:function(){

			}
		});
	  }
	});
}

function TransferBills1(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId){


	$('#commonDialog').modal('show');
	var studentname=$('#tdNameOfStudent').html();
	$('#commonDialogHeader').html('Student Name:'+studentname);
	var boiler = '<table class="table table-bordered table-condensed">'+
	'<tr><td>Please Select Date</td><td colspan="3"><input type="text" id="settleDate"/ ></td></tr>'+
	'<tr><td>Please Select Fee Structure </td><td colspan="3"><select id="feestructure"  onchange="">/td></tr><tbody id="trnsferFeeStructure"></tbody>';
	/*if(IndividualMultipleFlag=='Multiple'){
		boiler+='<tr><td><input type="button" value="Save" onclick="saveAcceptBCTransanctionToAccountsSelected()" class="btn btn-mini btn-inverse"></tr></td>';
	}else{
		boiler+='<tr><td colspan="3"><input type="button" value="Save"  onclick="saveAcceptBCTransanctionToAccounts('+studentId+')" class="btn btn-mini btn-inverse" style="margin-left:420px"></td></tr>';
	}*/
	boiler+='<tr><td colspan="5" style="text-align:center"><input type="button" value="Transfer"  onclick="TransferBillstoAnother(\''+studentBillId+ '\',\''+FinancePolicy+ '\',\''+financePolicyspecificatinId+ '\',\''+BillNo+ '\',\''+studentId+ '\')" class="btn btn-mini btn-inverse"></td></tr>';

	boiler+='</td></tr></table>';
	$('#commonDialogBody').html(boiler);
	$('#settleDate').datepicker({
		dateFormat:"M dd,yy",
		autoclose:true,
		maxDate: 0
	});
	FeeStructureDetails(studentId);
	TransferBills(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId);
}

function TransferBills(studentBillId,FinancePolicy,financePolicyspecificatinId,BillNo,studentId){
	$('#transferbtn').data('studentBillId',studentBillId);
	$('#cmbFinancePolicy1').val(FinancePolicy);
	$('#cmbFinancePolicy1').data('feeStructureId',feeStructureId);
	$('#cmbFinancialYear1').val(financePolicyspecificatinId);
	var feeStructureId=$('#feestructure').val();
	//configureNewJournalEntry();



	$.ajax({
		url:'getBillDetailsByBillNo.json',
		data:{FinancePolicy:FinancePolicy,studentBillId:studentBillId,BillNo:BillNo},
		dataType:'json',
		type:'GET',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArray1){
           var boiler='<tr><th>Sr No.</th><th>Fee Head Name</th><th>Bill Amount</th><th>Transferable Amount</th><th>Transfer Amount</th></tr>';
			for(var i=0;i<jArray1.length;i++){
				boiler+='<tr class="clsfeeDetails"><input class="accountheadId"  type="hidden" value="'+jArray1[i]["AccountHead"]+'"><td>'+eval(i+1)+'</td><td>'+jArray1[i]["AccountHeadname"]+'</td><td class="gems_currency">'+jArray1[i]["Amount"]+'</td><td class="gems_currency">'+jArray1[i]["transferdAmount"]+'</td><td><input type="text" value="0" style="width:90px;text-align:right;" id="'+jArray1[i]["AccountHead"]+'_amt" onkeyup="checkamount('+jArray1[i]["AccountHead"]+','+jArray1[i]["transferdAmount"]+')"></td></tr>';
			}
			$('#trnsferFeeStructure').html(boiler);
		},error:function(){

		}
	});

}

function checkamount(AccountHead,amt){

	var amts=$('#'+AccountHead+'_amt').val();
	if(eval(amts)>amt){
		jAlert('Transfer amount should  not be greater than  bill amount');
		$('#'+AccountHead+'_amt').val('');
	}

}

function TransferBillstoAnother(studentBillId,studentId){
	var feeStructureId=$('#feestructure').val();
	if(feeStructureId==0 || feeStructureId==undefined || feeStructureId==''){
		jAlert('Please select fee Structure');
		return false;
	}
	var billAmount=0.0;
	var billDate=$('#settleDate').val();
	
	if(billDate==0 || billDate==undefined || billDate==''){
		jAlert('Please select bill date');
		return false;
	}
	var feedata='';
	$('.clsfeeDetails').each(function(){
		var accountheadId=$(this).find('.accountheadId').val()==undefined || $(this).find('.accountheadId').val()==""?"-1":$(this).find('.accountheadId').val();
		var amt=$(this).find('td').eq(4).find('input').val()==undefined || $(this).find('td').eq(4).find('input').val()==""?"0":$(this).find('td').eq(4).find('input').val();
		if(eval(amt>0)){
			feedata+=accountheadId+'~'+amt+'#';
			billAmount+=eval(amt);
		}

	});
	if(feedata.length>2)
		feedata = feedata.substring(0,feedata.length -1);
	
	if(feedata.length>1){
		$.ajax({
			url:'transfertoStudentBillsToOtherFeeStructureHostel.json',
			data:{billDate:billDate,
				studentFeeInvoiceIdTo:feeStructureId,
				feedata:feedata,
				billAmount:billAmount,
				studentBillId:studentBillId
				,studentId:studentId},
			dataType:'json',
			type:'GET',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray1){
            jAlert(jArray1.responseText);
            $('#commonDialog').modal('hide');
            getHostelStudentBillingDetails(function(jArray) {
				showStudentHostelBillingDetails(jArray);
				if (jArray.length > 0) {
					var studentInvoiceId = jArray[0].studentInvoiceId;
					// showStudentRecieptPrintOption(studentInvoiceId,jArray);
				}
			});
			},error:function(){

			}
		});
	}else{
		jAlert('Please Enter Transfer  Amount');
		return false;
	}
	
}

function makeRefundOfHostelAdmission(studentId,instituteCourseId,invoiceId){
	var studentPayable= $('#studentPayable123').text();
	configurePaymentVoucherForRefundForInvoice(studentId,studentPayable,invoiceId);
	//getAllaccountDetetails(studentId);
}

function configurePaymentVoucherForRefundForInvoice(studentId,studentPayable,invoiceId){
	var student = studentId;
	var refundAmt = studentPayable;
	var studentFeeInvoiceId = invoiceId;
	voucherBasicConfiguration(student,function(replay){
		if(replay[0] != undefined && replay[0]!="undefined"){
			renderPaymentVoucherForRefund(replay[0].fasPolicy,replay[0].stDate+'',replay[0].enDate+'',student,function(resp){
				index=0;
				$('#cmbFinancePolicy1').val(replay[0].fasPolicy);
				$('#cmbFinancePolicyRefund').val(replay[0].fasPolicy);
				
				$('#studentReceivable').data('fasPolicy',replay[0].fasPolicy);
				//$('.accounts:first').val(replay[0].suggestedAc+'argSepfalseargSepfalse').trigger('liszt:updated');
				$('.txtDrAmt').val('');
				$('.accounts').val('');
				var jArray=replay;
				var drcrType="Dr";
				
				for(var i=0;i<jArray.length;i++){
					addVoucherParticularRowRefund(function(rowIndex){
						$('.hideReundExtraTrCls').html('');
						var amount=jArray[i]["amount"];
						var insid=jArray[i]["suggestedAc"];
						if(drcrType=="Dr"){
							$('#txt_DrAmount-'+rowIndex).val(amount.toFixed(2));
							$('#txt_DrAmount-'+rowIndex).trigger('keyup');
							
						}else{
							$('#txt_CrAmount-'+rowIndex).val(amount.toFixed(2));
							$('#txt_CrAmount-'+rowIndex).trigger('keyup');
						}
						$('#sel_ParticularAccounthead_'+rowIndex+' option').each(function(){
							
							if(drcrType=="Dr"){
							if($(this).val().split('argSep')[0] == insid){
								$(this).attr('selected',true);
							}
							}
						});
						if(i==0)
							$('#bankDetails-'+rowIndex).hide();
					
						convertComboToSearchable('.selPerticular');
						$('#tr_particularRow-'+rowIndex).data('array', replay[i]);
						//drcrType="";
					});
				}
				$('#PaidToStudent').attr('checked',true);
				tooglePaidToRadio(replay[0].fasPolicy,function(){
					setTimeout(function(){
						$('#PaidTo').val(student.toString()).trigger('liszt:updated');
						$('#PaidTo').change();
					},100);
				});

				$('#btnSubmitNewReceipt').click(function(){
					velidateNewVoucher(function(flag){
						if(flag){
							configureSubmitNewExpnVoucher(replay[0].fasPolicy,student,replay[0].studentFeeInvoiceId);
						}
					});
				 });
			});
		}
	});
}

function voucherBasicConfiguration(student,callback){
	$.ajax({
		url:'StudentRefundVoucherBasicConfigHostel.json',
		dataType:'json',
		type:'POST',
		data:{
			student:student,
		},
		async:false,
		beforeSend:function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
			
		},
		success:function(replay){
			callback(replay);
		},
		error:function(){
			jAlert("Something went wrong, Please try after some time");
		}
	});
}

function getAllaccountDetetails(student){
	
	var studentId=student;
	$.ajax({
		url:'getAllAccountDetailsForMiscellaneousFees.json',
		data:{studentId:studentId},
		dataType:'json',
		type:'POST',
		
		async:false,
		beforeSend:function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(replay)
		{
			for(var i = 0 ; i<replay.length ; i++){
			var amount=replay[i]["Amount"]
			var insid=replay[i]["AccountId"];
			if(i==0){
				addVoucherParticularRowRefund();
			}
			$('#paymentvoucherTbody tr:nth-last-child(2)').find('.txtCrAmt').val(amount);
			$('#paymentvoucherTbody tr:nth-last-child(2)').find('.txtCrAmt').trigger('keyup');
			$('#paymentvoucherTbody tr:nth-last-child(2)').find('.accounts option').each(function(){
				if($(this).val().split('argSep')[0] == insid){
					$(this).attr('selected',true);
				}
			});
			if(i!=eval(replay.length-1)){
				addVoucherParticularRowRefund();
			}
			convertComboToSearchable('.accounts');
			}
		},
		error:function(){
			jAlert("Something went wrong, Please try after some time");
		}	
	});
}

function getStudentReceivableAndPayableDetails(){

	if($('#PaidToStudent').is(":checked"))
	{
		var studentId = $('#PaidTo').val();
		$.ajax({
			url:'getStudentReceivableDetailsNew.json',
			dataType:'json',
			data:'studentId='+studentId,
			success:function(jObject){

				var academicFee=parseFloat(eval(jObject.academicFees)).toFixed(2);
				var hostelFees = parseFloat(eval(jObject.hostelFees)).toFixed(2);
				var miscFee = parseFloat(eval(jObject.miscFee)).toFixed(2);
				//var studentPayable =0;
				var studentPayable =eval(jObject.studentPayable);
				var tillDatePaid = eval(jObject.studentPaidTill);

				if(academicFee>0)
				{
					academicFee=eval(jObject.academicFees);
				}
				else
				{
					academicFee=0.00;
					//studentPayable += -(eval(jObject.academicFees));
				}

				if(hostelFees>0)
				{
					hostelFees = parseFloat(eval(jObject.hostelFees)).toFixed(2);
				}
				else
				{
					hostelFees=0.00;
					studentPayable += -parseFloat(eval(jObject.hostelFees)).toFixed(2);
				}

				if(miscFee>0)
				{
					miscFee = parseFloat(eval(jObject.miscFee)).toFixed(2);
				}
				else
				{
					miscFee=0.00;
					//studentPayable += -(eval(jObject.miscFee));
				}

				var boiler ='<table class="table table-bordered"><tr><th colspan="8">Student Receivable / Payable</th></tr>'+
				'<tr><th>Academic Fees </th><td id="tdAcademicFeeRefund" style="text-align:right;font-weight:bold">'+academicFee+'</td>'+
				'<th>Hostel Fees </th><td  id="tdHostelFeeRefund" style="text-align:right;font-weight:bold">'+hostelFees+'</td>'+
				'<th>Miscellaneous Fees </th><td  id="tdMiscFeeRefund" style="text-align:right;font-weight:bold">'+miscFee+'</td>'+
				'<th>Student Payable </th><td style="text-align:right;font-weight:bold" class="gems_currency">'+studentPayable+'</td>'+
				'<th>Paid By Student</th><td style="text-align:right;font-weight:bold">'+tillDatePaid+'</td>'+
				'</tr></table>';
				$('#studentDetailsDiv').html(boiler);
			}
		});
	}
	else
	{
		$('#studentDetailsDiv').html('');
	}
}

function configureSubmitNewExpnVoucher(fasPolicy,student,studentFeeInvoiceId){
	if((window.location.href+'').includes('ManageFees_Hostel.htm') && $('#customerHelper').val()!='BLM_MUNJAL') {
		SubmitRefundPaymentVoucherHostFeeInvoice(fasPolicy,student,studentFeeInvoiceId,function(flag,replay){
			if(flag==true){
				jAlert(replay.msg);
				if(!replay.error){
					var instituteName = $('#instituteName').val();
					if($('#customerIdentificationObj').val()!=null && $('#customerIdentificationObj').val()!='DYPATIL')
						renderVoucherDetail(replay.incomeReceipt,replay.receiptNo,replay.resCreatedBy,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark,null,replay.instituteName,replay.instituteLogo,replay.instituteAddress);
					else
						renderVoucherDetailForDYP(replay.incomeReceipt,replay.receiptNo,replay.resCreatedBy,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark,null,replay.instituteName,replay.instituteLogo,replay.instituteAddress,replay.className,replay.enrollmentNo,replay.refBillNo);
				}
			}
		});

	}else {
		submitNewExpnVoucher(fasPolicy,student,studentFeeInvoiceId,function(flag,replay){
		if(flag==true){
			jAlert(replay.msg);
			if(!replay.error){
				var instituteName = $('#instituteName').val();
				renderVoucherDetail(replay.incomeReceipt,replay.receiptNo,replay.resCreatedBy,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark,null,replay.instituteName,replay.instituteLogo,replay.instituteAddress);
				getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(gStudentBatchId);
			}
		}
		});
	}
	
	
	/*
	
	submitNewExpnVoucher(fasPolicy,student,studentFeeInvoiceId,function(flag,replay){
		if(flag==true){
			jAlert(replay.msg);
			if(!replay.error){
				var instituteName = $('#instituteName').val();
				renderVoucherDetail(replay.incomeReceipt,replay.receiptNo,replay.resCreatedBy,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark,null,replay.instituteName,replay.instituteLogo,replay.instituteAddress);
				getStudentHostelFeeDueReportTotalFeeStructureWiseByStudentBatchId(gStudentBatchId);
			}
		}
	});*/
}

function submitNewExpnVoucher(fasPolicy,student,studentFeeInvoiceId,callback)
{

	
	var totalDebit = parseFloat(0);
	var totalCredit = parseFloat(0);
	
	var FeeData="";
		
	var argument =  '[';
	$('.tr_particularRow').each(function(){
		var index = $(this).attr('id').split('-')[1];
		if(index!="0" && index!=0){
		var CrDrType = 'Dr';
		var amount = "0";
		if(!($('#txt_DrAmount-'+index).is(':disabled'))){
			CrDrType = 'Dr';
			amount = $('#txt_DrAmount-'+index).val()!=undefined ? $('#txt_DrAmount-'+index).val():0;
			totalDebit += parseFloat(amount);
		}else{
			CrDrType = 'Cr';
			amount = $('#txt_CrAmount-'+index).val()!=undefined ? $('#txt_CrAmount-'+index).val():0;
			totalCredit += parseFloat(amount);
		}
		var studFeeInvoiceIdS=0;
		if($("#studFeeInvoiceIdS-"+index).val()!=undefined)
		studFeeInvoiceIdS=$("#studFeeInvoiceIdS-"+index).val();
		
		var particular = ($('#sel_ParticularAccounthead_'+index).val()!=undefined?$('#sel_ParticularAccounthead_'+index).val():"-1"+'').split('argSep')[0];//!=undefined ? $('#sel_ParticularAccounthead_'+index).val():''
		
		var acDetail = $('#sel_ParticularAccounthead_'+index).val();
		
		var studenthostelfineid = $('#studenthostelfine_'+index).val();
		
		if(CrDrType=='Dr'){
			FeeData+=particular+'#'+amount+'~'
		}
		if(acDetail!=null && acDetail!=undefined)
		{
			if(($('#sel_ParticularAccounthead_'+index).val()+'').split('argSep')[1]=='true')
				bankHistory = $('#sel_ParticularAccounthead_'+index).val();
			
			if($.inArray(acDetail,historyAccountList)==-1)
				historyAccountList.push(acDetail);
			
			if(eval(amount)>0)
			{
				
				var bankName =  $('#txtReceiptBank-'+index).val()!=undefined?$('#txtReceiptBank-'+index).val():"NA";
				var chequeDDDate = $('#txtReceiptChequeDDDate-'+index).val()!=undefined?$('#txtReceiptChequeDDDate-'+index).val():"NA";
				var chequeDDNo = $('#txtReceiptChequeDDNo-'+index).val()!=undefined?$('#txtReceiptChequeDDNo-'+index).val():"NA";
				
				if(chequeDDNo!='NA' && CrDrType=='Cr' && !isNaN(chequeDDNo))
					chequeNoHistory = eval(chequeDDNo)+1;
				
				var journalType = $(this).find('.rdoRef:checked').val();
				var billId = 0;
				var billNo = 'NA';
				var billDate = 'NA';
				
				if(journalType=='newBill'){
					billId = 0;
					billNo = $(this).find('.textBillNo').val().trim();
					billDate = $(this).find('.textBillDate').val().trim();
				}else if(journalType=='agstBill'){
					billId = $(this).find('.cmbBillList').val();
					billNo = $(this).find('.cmbBillList option:selected').val();
					billDate = $(this).find('.textBillDate').val().trim();
				}
				
				if(billNo==undefined || billNo.trim()=='') 
					billNo = 'NA';
				
				if(billDate==undefined || billDate.trim()=='')
					billDate = 'NA';
				
				argument += '{' 
					     + '\"particular\":\"'+particular+'\",'
					     + '\"amount\":\"'+amount+'\",'
					     + '\"CrDrType\":\"'+CrDrType+'\",'
					     + '\"bankName\":\"'+bankName+'\",'
					     + '\"chequeDDNo\":\"'+chequeDDNo+'\",'
					     + '\"chequeDDDate\":\"'+chequeDDDate+'\",'					     
					     + '\"journalType\":\"'+journalType+'\",'
					     + '\"billId\":\"'+billId+'\",'
					     + '\"billNo\":\"'+billNo+'\",'
					     + '\"billDate\":\"'+billDate+'\",'
					     + '\"studenthostelfineid\":\"'+studenthostelfineid+'\",'
					     + '\"quotId\":\"0\",'
					     + '\"studFeeInvoiceIdS\":\"'+studFeeInvoiceIdS+'\"'
					     
					     + '},';
			}
		}
		}
	});
	argument=argument.substring(0, argument.length-1);
	argument +=  ']';
	
	//var fasPolicy = $('#cmbPolicy').val();
	var receptDate = $('#txtReceiptDate').val().trim();
	
	var PaidToType = $('.rdoPaidTo:checked').val();
	var PaidTo = '';
	
	var department = $('#cmbDept').val();
	var remark = $('#txtRemark').val().trim();
	var flag = true;
	
	/*var isAdvanced = $('#isEmpAdvance').is(':checked');*/
	
	if(department==null || department==undefined)
		department = 0;
	
	var resourse = 'NA';
	if(PaidToType!='Other')
	{
		if(PaidToType!='Employee')
			isAdvanced = false;
		
		PaidTo = $('#PaidTo option:selected').text();
		resourse = $('#PaidTo').val();
	}
	else
	{
		PaidTo = $('#PaidTo').val().trim();
		resourse = 'NA';
	}
	/*if($('#btnSubmitNewReceipt').data('studentHostelFineId')!=undefined || $('#btnSubmitNewReceipt').data('studentHostelFineId')!=0  || $('#btnSubmitNewReceipt').data('studentHostelFineId')!='0')
		var studentHostelFineId=$('#btnSubmitNewReceipt').data('studentHostelFineId');*/
		
	if(fasPolicy==null || fasPolicy==0 || fasPolicy==undefined)
	{
		jAlert('Select finance policy','warning');
		flag = false;
	}
	else if(receptDate==null || receptDate=='' || receptDate==undefined)
	{
		jAlert('Enter receipt date','warning');
		flag = false;
	}
	else if(totalCredit!=totalDebit)
	{
		jAlert('Credit amount should match Debit amount','warning');
		flag = false;
	}
	if(flag)
	{
		var stDate = $('#cmbFinancialYear :selected').data('stDate');
		var enDate = $('#cmbFinancialYear :selected').data('enDate');
		
		$('#hdFasPolicy').val(fasPolicy);
		$('#hdStDate').val(stDate);
		$('#hdEnDate').val(enDate);
		
		$.ajax({
			url:'SubmitRefundPaymentVoucherHostel.json',
			dataType:'json',
			type:'POST',
			data:{
				fasPolicy:fasPolicy,
				txtReceiptDate:receptDate,
				paidToType:PaidToType,
				paidTo:PaidTo,
				resourse:resourse+'',
				cmbDept:department+'',
				stDate:stDate,
				enDate:enDate,
				txtRemark:remark,
				accountDetails:argument,
				FeeData:FeeData,
				studentFeeInvoiceId:studentFeeInvoiceId,
				student:student,
			},
			async:false,
			beforeSend:function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
				
			},
			success:function(replay){
				//getStudentFeeDueReportOverallByStudentBatchId1(item.studentId,item.studentBatchId);
				//getStudentFeeDueReportOverallByStudentBatchId(replay.studentId,replay.StudentInstituteCourseSemesterBatchId);
				callback(flag,replay);
				/*jAlert(replay.msg);
				if(!replay.error){
					var instituteName = $('#instituteName').val();
					generatePaymentVoucher(replay.incomeReceipt,replay.receiptNo,replay.resCreatedBy,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark);
					getFilteredPaymentVoucher();
				}*/
				/*generatePaymentVoucher2(replay.incomeReceipt,replay.receiptNo,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark);*/
				
			},
			error:function(){
				jAlert("Something went wrong, Please try after some time");
			}
		});
	}else{
		try{
			callback(flag,new Array());
		}catch (e) {}
	}
}

function deleteOfflineStudentPaymentEntry(onlineTransactionPaymentSplitDetailsId,studentId,InstituteCourseId,type,otheramount,accountHeadId,accountname,studentFeeInvoiceId){
		$.ajax({
			url : 'deleteOfflineStudentPaymentEntry.json',
			dataType : 'text',
			data:{onlineTransactionPaymentSplitDetailsId:onlineTransactionPaymentSplitDetailsId.toString()},
			async : false,
			beforeSend : function() {
				startCommonAjaxSpinner();
			},
			complete : function() {
				stopCommonAjaxSpinner();
			},
			success : function(jArray) {
				jAlert("Record deleted successfully...!!");
				$('#commonDialogmakeofflinePaymentHostel').modal('hide');
			},
		});
	}
	
function installment(StudentId,hostelFees,studentName,institutecourseId,hostelPlanId,occupantId)
{
	hostelFees = g_TotalFeesReceivable;
	$('#installmentmodel').modal({
		keyboard: false,
	}).css({
		width: '1200px',
		'margin-left': function () {
			return -($(this).width() / 2);
		}
	});
	
	var boiler=''
		+ '<div><ul class="nav nav-pills">'
		+ '<li class="active addinstallmentId"><a data-toggle="tab" href="#personalDetails" onclick="installment1(\''+StudentId+'\','+hostelFees+',\''+studentName+'\',\''+institutecourseId+'\',\''+hostelPlanId+'\',\''+occupantId+'\');" >Add Installment</a></li>'
		+ '<li class=""><a data-toggle="tab" href="#personalDetailsOtherCourse" onclick="showstudentInstallment('+StudentId+',\''+studentName+'\');" >Installment History</a></li><ul>'
		+'</div><div id="installmentdiv2"></div>'
		$('#installmentdiv').html(boiler);
	installment1(StudentId,hostelFees,studentName,institutecourseId,hostelPlanId,occupantId);	
}

function installment1(StudentId,hostelFees,studentName,institutecourseId,hostelPlanId,occupantId){

	if(parseInt(hostelFees)>0){
        var boiler='<div class="label label-info" style="text-align:center">Note : Installment number are Automatically calculated wrt Installment Date</div>'+
		'<table class="table table-bordered" id="istallmenttable">'+
        '<th>Student Name</th><td>'+studentName+'</td><th class="gems_currency_label">Hostel Fees</th><td class="amt">'+hostelFees+'</td>'+
        '<th class = "installmentNo">Please Enter No. of Installments</th><td class = "installmentNo" style="width:70px;"><input type="text" id="noofinstallment" style="width:70px;text-align:right"></td>'+
        '<td class = "installmentNo"><input type="button" value="Submit" class="btn btn-mini btn-inverse" onclick="showstudentInstallmentNO('+StudentId+','+institutecourseId+','+hostelFees+','+occupantId+');"></td>'+
        '<tbody id="installmentbody"></tbody><tr><td colspan="12" style = "text-align:center"><div id="Addmoreinstallments"></td></tr></div></table>';
        $('#installmentdiv2').html(boiler);
        pullstudentInstallmentDetails(StudentId,institutecourseId);

		$("#noofinstallment").keypress(function (e) {
		var keyCode = e.which ? e.which : e.keyCode;
		var result = !( ( keyCode >= 65 && keyCode <= 90) || ( keyCode >= 33 && keyCode <= 47) || keyCode == 126 || ( keyCode >= 97 && keyCode <= 122) || ( keyCode >= 58 && keyCode <= 64) || ( keyCode >= 91 && keyCode <= 96));
		return result;
	});
    }
    else{
        jAlert("Student have insufficient amount for Installment");
    }
}

function showstudentInstallmentNO(StudentId,institutecourseId,hostelFees,occupantId)
{  

	console.log(institutecourseId+"::::::::::::::::::::::::::::::::::");
	var noofinstallments=$('#noofinstallment').val();
	jConfirm("You have entered  "+noofinstallments+ "   Installments Do You Want To Continue?","Confirm",function(r) {
		if(r ==true){
			showstudentInstallmentNO1(StudentId,institutecourseId,hostelFees,occupantId);
			pullstudentInstallmentDetails(StudentId,institutecourseId,occupantId);
		}
	})
}

function showstudentInstallmentNO1(StudentId,institutecourseId,hostelFees,occupantId,installment){
	var noofinstallments=$('#noofinstallment').val();
	if(installment!=undefined)
		noofinstallments=installment;
	$('#installmentbody').html('');
	var boiler='<tr><th>Installment No.</th><th>Installment Date</th><th class="gems_currency_label">Installment Amount</th><th>DD/Cheque No.</th><th>Bank Name</th><th>Branch Name</th><th>Date of Cheque or DD</th>'+
	'<th>Fee Structure Name</th>'+
	'<th style="width:70px;">Late Installment Charges</th><th style="width:70px;">Late Installment Charges On</th><th>Late Installment Account Head</th><th>Remove Installments</th></tr>';
	i=1;
	for(var k=0;k<noofinstallments;k++)
	{
		
		boiler+='<tr class="trclsinstallment"><input class=" trclsinstallmentId trclsinstallmentId_'+i+'" type="hidden" value="">'+
		'<td class="trclsinstallmentno gems_integer" id="'+i+'">'+i+'</td>'+
		'<td style="text-align:center"><input type="text" class="clsinstalmwntdate instDate_'+i+'" style="width:80px;" readonly="readonly"></td>'+
		'<td><input type="text" style = "text-align:right;width:70px;" class="clsinstalmwntamount instAmt_'+i+'" onkeyup="remainingamount()" id="amountI" >'+
		'</td><td><input type="text" class="clsDDorcheckno clsDDorcheckno_'+i+'"  id="amountI" style="width:70px;"></td><td><input type="text" class="bankname bankname_'+i+'"  id="amountI" style="width:70px;"></td><td><input type="text" class="Branch Branch_'+i+'"  id="amountI" style="width:70px;">'
		+'</td><td><input type="text" class="DateofBankorcheckno DateofBankorcheckno_'+i+'"  style="width:70px;" readonly="readonly"></td>'+
		'<td><select id="cmbFeeStructureId" class="cmbFeeStructureCls_'+i+' cmbFeeStructureAllCls" style="width:70px;"></select></td>'+
		'<td><input type="text" class="chargesamount Charges_'+i+'"  id="chargesamount" style="width:70px;"></td><td style="width:70px;"><select class="chargesType chargesType_'+i+'" name="academicSession" onchange="" style="width:70px;>'+
		'<option value="0">Select</option><option value="Day">Day</option><option value="Month">Month</option></select>'+
		'</td>'+
		'<td style="width:70px;"><select class="AccountHeadcls AccountHead_'+i+'" name="academicSession" onchange="" style="width:70px;"></select></td>'+
		'<td  class="reciptni'+i+'" style="text-align:center"><i class="deleteinstallment_'+i+' icon-remove" onclick="removeinstallments(this,'+StudentId+','+occupantId+');"></i></td ></tr>'+
		
		i++;
	}
	var boiler1='<input type="button" class="btn btn-mini btn-inverse" value="Save" onclick="saveinstallmentNowithamount('+StudentId+','+hostelFees+','+institutecourseId+','+occupantId+')">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
	boiler1+='<input type="button" class="btn btn-mini btn-inverse" value="Add More Installment" onclick="addMoreRows('+noofinstallments+','+StudentId+','+institutecourseId+','+occupantId+')"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Remaning Amount:<span id="remaningAmount"></span>';
	$('#installmentbody').append(boiler);
    $('#Addmoreinstallments').html('');
    $('#Addmoreinstallments').html(boiler1);

	$( ".clsinstalmwntdate" ).datepicker({
		dateFormat:"M dd,yy",
		showWeek: true,
		changeMonth: true,
		changeYear: true,
		onSelect: function(selected) {
			$(this).closest('tr').find('.DateofBankorcheckno').val($(this).val());
		}
	});

	$( ".DateofBankorcheckno" ).datepicker({
		dateFormat: "M dd,yy",
		showWeek: true,
		changeMonth: true,
		changeYear: true,
		yearRange:"-60:+99",
		onSelect : function(ev) {
		}
	});
	/*if($('#customerHelper').val()!='MATSUNIVERSITY'&& $('#customerHelper').val()!='CMR_UNIVERSITY' && $('#customerHelper').val()!='CMR_IT' && $('#customerHelper').val()!='MGMU'){
		$('.clsinstalmwntdate').datepicker('option','maxDate','May 31,2023');
	}*/	//showstudentInstallmentNO(StudentId,noofinstallments);
	console.log(institutecourseId+"::::::::::::::::::::::::::::::::::>>");
	var i=0;
	//getAccountHeadDetails(institutecourseId,i);
	getFeeStructureList();

}

function remainingamount()
{
	var totalamount=0;
	var amount = $('#istallmenttable').find('.amt').text();
	$('.trclsinstallment').each(function(){
		var Amount=$(this).find('td').eq(2).find('input').val()==undefined || $(this).find('td').eq(2).find('input').val()==""?"0":$(this).find('td').eq(2).find('input').val();
		totalamount+=eval(Amount);
		
	});
	/*if(totalamount>amount)
		{
		jAlert("Your Entered Amount Cross the Total fees Amount");
		}*/
	$('#remaningAmount').html(eval(amount-totalamount));
}
function getAccountHeadDetailsForHostel(institutecourseId,paymentMode)
{
	
	
	//var instituteCourseId =$('#institutecourseIds').val();
	console.log(institutecourseId+">>>>>>>>>>>>>>>>>>>>>>>>>.......paymentMode "+paymentMode);
	if(paymentMode==undefined || paymentMode=='' || paymentMode=='0')
		paymentMode=$('.paymentMode:visible').val();
		//url:'getAccountHeadsforEvaluationParameters.json',
	let feeItemId = $('#txtFeeStructureDescription').data('FeeItemId');
	let url = ''
	if($('#financeOnBuilding').val()=='true')
		url = 'getActiveAccountListByUserAndRoleId.json?feeItemId='+feeItemId;
	else
		url = 'getAccountHeadsforEvaluationParametersForHostel.json'
		
	$.ajax({
		url:url,
		dataType:'json',
		data:{
			instituteCourseId:institutecourseId,
			paymentMode:paymentMode
		},
		async:false,
		success:function(jArray){
			var boiler = '<option value = "0">Select</option>';
			var boiler1 = '<option value = "0">Select</option>';
			var boiler12 = '<option value = "0">Select</option>';
			var boiler0 = '<option value = "0">Select</option>';
			for(var i = 0 ; i < jArray.length ; i++){
				boiler += '<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
				if(paymentMode=='Cash' &&  jArray[i]["accountFor"]=='AccountHead_Petty_Cash'){
					boiler1+='<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
				}else if(paymentMode!='Cash' && jArray[i]["accountFor"]=='AccountHead_Bank'){
					boiler1+='<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
				}
				if(jArray[i]["accountFor"]=='AccountHead_Student_Miscellaneous' || jArray[i]["accountFor"]=='AccountHead_Fee_Head' || jArray[i]["accountFor"]=='AccountHead_Fee_Advance' 
						|| jArray[i]["accountFor"]=='AccountHead_Fee_Payable' ||  jArray[i]["accountFor"]=='AccountHead_Fees_Advance' 
						|| jArray[i]["accountFor"]=='AccountHead_Fee_Receivable' || jArray[i]["accountFor"]=='AccountHead_Scholarship'    ) {
					boiler12 += '<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
				}
				
				if(jArray[i]["accountFor"]==undefined)
					boiler0+='<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
			}
			var billIIId=$('.paymentMode:visible').attr('editAttrBill');

			$('.AccountHeadcls').html(boiler);
			$('#otherFeeAccountHeadpmt:visible').html(boiler1);
			$('#otherFeeAccountHeadpmt1:visible').html(boiler1);
			$('#otherFeeAccountHeadcmb:visible').html(boiler);
			$('#otherFeeAccountHeadcmb11:visible').html(boiler12);
			$('#otherFeeAccountHeadcmb'+billIIId).html(boiler12);
			
			if(paymentMode=='concession' || paymentMode=='Concession'){
				$('.AccountHeadcls').html(boiler0);
				$('#otherFeeAccountHeadpmt:visible').html(boiler0);
				$('#otherFeeAccountHeadpmt1:visible').html(boiler0);
				$('#otherFeeAccountHeadcmb:visible').html(boiler0);
				$('#otherFeeAccountHeadcmb11:visible').html(boiler0);
			}
			convertComboToSearchable('#otherFeeAccountHeadpmt1');///Requested by Ganesh Sir

		}
	});
	
	/*
	var rowCount = i;
	//var instituteCourseId =$('#institutecourseIds').val();
	console.log(institutecourseId+">>>>>>>>>>>>>>>>>>>>>>>>>.......");
	
	$.ajax({
		//url:'getAccountHeadsforEvaluationParameters.json?instituteCourseId='+institutecourseId,
		url:'getAccountheadListFromCacheByFinancePolicyId.json',
		data:{financePolicyId:g_financePolicyId},
		type:'POST',
		dataType:'json',
		async:false,
		success:function(jArray){
			var boiler = '<option value = "0">Select</option>';
			for(var i = 0 ; i < jArray.length ; i++){
				boiler += '<option value = "'+jArray[i]["account"]+'">'+jArray[i]["name"]+'</option>';
			}

			if(rowCount==0){
				$('.AccountHeadcls').html(boiler);
				$('#otherFeeAccountHeadcmb').html(boiler);
				//convertComboToSearchable('#otherFeeAccountHeadcmb');
			}else{
				$('.AccountHead_'+rowCount).html(boiler);
			}

		}
	});*/
}

var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
	 "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

function saveinstallmentNowithamount(StudentId,academicFee,institutecourseId)
{
	var dateStringArray=[];
	var totalamount=0.0;
	var flag=true;
	
	academicFee= $('.amt').text();
	
	$('.trclsinstallment').each(function(){
		var installmentDate = "";
		var instid=$(this).find('.trclsinstallmentId').val()==undefined || $(this).find('.trclsinstallmentId').val()==""?"0":$(this).find('.trclsinstallmentId').val();
		var date1=$(this).find('td').eq(1).find('input').val()==undefined || $(this).find('td').eq(1).find('input').val()==""?"":$(this).find('td').eq(1).find('input').val();
		if(date1==""){
			flag=false;
		}else{
			installmentDate =  moment(date1).format('YYYY-MM-DD');
		}
		
		var Amount=$(this).find('td').eq(2).find('input').val()==undefined || $(this).find('td').eq(2).find('input').val()==""?"0":$(this).find('td').eq(2).find('input').val();
		if(Amount==0){
			flag=false;
		}
		
		var ddcheckno=$(this).find('td').eq(3).find('input').val()==undefined || $(this).find('td').eq(3).find('input').val()==""?"0":$(this).find('td').eq(3).find('input').val();
		var bankname=$(this).find('td').eq(4).find('input').val()==undefined || $(this).find('td').eq(4).find('input').val()==""?"NA":$(this).find('td').eq(4).find('input').val();
		var branch=	$(this).find('td').eq(5).find('input').val()==undefined || $(this).find('td').eq(5).find('input').val()==""?"NA":$(this).find('td').eq(5).find('input').val();
		var dateofddcheck = "";
		var dateofddcheck1=$(this).find('td').eq(6).find('input').val()==undefined || $(this).find('td').eq(6).find('input').val()==""?"":$(this).find('td').eq(6).find('input').val();
		if(dateofddcheck1==""){
			dateofddcheck =  moment(new Date()).format('YYYY-MM-DD');
		}else{
			dateofddcheck = moment(dateofddcheck1).format('YYYY-MM-DD');
		}
		
		var feeItemId = $(this).find('#cmbFeeStructureId option:selected').val();
		if(feeItemId==0){
			flag=false;
		} 
			
		var ChargesType=$(this).find('.chargesType option:selected').text()==undefined || $(this).find('.chargesType option:selected').text()==""?" ":$(this).find('.chargesType option:selected').text();
		var chargesAmount=$(this).find('td').eq(8).find('input').val()==undefined || $(this).find('td').eq(8).find('input').val()==""?"0":$(this).find('td').eq(8).find('input').val();
		var AccountHead=$(this).find('.AccountHeadcls option:selected').val()==undefined || $(this).find('.AccountHeadcls option:selected').val()==""?"0":$(this).find('.AccountHeadcls option:selected').val();
		totalamount+=eval(Amount);
		
		dateStringArray.push(`<installmentData>
				<trInstallmentId>${instid}</trInstallmentId>
				<installmentDate>${installmentDate}</installmentDate>
				<installmentAmount>${Amount}</installmentAmount>
				<ddChequeNo>${ddcheckno}</ddChequeNo>
				<bankName>${bankname}</bankName>
				<branchName>${branch}</branchName>
				<dateOfChequeOrDD>${dateofddcheck}</dateOfChequeOrDD>
				<feeItemId>${feeItemId}</feeItemId>
				<chargesAmount>${chargesAmount}</chargesAmount>
				<ChargesType>${ChargesType}</ChargesType>
				<AccountHead>${AccountHead}</AccountHead>								
				</installmentData>`);
		
		//dateString +=instid+"@"+date+"@"+Amount+'@'+ddcheckno+"@"+bankname+"@"+branch+"@"+dateofddcheck+"@"+ChargesType+"@"+chargesAmount+"@"+AccountHead+'~~';
	});
	
	if(dateStringArray.length==""){
		jAlert("Please enter details ");
		return false;
	}
	var selectionXml = `<occupantInstallmentData>${dateStringArray.join('')}</occupantInstallmentData>`;
	
	
	if(!flag){
		jAlert("Please enter Installment Date,Amount and select Fee Structure");
		return false;
	}
	
	if(totalamount != eval(academicFee)){
		jAlert("Amount not Match ");
		return false;
	}
	
		
	$.ajax({
		url:'SavestudentInstallmentNowithAmountForHostel.json',
		dataType:'text',
		data:{StudentId:StudentId,occupantId:globalSource,xml_selectionXml:selectionXml},
		type:'POST',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jObject){
			jAlert("Saved Successfully");
			//showstudentInstallmentNO1(StudentId,institutecourseId,totalamount,0,occupantId);
			//installment1(StudentId,academicFee,'0',institutecourseId,'0',occupantId); 
			$('#installmentmodel').modal('hide');
			$('.addinstallmentId').trigger('click');
		},
		error:function(){}
	}); 
}

function removeinstallments(src,StudentId,occupantId){

	jConfirm("Do you want to Remove Installments?","Confirm",function(r) {
		if(r ==true){
			
			var instid=$(src).closest('tr').find('.trclsinstallmentId').val();
			if(instid==""){
				$(src).closest('tr').remove();
			}else{
			
			$.ajax({
				url:'removeStudentfeesInstallments.json',
				dataType:'text',
				data:{instid:instid,StudentId:StudentId,occupantId:globalSource},
				type:'POST',
				beforeSend: function() {
					startCommonAjaxSpinner();
				},
				complete: function() {
					stopCommonAjaxSpinner();
				},
				success:function(jObject){
					jAlert("Remove Successfully");
					$(src).closest('tr').remove();
					//showstudentInstallmentNO(StudentId);
				},
				error:function(){

				}
			});
			}
		}
	})
}

function removeHostelInstallmentsFromHistory(StudentId,instid,src){

	jConfirm("Do you want to Remove Installments?","Confirm",function(r) {
		if(r ==true){
			
			verifyInstallmentsForOnlinePayment(instid,StudentId,function(msg){
            if(msg!=''){
               jAlert(msg);
				return false;
             }
 	       });
       
			//
			$.ajax({
				url:'removeStudentfeesInstallments.json',
				dataType:'text',
				data:{instid:instid,StudentId:StudentId,occupantId:globalSource},
				type:'POST',
				beforeSend: function() {
					startCommonAjaxSpinner();
				},
				complete: function() {
					stopCommonAjaxSpinner();
				},
				success:function(jObject){
					jAlert("Remove Successfully");
					$(src).closest('tr').remove();
					//showstudentInstallmentNO(StudentId);
				},
				error:function(){

				}
			});
		}
	})
}


function addMoreRows(noofinstallments,StudentId,institutecourseId,occupantId) 
{ 
	var noofinstallments=$('#istallmenttable .trclsinstallment').length+1;
	//noofinstallments ++; 
	$('#noofinstallment').val(noofinstallments);
	var i=noofinstallments;
	var recRow=''+
	'<tr class="trclsinstallment"><td id="'+i+'" class="gems_integer">'+noofinstallments+'</td><td style="text-align:center"><input type="text" class="clsinstalmwntdate instDate_'+i+'" style="width:70px;" readonly="readonly"></td>'+
	'<td><input type="text" style = "text-align:right;width:70px;" class="clsinstalmwntamount instAmt_'+i+'"  id="amountI" onkeyup="remainingamount()"></td>'+
	'<td><input type="text" class="clsDDorcheckno clsDDorcheckno_'+i+'"  id="amountI" style="width:70px;"></td><td><input type="text" class="bankname bankname_'+i+'"  id="amountI" style="width:70px;"></td>'+
	'<td><input type="text" class="Branch Branch_'+i+'"  id="amountI" style="width:70px;"></td><td style="text-align:center">'+
	'<input type="text" class="DateofBankorcheckno DateofBankorcheckno_'+i+'"  style="width:70px;" readonly="readonly"></td>'+
	'<td><select id="cmbFeeStructureId" class="cmbFeeStructureCls_'+i+' cmbFeeStructureAllCls" style="width:70px;"></select></td>'+
	'<td><input type="text" class="chargesamount Charges_'+i+'"  id="amountI" style="width:70px;"></td>'+
	'<td style="width:70px;"><select class="chargesType chargesType_'+i+'" name="academicSession" onchange="" style="width:70px;>'+
	'<option value="0">Select</option><option value="0">Day</option><option value="0">Month</option></select>'+
	'</td><td><select class="AccountHeadcls AccountHead_'+i+'" name="academicSession" onchange="" style="width:70px;"></select></td><td style="text-align:center"><i class="icon-remove" onclick="removeinstallments(this,'+StudentId+');"></i></td></tr>';
	
	$('#installmentbody').append(recRow);
	$( ".clsinstalmwntdate" ).datepicker({
		dateFormat:"M dd,yy",
		showWeek: true,
		changeMonth: true,
		changeYear: true,
	});
	
	$( ".DateofBankorcheckno" ).datepicker({
		dateFormat: "M dd,yy",
		showWeek: true,
		changeMonth: true,
		changeYear: true,
		yearRange:"-60:+99",
		onSelect : function(ev) {
		}
	});
	
	getAccountHeadDetails(institutecourseId,i);
	getFeeStructureList(i);
}

function pullstudentInstallmentDetails(StudentId,institutecourseId,occupantId){
	  var noofinstallments=$('#noofinstallment').val()!=null && $('#noofinstallment').val()!=undefined && $('#noofinstallment').val()!='' ?$('#noofinstallment').val():0;
	/*var feeItemIdSel = $('#feeStructureIdSel option:selected').val();
	if(feeItemIdSel==0){
		jAlert("Please select Fee Structure");
		return false;	
	}*/
	
	  $.ajax({
		url:'getstudentInstallmentNowithAmountNotPaidReceiptsForHostel.json',
	
		dataType:'json',
		data:{StudentId:StudentId,noofinstallments:noofinstallments,occupantId:occupantId},
		type:'POST',
		beforeSend: function() {
			startCommonAjaxSpinner();
		},
		complete: function() {
			stopCommonAjaxSpinner();
		},
		success:function(jArrayM){
			var jArray = jArrayM[0];
			if(jArray.length>0 && jArray[0]['NoAuthority']!=undefined){
				$('#installmentmodel').modal('hide');
				$('#installmentdiv').html('');
				jAlert(jArray["0"]["NoAuthority"]);
			}
			else if(jArray.length>0 && jArray[0]['installmentStatus']!=undefined && jArray[0]['installmentStatus']!=""){
				$('.installmentNo').show();
			
			}
			else{
				
				
				var amount = $('#istallmenttable').find('.amt').text();
				showstudentInstallmentNO1(StudentId,institutecourseId ,amount,occupantId,jArray.length);
				$('.installmentNo').hide();
				k=1;
				var i=0;
				//getAccountHeadDetails(institutecourseId,i);
				bindAccountHeadForInstallmentForHostel(institutecourseId,i);
				var feeStructureList = gStudentListJsonArray[0];
				
				setTimeout(function(){
				for(var i=0;i<jArray.length;i++)
				{
					//if(feeItemIdSel==jArray[i]["feeItemId"]){
					var boiler1='<option value="0">Select</option>';
					for(var m=0;m<feeStructureList.length;m++){
						boiler1+='<option value="'+feeStructureList[m].feeItemId+'">'+feeStructureList[m].feeStructureName+'</option>';
					}
	
					$('.cmbFeeStructureCls_'+k).html(boiler1);
					
					$('#'+k).html(jArray[i]["installmentNo"]);
					$('.instDate_'+k).val(jArray[i]["installmentDate"]);
					$('.instAmt_'+k).val(jArray[i]["installmentAmount"]);
					$('.clsDDorcheckno_'+k).val(jArray[i]["ddorcheckno"]);
					$('.bankname_'+k).val(jArray[i]["Bankname"]);
					$('.Branch_'+k).val(jArray[i]["branch"]);
					$('.DateofBankorcheckno_'+k).val(jArray[i]["dateofcheckordd"]);
					$('.cmbFeeStructureCls_'+k).val(jArray[i]["feeItemId"]);
					$('.trclsinstallmentId_'+k).val(jArray[i]["installmentid"]);
					$('.Charges_'+k).val(jArray[i]["ChargesAmount"]);
					$('.chargesType_'+k).val(jArray[i]["ChargesType"]);
					//$('.AccountHead_'+k).val(jArray[i]["Accounthead"]);
					$('.AccountHead_'+k+' option[value="'+jArray[i]["Accounthead"]+'"]').attr('selected',true);
					if(jArray[i]["recieptNo"]!="")
						{
						$('.reciptni'+k).hide();
						$('.reciptni'+k).html('');
						$('.reciptni'+k).html(jArray[i]["recieptNo"]);
						$('.reciptni'+k).show();
						}
					else
						$('.reciptni'+k).show();
						
					k++;
					//}
				}
				},500);
			}
			

		},
		error:function(){

		}
	});
	
}

function showstudentInstallment(StudentId,studentName){
	//$('#installmentdiv').html('');
	$.ajax({
			url:'getstudentsettelmentinstallmentForHostel.json',
			dataType:'json',
			data:{StudentId:StudentId},
			type:'POST',
			beforeSend: function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
			},
			success:function(jArray){
				var  boiler1='<div class="label label-info" style="text-align:center">Installment Details</div><br><table class="table table-bordered table-condensed tablePrint"  style="margin-top:-14px">'+
				'<tr><th>Sr. No.</th><th>Installment No</th><th>Installment Date</th><th>Installment Amount</th><th>Fee Structure Name</th><th>Receipt No</th>'+
				'<th>Remove Installments</th></tr>';
				if(jArray.length>0){
					for(var k=0;k<jArray.length;k++)
					{
						boiler1+='<tr><td class="gems_integer">'+eval(k+1)+'</td><td class="gems_integer">'+jArray[k]["installmentNo"]+'</td>'+
						'<td>'+jArray[k]["installmentDate"]+'</td><td class="gems_currency" style="text-align:right">'+jArray[k]["installmentAmount"]+'</td>'+
						'<td>'+jArray[k]["feeStructureName"]+'</td><td>'+jArray[k]["recieptNo"]+'</td>';
						
						if(jArray[k]["recieptNo"]!="")
							boiler1+='<td></td>';
						else
							boiler1+='<td style="text-align:center"><i class="deleteHostelinstallment icon-remove" onclick="removeHostelInstallmentsFromHistory('+StudentId+','+jArray[k]["installmentid"]+',this);"></i></td>';
						
						boiler1+='</tr>';
					}
				}
				else{
					boiler1+='<tr><td colspan="5">Data Not Found !!!</td></tr>';

				}
				$('#installmentdiv2').html(boiler1);
			},
			error:function(){

			}
		});
}

function getFeeStructureList(cnt){
	var feeStructureList = gStudentListJsonArray[0];
	
	var boiler='<option value="0">Select</option>';
	for(var i=0;i<feeStructureList.length;i++){
		boiler+='<option value="'+feeStructureList[i].feeItemId+'">'+feeStructureList[i].feeStructureName+'</option>';
	}
	
	if(cnt>0)
		$('.cmbFeeStructureCls_'+cnt).html(boiler);
	else
		$('.cmbFeeStructureAllCls').html(boiler);
}

function verifyInstallmentsForOnlinePayment(installmentId,StudentId,callback){
     $.ajax({
          url:'verifyHostelFeesInstallmentsForOnlinePayment.json',
          dataType:'text',
          data:{installmentId:installmentId,StudentId:StudentId},
          type:'POST',
          beforeSend: function() {
              startCommonAjaxSpinner();
          },
          complete: function() {
               stopCommonAjaxSpinner();
          },
          success:function(msg){
                callback(msg);
          },
          error:function(){}
   });
}
function checkEditDeleteAuthorityForFinance(financePolicyId) {
    
    $.ajax({
        url : 'checkEditDeleteAuthorityForFinance.json',
        dataType : 'json',
        data : {financePolicyId:financePolicyId},
        type :'POST',
        async : false,
        junoSpinner:true,
        success : function(jArray) {
            if(!jArray.error) {
                $('#txtStudentSearchBarInvoiceHostel').data('isEditDeleteAuth',jArray.Flag);
            }else {
                console.error("Something went wrong, Please try after some time","Error");
                console.error(jArray.Msg);
                $('#txtStudentSearchBarInvoiceHostel').data('isEditDeleteAuth',false);
            }
        },
    });

}
function checkEditDeleteAuthorityForInvoice() {
    jAlert('You doesn\'t have Edit Invoice Authority');
}

function getAccountHeadDetailsForHostelNew(institutecourseId, paymentMode,callback)
{
	if(paymentMode==undefined || paymentMode=='' || paymentMode=='0')
		paymentMode='';
	$.ajax({
		url:'getAccountHeadsforEvaluationParametersForHostel.json?instituteCourseId='+institutecourseId,
		dataType:'json',
		async:false,
		data:{paymentMode:paymentMode},
		success:function(jArray){
			callback(jArray);
		}
	});
}
function bindAccountHeadForInstallmentForHostel(institutecourseId) {
	var paymentMode ='Installment';
	getAccountHeadDetailsForHostelNew(institutecourseId, paymentMode,function(jArray){
		var boiler='';
		for(let i = 0 ; i < jArray.length ; i++){
			boiler += '<option value = "'+jArray[i]["accountHeadId"]+'">'+jArray[i]["accountHeadName"]+'</option>';
		}
		$('.AccountHeadcls').html(boiler);
	});
}

function getAdvancePaymentOptionForHostel() {
	$.ajax({
     	url:'getAdvancePaymentStatus.json',		
		data:{},
		type:'POST',
		junoSpinner:true,
		dataType:'json',
		success:function(jObj){
			if(jObj.AdvanceFee=='true') {
				$('#idAdvancePayment').show();
			}
		},
		error:function(){
			jAlert("Something went wrong, Please try after some time","Error");
		}
	});
	
}

function payAdvanceFeeForHostel(){
	if($('#ckbPayAdvanceFees').is(":checked")){
		$('#tblStudentAdvancePayment').show();
		$('#studentOfflinePaymentDetails').hide();
		$('.clsForDeletedNo1').hide();
		$('.clsForDeletedNo').hide();
	    $('#cmbDeletedReceiptNo').val('');
	}else {
		$('#tblStudentAdvancePayment').hide();
		$('#studentOfflinePaymentDetails').show();
		$('.clsForDeletedNo1').show();
	}
	//return jAlert("Sahi ja rahe ho");
}

function calculateAmountAdvanceForHostel(){
	
	var Amt=eval(($('#txtPayAdvanceFees').val()!=''||$('#txtPayAdvanceFees').val()!=null)?$('#txtPayAdvanceFees').val():0);
	if(Amt>0){
		$('#payAdvanceAmt').text(Amt);
	}else{
		jAlert("Please Enter valid Advance Amount");
		$('#payAdvanceAmt').text('0');
		return false;
	}
}
function advanceFeesDetail(studentId){

	$.ajax({
     	url:'getAdvancePaymentDeatil.json',		
		data:{studentId:studentId},
		type:'POST',
		junoSpinner:true,
		dataType:'json',
		success:function(jArray){
			
			
			var boiler='';
			boiler+='<table id="StudAdvanceId" class="table table-bordered">'+
			'<thead>'+
			'<tr>'+
			'<th>Sr.No.</th>'+
			'<th>Student Name</th>'+
			'<th>Account Name</th>'+
			'<th class="gems_currency_label">Amount</th></thead><tbody id="tBodyId"></tbody></table>';
			
			juno.modal({
			id:'advanceData',
			header: 'Advance Fees',
			body:boiler,
			//footer: '<input type="button" value="Save" onclick="saveCosMapping('+empSubEvalSchema+','+COMappingId+');" class="btn btn-mini btn-inverse">',
			width: '650px'
		});
			
			if(jArray.length>0)
			{
				var studentList ='';
				for(var i=0;i<jArray.length;i++)
				{	
					
						 studentList+='<tr>'+
						'<td>'+eval(i+1)+'</td>'+
						'<td>'+jArray[i]["studentName"]+'</td>'+
						'<td>'+jArray[i]["accountName"]+'</td>'+
						'<td class="gems_currency">'+jArray[i]["Amount"]+'</td>';
						
				}
				$('#tBodyId').html(studentList);
			}else{
				
				 studentList+='<tr>'+
						'<td colspan="4">Data Not Found</td>';
				
				$('#tBodyId').html(studentList);
			}
		
		},
		error:function(){
			jAlert("Something went wrong, Please try after some time","Error");
		}
	});
}

function studentBillSortingReceiptHostel(studentFeeInvoiceId){
	if(studentFeeInvoiceId==0 || studentFeeInvoiceId=='0')
		studentFeeInvoiceId=$('#btnStudentInvoiceCancel').data('studentFeeInvoiceId');
	$.ajax({
		url : 'getStudentBillListforSortingHostel.json',
		dataType : 'json',
		data:{
			studentFeeInvoiceId:studentFeeInvoiceId
		},
		success : function(jArray) {
			var _tbody='',_tfoot='';
			if(jArray.length>0){
				//if accHeadId is 0 then run cron updatestudentBillDetails
				var tot=0.0;var cnt=1;
				for(var i in jArray) {
					const{ studentBillId=0, billNo='', billDate='', amount=0.0, paymentMode='',accHeadId =0, feeItemId =0,studentName='',
					financePolicyId =0,studentId =0,rollNo='',bankName='',chequeDDdate='',chequeDDNo='',bankBranch='',feeInvoiceId =0,instituteCourseId =0,remark='',
					hostelPlanId = 0,ocupantId = 0}=jArray[i];
					if(accHeadId>0){
						_tbody+=`<tr id="sb_${cnt}" value="${studentBillId}" 
								studentBillId="${studentBillId}"
								billNo="${billNo}"  billDate="${billDate}"
								amount="${amount}"  paymentMode="${paymentMode}"
								accHeadId="${accHeadId}"  amount="${amount}"
								feeItemId="${feeItemId}"  studentName="${studentName}"
								financePolicyId="${financePolicyId}"  studentId="${studentId}"
								rollNo="${rollNo}"  bankName="${bankName}"
								chequeDDdate="${chequeDDdate}" chequeDDNo ="${chequeDDNo}"
								bankBranch="${bankBranch}"  feeInvoiceId="${feeInvoiceId}"
								instituteCourseId="${instituteCourseId}" remark="${remark}"
								hostelPlanId = "${hostelPlanId}" ocupantId= "${ocupantId}"
								class="clsStudentBill">
								<td class="gems_integer">${cnt}</td>
								<td id="Date_${cnt}">${billDate}</td>
								<td id="No_${cnt}">${billNo}</td>
								<td id="Mode_${cnt}">${paymentMode}</td>
								<td class="gems_currency" id="Amt_${cnt}">${amount}</td>
								<td style="text-align:right" id="Pro_${cnt}">
									<input type="text" id="txtPro_${studentBillId}" class="clstxtPro" style="text-align:right;height:20px;max-width:120px;"></td>
								</tr>`;
						tot=+eval(amount);
						cnt++;
					}
				}
				_tfoot=`<tr><th class="gems_currency_label" style="text-align:right" colspan="4">Total</th><th class="gems_currency">${tot}</th><th></th></tr>`;	
			}else {
				_tbody=`<tr><th colspan="8">data not found !!</th></tr>`;
			}
			var _table=`<div class="tab-pane" id="addConfiguration" style="min-height: 500px; overflow-y: hidden;">
					<div><strong id="fileSizeAllowed"><b>Note : </b><i class="icon-hand-right"></i><strong id="fileSizeAllowed"><b> Excluded bills: "Other/Transferred," "Adjustment," "TRANSFER Mode," and cases with missing account head updates.</b><br></strong></strong></div><br>
					<table class="table table-bordered"><thead><tr>
					<th>Sr. No.</th><th>Bill Date</th><th>Bill No</th><th>Mode of Payment</th><th class="gems_currency_label">Bill Amount</th><th>order</th></tr></thead>
					<tbody id="tbodyIdBills">${_tbody}</tbody>
					<tfoot>${_tfoot}</tfoot>
					</table></div>`;

			var foot=`<div class = "preview"></div><input id="btnConcessionSave" type="button" value="Save Bill Prioriry" onclick="validateBillPriority(${studentFeeInvoiceId})" class="btn btn-mini btn-success">&nbsp;&nbsp;`;
			juno.modal({
				header:'Student Bill sorting',
				body:_table,
				footer :foot,
				width: '750px'
			});
			applyGemsPlugins();
			$('.clstxtPro').numeric();
		},
		error : function() {
			jAlert("Something went wrong, Please try after some time","Error");
		}
	});
}

function validateBillPriority(studentFeeInvoiceId) {
	var jArray=new Array();
	
	var array = new Array();
	var subjects = '';
	var priorityFlag = false;
	var billArray = new Array();
	var BillIdArr = new Array();
	$('.clsStudentBill').each(function(cnt) {

		var studentbillid = $(this).closest('tr').attr('studentbillid');
		var billno = $(this).closest('tr').attr('billno');
		var billdate = $(this).closest('tr').attr('billdate');
		var amount = $(this).closest('tr').attr('amount');
		var paymentmode = $(this).closest('tr').attr('paymentmode');
		var accheadid = $(this).closest('tr').attr('accheadid');
		var feeItemId = $(this).closest('tr').attr('feeItemId');
		var studentName = $(this).closest('tr').attr('studentName');
		var financePolicyId = $(this).closest('tr').attr('financePolicyId');
		var studentId = $(this).closest('tr').attr('studentId');
		var rollNo = $(this).closest('tr').attr('rollNo');
		var bankName = $(this).closest('tr').attr('bankName');
		var chequeDDdate = $(this).closest('tr').attr('chequeDDdate');
		var chequeDDNo = $(this).closest('tr').attr('chequeDDNo');
		var bankBranch = $(this).closest('tr').attr('bankBranch');
		var feeInvoiceId = $(this).closest('tr').attr('feeInvoiceId');
		var instituteCourseId = $(this).closest('tr').attr('instituteCourseId');
		/*var courseStrenthId = $(this).closest('tr').attr('courseStrenthId');
		var studInstCourseSemesterBatchId = $(this).closest('tr').attr('studInstCourseSemesterBatchId');*/
		var hostelPlanId = $(this).closest('tr').attr('hostelPlanId');
		var ocupantId = $(this).closest('tr').attr('ocupantId');
		var remark = $(this).closest('tr').attr('remark');
		BillIdArr.push(studentbillid+'_'+financePolicyId);
		var priority = $('#txtPro_' + studentbillid).val();
		if (priority == '') {
			priorityFlag = true;
			billArray.push(billno);
		}
		if (priority != '') {
			subjects = '{'
				+ '\"studentbillid\":\"' + studentbillid + '\",'
				+ '\"billno\":\"' + billno + '\",'
				+ '\"billdate\":\"' + billdate + '\",'
				+ '\"amount\":\"' + amount + '\",'
				+ '\"paymentmode\":\"' + paymentmode + '\",'
				+ '\"accheadid\":\"' + accheadid + '\",'
				+ '\"feeItemId\":\"' + feeItemId + '\",'
				+ '\"studentName\":\"' + studentName + '\",'
				+ '\"financePolicyId\":\"' + financePolicyId + '\",'
				+ '\"studentId\":\"' + studentId + '\",'
				+ '\"rollNo\":\"' + rollNo + '\",'
				+ '\"bankName\":\"' + bankName + '\",'
				+ '\"chequeDDdate\":\"' + chequeDDdate + '\",'
				+ '\"chequeDDNo\":\"' + chequeDDNo + '\",'
				+ '\"bankBranch\":\"' + bankBranch + '\",'
				+ '\"feeInvoiceId\":\"' + feeInvoiceId + '\",'
				+ '\"instituteCourseId\":\"' + instituteCourseId + '\",'
				+ '\"remark\":\"' + remark + '\",'
				+ '\"priority\":\"' + priority + '\",'
				+ '\"hostelPlanId\":\"' + hostelPlanId + '\",'
				+ '\"ocupantId\":\"' + ocupantId + '\"'
				+ '}';
				
				/*+ '\"courseStrenthId\":\"' + courseStrenthId + '\",'
				+ '\"studInstCourseSemesterBatchId\":\"' + studInstCourseSemesterBatchId + '\",'*/

			array.push(subjects);
		}
	});
	
	if (billArray.length >0) {
		jAlert('Please Provide Student Bill priority for Bill ' + billArray.toString(), 'warning');
		return;
	}
	//console.log("BEFORE",array);
         array = '['+array.join(',')+']';
         array= JSON.parse(array);
        array.sort((a, b) => parseInt(a.priority, 10) - parseInt(b.priority, 10));
       // console.log("AFTER",array);
       
        
	$.ajax({
		url: 'recalculateBillsPaidHostel.json',
		dataType: 'text',
		beforeSend: function() {
			$('#btnConcessionSave').prop("disabled", true);
			startLoading();
		},complete: function() {
			stopLoading();
			$('#btnConcessionSave').prop("disabled", false);
		},data: {
			studentFeeInvoiceId: studentFeeInvoiceId,
			billsString: JSON.stringify(array),
			billIdArr:BillIdArr.toString()
		},success: function(text) {
			if (text == 'success') {
				juno.modal('hide');
				jAlert("Saved Student Bill Priority", "success");
				getHostelStudentBillingDetails(function(jArray){
					showStudentHostelBillingDetails(jArray);
				});
			} else
				jAlert("Something went wrong, Please try after some time", "Error");
		},
		error: function() {
			jAlert("Something went wrong, Please try after some time", "Error");
		}
	});
}

function showStudentAdjustmentHostel(studId,feeItemId=0,instituteCourseId){
	studentId = studId;
$('#commonDialogmakeMakePaymentOfflineHostel').modal({
		keyboard: false,
	}).css({
		width: '1000px',
		'margin-left': function () {
			return -($(this).width() / 2);
		}
	});
	$('#commonDialogBodymakePaymentOfflineHostel').html('');
	
	$.ajax({      
		url:'getStudentPaymentDetailsforMiscAdjustment.json',
		data:{studentId:studId,
			  feeItemId:feeItemId,
			  hostelTypeId:1},
		dataType:'json',
		async:false,
		junoSpinner:true,
		success:function(jArray){
			var drcrFlag=false;
			
			var boiler='<br>'+
			'<br><table class="table table-bordered table-striped table-condensed" style="width:100%;" id="studentOfflinePaymentDetails">'+
			'<tr><th colspan="2">Settlement Date</th><td colspan="4"><input type="text" readonly id="AdjSettelmentdate"></td>'+
			'<tr><th>Sr. No.</th><th></th><th>Particulars</th><th class="gems_currency_label">Amount</th><th class="gems_currency_label">From Amount</th><th class="gems_currency_label">To Amount</th></tr>';
			if(jArray.length>0){
				for(var i=0;i<jArray.length;i++){
				     const{studentExceptionInvoiceId=0,studentHostelFineId=0,unitPrice,description,studentId,academics,fromYear,feeItemId,priority,feeDetail,accountheadId,DrCr,studentFeeInvoiceId,type,financePolicyId,courseType}=jArray[i];
			    
			        if(DrCr=='Dr')
			          drcrFlag=true;
			       
			       if(unitPrice!=0) { 
					boiler+=`<tr>
					   <td class="gems_integer">${i+1}</td>
					   <td><input type="checkbox" DrCr="${DrCr}" studentFeeInvoiceId="${studentFeeInvoiceId}" studentHostelFineId=${studentHostelFineId} studentExceptionInvoiceId="${studentExceptionInvoiceId}" feeItemId="${feeItemId}" types="${type}" class="clsAmountts clsTransAmts chks_${studentExceptionInvoiceId}" accountheadid="${accountheadId}" financePolicyId="${financePolicyId}" courseType="${courseType}" disabled="disabled" checked></td>
					   <td>${feeDetail}</td>
					   <td class="gems_currency invAmtCls">${eval(unitPrice)}</td>`;
					   if(DrCr=='Dr')
					       boiler+=`<td><input type="text" class="clsformAmt" onkeyup="calculateAmtsForAdjHostel(this,${Math.abs(eval(unitPrice))})" style="text-align:right;width:90px;" value="${Math.abs(eval(unitPrice))}"></td>`;
					   else 
					      boiler+=`<td></td>`;
					   if(DrCr=='Cr')
					        boiler+=`<td><input type="text" class="clstoAmt" onkeyup="calculateAmtsForAdjHostel(this,${Math.abs(eval(unitPrice))})" style="text-align:right;width:90px;" value="${Math.abs(eval(unitPrice))}"></td>`;
					   else
					       boiler+=`<td></td>`;
					      boiler+=`</tr>`;
					   }
				}
				boiler+='<tr><td colspan="3" style="text-align:center">Total</td><td class="gems_currency" id="invAmtId"></td><td class="gems_currency" id="clsformAmt"></td><td class="gems_currency" id="clstoAmt"></td></tr>';
				boiler+='<tr><td colspan="6" style="text-align:center"><input type="button" class="btn btn-mini btn-inverse" value="Submit" onclick="saveStudentAdjustMentHostel('+studentId+','+instituteCourseId+')"></td></tr>';
			}else{
				boiler+='<tr><td colspan="6">Data Not Found</td></tr>';
			}
			if(!drcrFlag)
			   boiler='<tr><td style="background-color: #f0d8d8;"colspan="6">Adjustment Data Not Found</td></tr>';
		
			$('#commonDialogBodymakePaymentOfflineHostel').html(boiler);
	//		$('.claAmts').trigger('onclick');
			$('.clsExceed').numeric();
		/*	$('#AdjSettelmentdate').datepicker({
				dateFormat:"M dd,yy",
				showWeek: true,
				changeMonth: true,
				changeYear: true,
			});*/
			
			$('#AdjSettelmentdate').datepicker({
				dateFormat : "M dd,yy",
				inline : true,
				changeMonth : true,
				changeYear : true,
				maxDate:new Date(),
				yearRange : "-40:+0",
				firstDay : 1,
			});
		
			var invAmt = 0;
			$('.invAmtCls').each(function(){
				var tmp = $(this).text()!=undefined && $(this).text()!='' ? $(this).text() :'0';
				invAmt +=eval(tmp);
			});
			$('#invAmtId').text(invAmt);
			
			var amtInProcess = 0;
			$('.clsformAmt').each(function(){
				var tmp = $(this).val()!=undefined && $(this).val()!='' ? $(this).val() :'0';
				amtInProcess +=eval(tmp);
			});
			$('#clsformAmt').text(amtInProcess);
			
			var amtInProcess = 0;
			$('.clstoAmt').each(function(){
				var tmp = $(this).val()!=undefined && $(this).val()!='' ? $(this).val() :'0';
				amtInProcess +=eval(tmp);
			});
			$('#clstoAmt').text(amtInProcess);
		
			
		},
		error:function(){
			jAlert("No Records","Error");
		}
	});


}

function calculateAmtsForAdjHostel(src,amount){
	var amt=$(src).val();
	if(eval(amt) > eval(amount) || eval(amt)<0){
		jAlert('Please enter valid amount');
		$(src).val('');
		
		
		var amtInProcess = 0;
		$('.clsformAmt').each(function(){
			var tmp = $(this).val()!=undefined && $(this).val()!='' ? $(this).val() :'0';
			amtInProcess +=eval(tmp);
		});
		$('#clsformAmt').text(amtInProcess);
		
		var toamount = 0;
		$('.clstoAmt').each(function(){
			var tmp = $(this).val()!=undefined && $(this).val()!='' ? $(this).val() :'0';
			toamount +=eval(tmp);
		});
		$('#clstoAmt').text(toamount);
		return false;
	}
	
	var amtInProcess = 0;
	$('.clsformAmt').each(function(){
		var tmp = $(this).val()!=undefined && $(this).val()!='' ? $(this).val() :'0';
		amtInProcess +=eval(tmp);
	});
	$('#clsformAmt').text(amtInProcess);
	
	var toamount = 0;
	$('.clstoAmt').each(function(){
		var tmp = $(this).val()!=undefined && $(this).val()!='' ? $(this).val() :'0';
		toamount +=eval(tmp);
	});
	$('#clstoAmt').text(toamount);
	
}

function saveStudentAdjustMentHostel(studentId,instituteCourseId){
	var formAmt=eval($('#clsformAmt').text());
	var toAmt=eval($('#clstoAmt').text());
	
	var studentName=gStudentListJsonArray[1][0].name;
	
	 if(studentName==undefined)
	     studentName="";
	     
	 var paymentSettelmentDate=$('#AdjSettelmentdate').val();
	 if(paymentSettelmentDate=='' || paymentSettelmentDate==undefined || paymentSettelmentDate=='null')
		 {
		 jAlert('Please select Settlement Date');
		 return false;
		 }
		 
	if(formAmt!=toAmt){
		jAlert('Transfer from amount and Transfer to amount is not matching can not perform this action');
		return false;
	}
	var dataString="";
	var misDataString="";
	var financepolicyid=gStudentListJsonArray[1][0].financePolicyId;
	var courseType = "";
	$('.clsTransAmts:checked').each(function(){
		
		var Amount=0.0;
		var type = $(this).attr('types');
		var DrCr = $(this).attr('DrCr');
		var studentHostelFineId = $(this).attr('studentHostelFineId');
		var studentExceptionInvoiceId = $(this).attr('studentExceptionInvoiceId');
		var feeItemId = $(this).attr('feeItemId');
		var accountheadId = $(this).attr('accountheadId');
		var fromAmt=$(this).closest('tr').find('.clsformAmt').val();
		var toAmt=$(this).closest('tr').find('.clstoAmt').val();
		var studentFeeInvoiceId=$(this).attr('studentFeeInvoiceId');
		    courseType = $(this).attr('courseType');
		
		if(fromAmt!='' && fromAmt!=undefined)
		  Amount=fromAmt;
		if(toAmt!='' && toAmt!=undefined)
		  Amount=toAmt;
		  
     		var feeData="";
					if(type=="Misc")
					    feeData=studentHostelFineId+'_'+studentExceptionInvoiceId+'_'+Math.abs(eval(Amount))+'_'+feeItemId+'_'+accountheadId+'_'+DrCr+'_'+type+'_'+financepolicyid;
					else
						feeData=studentFeeInvoiceId+'_'+studentExceptionInvoiceId+'_'+Math.abs(eval(Amount))+'_'+feeItemId+'_'+accountheadId+'_'+DrCr+'_'+type+'_'+financepolicyid;
						
		//var feeData=$(this).attr('feedata');
		var DrCr = $(this).attr('DrCr');
		if(DrCr=="Dr")
			dataString += feeData+"~";
		else if(DrCr=="Cr")
			misDataString += feeData+"~";
		
	});
	let instituteId = gStudentListJsonArray[1][0].instituteId;
	$.ajax({
			url:'saveStudentPaymentDetailsforMiscAdjustment.json',
			data:{
				studentId:studentId,
				dataString:dataString,
				misDataString:misDataString,
				paymentSettelmentDate:paymentSettelmentDate,
				financepolicyId:financepolicyid,
				studentName:studentName,
				instituteCourseId:instituteCourseId,
				courseType:courseType,
				instituteId:instituteId
			},
			type:'GET',
			dataType:'json',
			junoSpinner:true,
			success:function(jArray){
				if(jArray.responseFlag != undefined && jArray.responseFlag == 0) {
					jAlert(jArray.responseText);
					return false;
				}
				$('#commonDialogmakeMakePaymentOfflineHostel').modal('hide');
				jAlert('Entry transfered successfully');
			}
		});
	
}


function SubmitRefundPaymentVoucherHostFeeInvoice(fasPolicy,student,studentFeeInvoiceId,callback)
{

	
	var totalDebit = parseFloat(0);
	var totalCredit = parseFloat(0);
	
	var FeeData=new Array();
	let returnFlag = false;
	var argument =  '[';
	$('.tr_particularRow:not(.hideReundExtraTrCls)').each(function(){
		var index = $(this).attr('id').split('-')[1];
		if(index!="0" && index!=0){
		var CrDrType = 'Dr';
		var amount = "0";
		if(!($('#txt_DrAmount-'+index).is(':disabled'))){
			CrDrType = 'Dr';
			amount = $('#txt_DrAmount-'+index).val()!=undefined ? $('#txt_DrAmount-'+index).val():0;
			totalDebit += parseFloat(amount);
		}else{
			CrDrType = 'Cr';
			amount = $('#txt_CrAmount-'+index).val()!=undefined ? $('#txt_CrAmount-'+index).val():0;
			totalCredit += parseFloat(amount);
		}
		var studFeeInvoiceIdS=0;
		if($("#studFeeInvoiceIdS-"+index).val()!=undefined)
		studFeeInvoiceIdS=$("#studFeeInvoiceIdS-"+index).val();
		
		var particular = ($('#sel_ParticularAccounthead_'+index).val()!=undefined?$('#sel_ParticularAccounthead_'+index).val():"-1"+'').split('argSep')[0];//!=undefined ? $('#sel_ParticularAccounthead_'+index).val():''
		
		var acDetail = $('#sel_ParticularAccounthead_'+index).val();
		
		var studenthostelfineid = $('#studenthostelfine_'+index).val();
		
		if(CrDrType=='Dr'){
			let valueArray = $(this).data('array');
			if(valueArray==undefined)
				returnFlag=true;
			//FeeData+=particular+'#'+amount+'~'
			FeeData.push({particular:particular,amount:amount,studentFeeInvoiceId:valueArray.studentFeeInvoiceId,
				studentExceptionInvoiceId:valueArray.studentExceptionInvoiceId,stdHostelFineId:valueArray.stdHostelFineId,
				feeItemId:valueArray.feeItemId})
					
		}
		if(acDetail!=null && acDetail!=undefined)
		{
			if(($('#sel_ParticularAccounthead_'+index).val()+'').split('argSep')[1]=='true')
				bankHistory = $('#sel_ParticularAccounthead_'+index).val();
			
			if($.inArray(acDetail,historyAccountList)==-1)
				historyAccountList.push(acDetail);
			
			if(eval(amount)>0)
			{
				
				var bankName =  $('#txtReceiptBank-'+index).val()!=undefined?$('#txtReceiptBank-'+index).val():"NA";
				var chequeDDDate = $('#txtReceiptChequeDDDate-'+index).val()!=undefined?$('#txtReceiptChequeDDDate-'+index).val():"NA";
				var chequeDDNo = $('#txtReceiptChequeDDNo-'+index).val()!=undefined?$('#txtReceiptChequeDDNo-'+index).val():"NA";
				
				if(chequeDDNo!='NA' && CrDrType=='Cr' && !isNaN(chequeDDNo))
					chequeNoHistory = eval(chequeDDNo)+1;
				
				var journalType = $(this).find('.rdoRef:checked').val();
				var billId = 0;
				var billNo = 'NA';
				var billDate = 'NA';
				
				if(journalType=='newBill'){
					billId = 0;
					billNo = $(this).find('.textBillNo').val().trim();
					billDate = $(this).find('.textBillDate').val().trim();
				}else if(journalType=='agstBill'){
					billId = $(this).find('.cmbBillList').val();
					billNo = $(this).find('.cmbBillList option:selected').val();
					billDate = $(this).find('.textBillDate').val().trim();
				}
				
				if(billNo==undefined || billNo.trim()=='') 
					billNo = 'NA';
				
				if(billDate==undefined || billDate.trim()=='')
					billDate = 'NA';
				
				argument += '{' 
					     + '\"particular\":\"'+particular+'\",'
					     + '\"amount\":\"'+amount+'\",'
					     + '\"CrDrType\":\"'+CrDrType+'\",'
					     + '\"bankName\":\"'+bankName+'\",'
					     + '\"chequeDDNo\":\"'+chequeDDNo+'\",'
					     + '\"chequeDDDate\":\"'+chequeDDDate+'\",'					     
					     + '\"journalType\":\"'+journalType+'\",'
					     + '\"billId\":\"'+billId+'\",'
					     + '\"billNo\":\"'+billNo+'\",'
					     + '\"billDate\":\"'+billDate+'\",'
					     + '\"studenthostelfineid\":\"'+studenthostelfineid+'\",'
					     + '\"quotId\":\"0\",'
					     + '\"studFeeInvoiceIdS\":\"'+studFeeInvoiceIdS+'\"'
					     
					     + '},';
			}
		}
		}
	});
	if(returnFlag) {
		jAlert("Something went wrong, Please try after some time");
		return false;
	}
	argument=argument.substring(0, argument.length-1);
	argument +=  ']';
	
	//var fasPolicy = $('#cmbPolicy').val();
	var receptDate = $('#txtReceiptDate').val().trim();
	
	var PaidToType = $('.rdoPaidTo:checked').val();
	var PaidTo = '';
	
	var department = $('#cmbDept').val();
	var txtrmk = $('#txtRemark').val().trim();
	var remark=$('#progNameOrCourseId').attr('studInfo')+', '+txtrmk;
	
	var flag = true;
	
	/*var isAdvanced = $('#isEmpAdvance').is(':checked');*/
	
	if(department==null || department==undefined)
		department = 0;
	
	var resourse = 'NA';
	if(PaidToType!='Other')
	{
		if(PaidToType!='Employee')
			isAdvanced = false;
		
		PaidTo = $('#PaidTo option:selected').text();
		resourse = $('#PaidTo').val();
	}
	else
	{
		PaidTo = $('#PaidTo').val().trim();
		resourse = 'NA';
	}
	/*if($('#btnSubmitNewReceipt').data('studentHostelFineId')!=undefined || $('#btnSubmitNewReceipt').data('studentHostelFineId')!=0  || $('#btnSubmitNewReceipt').data('studentHostelFineId')!='0')
		var studentHostelFineId=$('#btnSubmitNewReceipt').data('studentHostelFineId');*/
		
	if(fasPolicy==null || fasPolicy==0 || fasPolicy==undefined)
	{
		jAlert('Select finance policy','warning');
		flag = false;
	}
	else if(receptDate==null || receptDate=='' || receptDate==undefined)
	{
		jAlert('Enter receipt date','warning');
		flag = false;
	}
	else if(totalCredit!=totalDebit)
	{
		jAlert('Credit amount should match Debit amount','warning');
		flag = false;
	}
	if(flag)
	{
		var stDate = $('#cmbFinancialYear :selected').data('stDate');
		var enDate = $('#cmbFinancialYear :selected').data('enDate');
		
		$('#hdFasPolicy').val(fasPolicy);
		$('#hdStDate').val(stDate);
		$('#hdEnDate').val(enDate);
		FeeData = JSON.stringify(FeeData);
		
		$.ajax({
			url:'SubmitRefundPaymentVoucherHostel.json',
			dataType:'json',
			type:'POST',
			data:{
				fasPolicy:fasPolicy,
				txtReceiptDate:receptDate,
				paidToType:PaidToType,
				paidTo:PaidTo,
				resourse:resourse+'',
				cmbDept:department+'',
				stDate:stDate,
				enDate:enDate,
				txtRemark:remark,
				accountDetails:argument,
				FeeData:FeeData,
				studentFeeInvoiceId:studentFeeInvoiceId,
				student:student,
			},
			async:false,
			beforeSend:function() {
				startCommonAjaxSpinner();
			},
			complete: function() {
				stopCommonAjaxSpinner();
				
			},
			success:function(replay){
				//getStudentFeeDueReportOverallByStudentBatchId1(item.studentId,item.studentBatchId);
				//getStudentFeeDueReportOverallByStudentBatchId(replay.studentId,replay.StudentInstituteCourseSemesterBatchId);
				callback(flag,replay);
				/*jAlert(replay.msg);
				if(!replay.error){
					var instituteName = $('#instituteName').val();
					generatePaymentVoucher(replay.incomeReceipt,replay.receiptNo,replay.resCreatedBy,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark);
					getFilteredPaymentVoucher();
				}*/
				/*generatePaymentVoucher2(replay.incomeReceipt,replay.receiptNo,replay.receiptDate,replay.receivedFrom,replay.receivedForDetail,replay.paymentDetail,replay.bankDetail,instituteName,replay.remark);*/
				
			},
			error:function(){
				jAlert("Something went wrong, Please try after some time");
			}
		});
	}else{
		try{
			callback(flag,new Array());
		}catch (e) {}
	}
}
